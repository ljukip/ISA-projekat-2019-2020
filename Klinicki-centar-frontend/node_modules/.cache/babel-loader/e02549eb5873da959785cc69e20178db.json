{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { StyleSheet, Animated, TouchableWithoutFeedback, View } from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nimport CardCover from './CardCover'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nimport CardTitle from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nclass Card extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      // @ts-ignore\n      elevation: new Animated.Value(this.props.elevation)\n    });\n\n    _defineProperty(this, \"handlePressIn\", () => {\n      const {\n        scale\n      } = this.props.theme.animation;\n      Animated.timing(this.state.elevation, {\n        toValue: 8,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    });\n\n    _defineProperty(this, \"handlePressOut\", () => {\n      const {\n        scale\n      } = this.props.theme.animation;\n      Animated.timing(this.state.elevation, {\n        // @ts-ignore\n        toValue: this.props.elevation,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      children,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      elevation: cardElevation,\n      onLongPress,\n      onPress,\n      style,\n      theme,\n      testID,\n      accessible\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"elevation\", \"onLongPress\", \"onPress\", \"style\", \"theme\", \"testID\", \"accessible\"]);\n\n    const {\n      elevation\n    } = this.state;\n    const {\n      roundness\n    } = theme;\n    const total = React.Children.count(children);\n    const siblings = React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) && child.type ? child.type.displayName : null);\n    return /*#__PURE__*/React.createElement(Surface // @ts-ignore\n    , _extends({\n      style: [{\n        borderRadius: roundness,\n        elevation\n      }, style]\n    }, rest), /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n      delayPressIn: 0,\n      disabled: !(onPress || onLongPress),\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressIn: onPress ? this.handlePressIn : undefined,\n      onPressOut: onPress ? this.handlePressOut : undefined,\n      testID: testID,\n      accessible: accessible\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.innerContainer\n    }, React.Children.map(children, (child, index) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n      index,\n      total,\n      siblings\n    }) : child))));\n  }\n\n}\n\n_defineProperty(Card, \"Content\", CardContent);\n\n_defineProperty(Card, \"Actions\", CardActions);\n\n_defineProperty(Card, \"Cover\", CardCover);\n\n_defineProperty(Card, \"Title\", CardTitle);\n\n_defineProperty(Card, \"defaultProps\", {\n  elevation: 1\n});\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"sources":["Card.tsx"],"names":["Card","React","CardContent","CardActions","CardCover","CardTitle","elevation","Animated","scale","toValue","duration","useNativeDriver","render","accessible","rest","roundness","total","siblings","child","borderRadius","onPress","styles","innerContainer","flexGrow","flexShrink","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\ntype State = {\n  elevation: Animated.Value;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Card extends React.Component<Props, State> {\n  // @component ./CardContent.tsx\n  static Content = CardContent;\n  // @component ./CardActions.tsx\n  static Actions = CardActions;\n  // @component ./CardCover.tsx\n  static Cover = CardCover;\n  // @component ./CardTitle.tsx\n  static Title = CardTitle;\n\n  static defaultProps = {\n    elevation: 1,\n  };\n\n  state = {\n    // @ts-ignore\n    elevation: new Animated.Value(this.props.elevation),\n  };\n\n  private handlePressIn = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  private handlePressOut = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.elevation, {\n      // @ts-ignore\n      toValue: this.props.elevation,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  render() {\n    const {\n      children,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      elevation: cardElevation,\n      onLongPress,\n      onPress,\n      style,\n      theme,\n      testID,\n      accessible,\n      ...rest\n    } = this.props;\n    const { elevation } = this.state;\n    const { roundness } = theme;\n    const total = React.Children.count(children);\n    const siblings = React.Children.map(children, (child) =>\n      React.isValidElement(child) && child.type\n        ? (child.type as any).displayName\n        : null\n    );\n    return (\n      <Surface\n        // @ts-ignore\n        style={[{ borderRadius: roundness, elevation }, style]}\n        {...rest}\n      >\n        <TouchableWithoutFeedback\n          delayPressIn={0}\n          disabled={!(onPress || onLongPress)}\n          onLongPress={onLongPress}\n          onPress={onPress}\n          onPressIn={onPress ? this.handlePressIn : undefined}\n          onPressOut={onPress ? this.handlePressOut : undefined}\n          testID={testID}\n          accessible={accessible}\n        >\n          <View style={styles.innerContainer}>\n            {React.Children.map(children, (child, index) =>\n              React.isValidElement(child)\n                ? React.cloneElement(child, {\n                    index,\n                    total,\n                    siblings,\n                  })\n                : child\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default withTheme(Card);\n"]},"metadata":{},"sourceType":"module"}