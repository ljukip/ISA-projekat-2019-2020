{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport config from \"config\";\nimport { handleResponse } from \"../helpers/handle_response.js\";\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem(\"currentUser\")));\nexport const authenticationService = {\n  login,\n  logout,\n  currentUser: currentUserSubject.asObservable(),\n\n  get currentUserValue() {\n    return currentUserSubject.value;\n  }\n\n};\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  };\n  return fetch(`${config.apiUrl}/users/authenticate`, requestOptions).then(handleResponse).then(user => {\n    // store user details and jwt token in local storage to keep user logged in between page refreshes\n    localStorage.setItem(\"currentUser\", JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"currentUser\");\n  currentUserSubject.next(null);\n}","map":{"version":3,"sources":["C:/Users/Ljubica/Desktop/ISA-projekat-2019-2020/klinicki-centar-frontend/src/services/authentication.service.js"],"names":["BehaviorSubject","config","handleResponse","currentUserSubject","JSON","parse","localStorage","getItem","authenticationService","login","logout","currentUser","asObservable","currentUserValue","value","username","password","requestOptions","method","headers","body","stringify","fetch","apiUrl","then","user","setItem","next","removeItem"],"mappings":"AAAA,SAASA,eAAT,QAAgC,MAAhC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,MAAMC,kBAAkB,GAAG,IAAIH,eAAJ,CACzBI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CADyB,CAA3B;AAIA,OAAO,MAAMC,qBAAqB,GAAG;AACnCC,EAAAA,KADmC;AAEnCC,EAAAA,MAFmC;AAGnCC,EAAAA,WAAW,EAAER,kBAAkB,CAACS,YAAnB,EAHsB;;AAInC,MAAIC,gBAAJ,GAAuB;AACrB,WAAOV,kBAAkB,CAACW,KAA1B;AACD;;AANkC,CAA9B;;AASP,SAASL,KAAT,CAAeM,QAAf,EAAyBC,QAAzB,EAAmC;AACjC,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEhB,IAAI,CAACiB,SAAL,CAAe;AAAEN,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAf;AAHe,GAAvB;AAMA,SAAOM,KAAK,CAAE,GAAErB,MAAM,CAACsB,MAAO,qBAAlB,EAAwCN,cAAxC,CAAL,CACJO,IADI,CACCtB,cADD,EAEJsB,IAFI,CAEEC,IAAD,IAAU;AACd;AACAnB,IAAAA,YAAY,CAACoB,OAAb,CAAqB,aAArB,EAAoCtB,IAAI,CAACiB,SAAL,CAAeI,IAAf,CAApC;AACAtB,IAAAA,kBAAkB,CAACwB,IAAnB,CAAwBF,IAAxB;AAEA,WAAOA,IAAP;AACD,GARI,CAAP;AASD;;AAED,SAASf,MAAT,GAAkB;AAChB;AACAJ,EAAAA,YAAY,CAACsB,UAAb,CAAwB,aAAxB;AACAzB,EAAAA,kBAAkB,CAACwB,IAAnB,CAAwB,IAAxB;AACD","sourcesContent":["import { BehaviorSubject } from \"rxjs\";\r\n\r\nimport config from \"config\";\r\nimport { handleResponse } from \"../helpers/handle_response.js\";\r\n\r\nconst currentUserSubject = new BehaviorSubject(\r\n  JSON.parse(localStorage.getItem(\"currentUser\"))\r\n);\r\n\r\nexport const authenticationService = {\r\n  login,\r\n  logout,\r\n  currentUser: currentUserSubject.asObservable(),\r\n  get currentUserValue() {\r\n    return currentUserSubject.value;\r\n  },\r\n};\r\n\r\nfunction login(username, password) {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ username, password }),\r\n  };\r\n\r\n  return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n      localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n      currentUserSubject.next(user);\r\n\r\n      return user;\r\n    });\r\n}\r\n\r\nfunction logout() {\r\n  // remove user from local storage to log user out\r\n  localStorage.removeItem(\"currentUser\");\r\n  currentUserSubject.next(null);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}