{"ast":null,"code":"/*!\r\n * Copyright 2016 Amazon.com,\r\n * Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Amazon Software License (the \"License\").\r\n * You may not use this file except in compliance with the\r\n * License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/asl/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is\r\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, express or implied. See the License\r\n * for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar dataMemory = {};\n/** @class */\n\nvar MemoryStorage = /*#__PURE__*/function () {\n  function MemoryStorage() {}\n  /**\r\n   * This is used to set a specific item in storage\r\n   * @param {string} key - the key for the item\r\n   * @param {object} value - the value\r\n   * @returns {string} value that was set\r\n   */\n\n\n  MemoryStorage.setItem = function setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n  /**\r\n   * This is used to get a specific key from storage\r\n   * @param {string} key - the key for the item\r\n   * This is used to clear the storage\r\n   * @returns {string} the data item\r\n   */\n  ;\n\n  MemoryStorage.getItem = function getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n  /**\r\n   * This is used to remove an item from storage\r\n   * @param {string} key - the key being set\r\n   * @returns {string} value - value that was deleted\r\n   */\n  ;\n\n  MemoryStorage.removeItem = function removeItem(key) {\n    return delete dataMemory[key];\n  }\n  /**\r\n   * This is used to clear the storage\r\n   * @returns {string} nothing\r\n   */\n  ;\n\n  MemoryStorage.clear = function clear() {\n    dataMemory = {};\n    return dataMemory;\n  };\n\n  return MemoryStorage;\n}();\n/** @class */\n\n\nvar StorageHelper = /*#__PURE__*/function () {\n  /**\r\n   * This is used to get a storage object\r\n   * @returns {object} the storage\r\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\r\n   * This is used to return the storage\r\n   * @returns {object} the storage\r\n   */\n\n\n  var _proto = StorageHelper.prototype;\n\n  _proto.getStorage = function getStorage() {\n    return this.storageWindow;\n  };\n\n  return StorageHelper;\n}();\n\nexport { StorageHelper as default };","map":{"version":3,"sources":["C:/Users/Ljubica/Desktop/ISA-projekat-2019-2020/klinicki-centar-frontend/node_modules/amazon-cognito-identity-js/es/StorageHelper.js"],"names":["dataMemory","MemoryStorage","setItem","key","value","getItem","Object","prototype","hasOwnProperty","call","undefined","removeItem","clear","StorageHelper","storageWindow","window","localStorage","exception","_proto","getStorage","default"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,IAAIA,UAAU,GAAG,EAAjB;AACA;;AAEA,IAAIC,aAAa,GAAG,aAAa,YAAY;AAC3C,WAASA,aAAT,GAAyB,CAAE;AAE3B;;;;;;;;AAMAA,EAAAA,aAAa,CAACC,OAAd,GAAwB,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,KAAtB,EAA6B;AACnDJ,IAAAA,UAAU,CAACG,GAAD,CAAV,GAAkBC,KAAlB;AACA,WAAOJ,UAAU,CAACG,GAAD,CAAjB;AACD;AACD;;;;;;AAJA;;AAYAF,EAAAA,aAAa,CAACI,OAAd,GAAwB,SAASA,OAAT,CAAiBF,GAAjB,EAAsB;AAC5C,WAAOG,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCT,UAArC,EAAiDG,GAAjD,IAAwDH,UAAU,CAACG,GAAD,CAAlE,GAA0EO,SAAjF;AACD;AACD;;;;;AAHA;;AAUAT,EAAAA,aAAa,CAACU,UAAd,GAA2B,SAASA,UAAT,CAAoBR,GAApB,EAAyB;AAClD,WAAO,OAAOH,UAAU,CAACG,GAAD,CAAxB;AACD;AACD;;;;AAHA;;AASAF,EAAAA,aAAa,CAACW,KAAd,GAAsB,SAASA,KAAT,GAAiB;AACrCZ,IAAAA,UAAU,GAAG,EAAb;AACA,WAAOA,UAAP;AACD,GAHD;;AAKA,SAAOC,aAAP;AACD,CA9CgC,EAAjC;AA+CA;;;AAGA,IAAIY,aAAa,GAAG,aAAa,YAAY;AAC3C;;;;AAIA,WAASA,aAAT,GAAyB;AACvB,QAAI;AACF,WAAKC,aAAL,GAAqBC,MAAM,CAACC,YAA5B;AACA,WAAKF,aAAL,CAAmBZ,OAAnB,CAA2B,qBAA3B,EAAkD,CAAlD;AACA,WAAKY,aAAL,CAAmBH,UAAnB,CAA8B,qBAA9B;AACD,KAJD,CAIE,OAAOM,SAAP,EAAkB;AAClB,WAAKH,aAAL,GAAqBb,aAArB;AACD;AACF;AACD;;;;;;AAMA,MAAIiB,MAAM,GAAGL,aAAa,CAACN,SAA3B;;AAEAW,EAAAA,MAAM,CAACC,UAAP,GAAoB,SAASA,UAAT,GAAsB;AACxC,WAAO,KAAKL,aAAZ;AACD,GAFD;;AAIA,SAAOD,aAAP;AACD,CA3BgC,EAAjC;;AA6BA,SAASA,aAAa,IAAIO,OAA1B","sourcesContent":["/*!\r\n * Copyright 2016 Amazon.com,\r\n * Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Amazon Software License (the \"License\").\r\n * You may not use this file except in compliance with the\r\n * License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/asl/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is\r\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, express or implied. See the License\r\n * for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar dataMemory = {};\r\n/** @class */\r\n\r\nvar MemoryStorage = /*#__PURE__*/function () {\r\n  function MemoryStorage() {}\r\n\r\n  /**\r\n   * This is used to set a specific item in storage\r\n   * @param {string} key - the key for the item\r\n   * @param {object} value - the value\r\n   * @returns {string} value that was set\r\n   */\r\n  MemoryStorage.setItem = function setItem(key, value) {\r\n    dataMemory[key] = value;\r\n    return dataMemory[key];\r\n  }\r\n  /**\r\n   * This is used to get a specific key from storage\r\n   * @param {string} key - the key for the item\r\n   * This is used to clear the storage\r\n   * @returns {string} the data item\r\n   */\r\n  ;\r\n\r\n  MemoryStorage.getItem = function getItem(key) {\r\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\r\n  }\r\n  /**\r\n   * This is used to remove an item from storage\r\n   * @param {string} key - the key being set\r\n   * @returns {string} value - value that was deleted\r\n   */\r\n  ;\r\n\r\n  MemoryStorage.removeItem = function removeItem(key) {\r\n    return delete dataMemory[key];\r\n  }\r\n  /**\r\n   * This is used to clear the storage\r\n   * @returns {string} nothing\r\n   */\r\n  ;\r\n\r\n  MemoryStorage.clear = function clear() {\r\n    dataMemory = {};\r\n    return dataMemory;\r\n  };\r\n\r\n  return MemoryStorage;\r\n}();\r\n/** @class */\r\n\r\n\r\nvar StorageHelper = /*#__PURE__*/function () {\r\n  /**\r\n   * This is used to get a storage object\r\n   * @returns {object} the storage\r\n   */\r\n  function StorageHelper() {\r\n    try {\r\n      this.storageWindow = window.localStorage;\r\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\r\n      this.storageWindow.removeItem('aws.cognito.test-ls');\r\n    } catch (exception) {\r\n      this.storageWindow = MemoryStorage;\r\n    }\r\n  }\r\n  /**\r\n   * This is used to return the storage\r\n   * @returns {object} the storage\r\n   */\r\n\r\n\r\n  var _proto = StorageHelper.prototype;\r\n\r\n  _proto.getStorage = function getStorage() {\r\n    return this.storageWindow;\r\n  };\r\n\r\n  return StorageHelper;\r\n}();\r\n\r\nexport { StorageHelper as default };"]},"metadata":{},"sourceType":"module"}