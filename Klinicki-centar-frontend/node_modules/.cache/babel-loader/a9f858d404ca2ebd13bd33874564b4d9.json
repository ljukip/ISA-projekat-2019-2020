{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"AbortMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({}, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.MultipartUpload !== undefined) {\n            contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"Cache-Control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"Content-Disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"Content-Encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"Content-Language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"Content-Type\": input.ContentType\n          }), isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-MD5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.Expires) && {\n            Expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.MetadataDirective) && {\n            \"x-amz-metadata-directive\": input.MetadataDirective\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.TaggingDirective) && {\n            \"x-amz-tagging-directive\": input.TaggingDirective\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            acc[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n            return acc;\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"CopyObject\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n            \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString()\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.CreateBucketConfiguration !== undefined) {\n            contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"Cache-Control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"Content-Disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"Content-Encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"Content-Language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"Content-Type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            Expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            acc[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n            return acc;\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            uploads: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"DeleteObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            delete: \"\"\n          };\n\n          if (input.Delete !== undefined) {\n            contents = serializeAws_restXmlDelete(input.Delete, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"GetBucketAnalyticsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"GetBucketInventoryConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            location: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"GetBucketMetricsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policyStatus: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.IfMatch) && {\n            \"If-Match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"If-Modified-Since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"If-None-Match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"If-Unmodified-Since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            Range: input.Range\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"x-id\": \"GetObject\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.ResponseCacheControl !== undefined && {\n            \"response-cache-control\": input.ResponseCacheControl\n          }), input.ResponseContentDisposition !== undefined && {\n            \"response-content-disposition\": input.ResponseContentDisposition\n          }), input.ResponseContentEncoding !== undefined && {\n            \"response-content-encoding\": input.ResponseContentEncoding\n          }), input.ResponseContentLanguage !== undefined && {\n            \"response-content-language\": input.ResponseContentLanguage\n          }), input.ResponseContentType !== undefined && {\n            \"response-content-type\": input.ResponseContentType\n          }), input.ResponseExpires !== undefined && {\n            \"response-expires\": (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            torrent: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.IfMatch) && {\n            \"If-Match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"If-Modified-Since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"If-None-Match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"If-Unmodified-Since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            Range: input.Range\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({}, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"ListBucketAnalyticsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"ListBucketInventoryConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"ListBucketMetricsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/\";\n          body = \"\";\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            uploads: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxUploads !== undefined && {\n            \"max-uploads\": input.MaxUploads.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.UploadIdMarker !== undefined && {\n            \"upload-id-marker\": input.UploadIdMarker\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign({}, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.Marker !== undefined && {\n            marker: input.Marker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"list-type\": \"2\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          }), input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.FetchOwner !== undefined && {\n            \"fetch-owner\": input.FetchOwner.toString()\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.StartAfter !== undefined && {\n            \"start-after\": input.StartAfter\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            versions: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.VersionIdMarker !== undefined && {\n            \"version-id-marker\": input.VersionIdMarker\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListPartsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign({\n            \"x-id\": \"ListParts\"\n          }, input.MaxParts !== undefined && {\n            \"max-parts\": input.MaxParts.toString()\n          }), input.PartNumberMarker !== undefined && {\n            \"part-number-marker\": input.PartNumberMarker.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n\n          if (input.AccelerateConfiguration !== undefined) {\n            contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.AnalyticsConfiguration !== undefined) {\n            contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n\n          if (input.CORSConfiguration !== undefined) {\n            contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.InventoryConfiguration !== undefined) {\n            contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n\n          if (input.LifecycleConfiguration !== undefined) {\n            contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n\n          if (input.BucketLoggingStatus !== undefined) {\n            contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.MetricsConfiguration !== undefined) {\n            contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"Content-Type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n\n          if (input.NotificationConfiguration !== undefined) {\n            contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, bodyNode, node, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n            \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n          bodyNode = new __XmlNode(\"PutBucketPolicyRequest\");\n          bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n          if (input.Policy !== undefined) {\n            node = new __XmlNode(\"Policy\").addChildNode(new __XmlText(input.Policy)).withName(\"Policy\");\n            bodyNode.addChildNode(node);\n          }\n\n          body += bodyNode.toString();\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n\n          if (input.ReplicationConfiguration !== undefined) {\n            contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n\n          if (input.RequestPaymentConfiguration !== undefined) {\n            contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n\n          if (input.VersioningConfiguration !== undefined) {\n            contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n\n          if (input.WebsiteConfiguration !== undefined) {\n            contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"Cache-Control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"Content-Disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"Content-Encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"Content-Language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"Content-Length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"Content-Type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            Expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            acc[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\n            return acc;\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"PutObject\"\n          };\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.LegalHold !== undefined) {\n            contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n\n          if (input.ObjectLockConfiguration !== undefined) {\n            contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Retention !== undefined) {\n            contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            restore: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.RestoreRequest !== undefined) {\n            contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"Content-Type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            select: \"\",\n            \"select-type\": \"2\"\n          };\n          body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n          bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n          bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n          if (input.Expression !== undefined) {\n            node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ExpressionType !== undefined) {\n            node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.InputSerialization !== undefined) {\n            node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.OutputSerialization !== undefined) {\n            node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.RequestProgress !== undefined) {\n            node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ScanRange !== undefined) {\n            node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n            bodyNode.addChildNode(node);\n          }\n\n          body += bodyNode.toString();\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ContentLength) && {\n            \"Content-Length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"Content-MD5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPart\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"Content-Type\": \"\"\n          }, isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceRange) && {\n            \"x-amz-copy-source-range\": input.CopySourceRange\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-MD5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPartCopy\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"AbortMultipartUploadOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CompleteMultipartUploadOutput\",\n            Bucket: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Key: undefined,\n            Location: undefined,\n            RequestCharged: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = data[\"ETag\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"Location\"] !== undefined) {\n            contents.Location = data[\"Location\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCopyObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CopyObjectOutput\",\n            CopyObjectResult: undefined,\n            CopySourceVersionId: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateBucketOutput\",\n            Location: undefined\n          };\n\n          if (output.headers[\"location\"] !== undefined) {\n            contents.Location = output.headers[\"location\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, parsedBody, message;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"CreateMultipartUploadOutput\",\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Key: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteObjectOutput\",\n            DeleteMarker: undefined,\n            RequestCharged: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteObjectsOutput\",\n            Deleted: undefined,\n            Errors: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Deleted === \"\") {\n            contents.Deleted = [];\n          }\n\n          if (data[\"Deleted\"] !== undefined) {\n            contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n          }\n\n          if (data.Error === \"\") {\n            contents.Errors = [];\n          }\n\n          if (data[\"Error\"] !== undefined) {\n            contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"DeleteObjectTaggingOutput\",\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketAccelerateConfigurationOutput\",\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketAclOutput\",\n            Grants: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketAnalyticsConfigurationOutput\",\n            AnalyticsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketCorsOutput\",\n            CORSRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CORSRule === \"\") {\n            contents.CORSRules = [];\n          }\n\n          if (data[\"CORSRule\"] !== undefined) {\n            contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketEncryptionOutput\",\n            ServerSideEncryptionConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketInventoryConfigurationOutput\",\n            InventoryConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketLifecycleConfigurationOutput\",\n            Rules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Rule === \"\") {\n            contents.Rules = [];\n          }\n\n          if (data[\"Rule\"] !== undefined) {\n            contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketLocationOutput\",\n            LocationConstraint: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LocationConstraint\"] !== undefined) {\n            contents.LocationConstraint = data[\"LocationConstraint\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketLoggingOutput\",\n            LoggingEnabled: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LoggingEnabled\"] !== undefined) {\n            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketMetricsConfigurationOutput\",\n            MetricsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"NotificationConfiguration\",\n            LambdaFunctionConfigurations: undefined,\n            QueueConfigurations: undefined,\n            TopicConfigurations: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CloudFunctionConfiguration === \"\") {\n            contents.LambdaFunctionConfigurations = [];\n          }\n\n          if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n          }\n\n          if (data.QueueConfiguration === \"\") {\n            contents.QueueConfigurations = [];\n          }\n\n          if (data[\"QueueConfiguration\"] !== undefined) {\n            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n          }\n\n          if (data.TopicConfiguration === \"\") {\n            contents.TopicConfigurations = [];\n          }\n\n          if (data[\"TopicConfiguration\"] !== undefined) {\n            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketPolicyOutput\",\n            Policy: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Policy\"] !== undefined) {\n            contents.Policy = data[\"Policy\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketPolicyStatusOutput\",\n            PolicyStatus: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketReplicationOutput\",\n            ReplicationConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketRequestPaymentOutput\",\n            Payer: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Payer\"] !== undefined) {\n            contents.Payer = data[\"Payer\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketTaggingOutput\",\n            TagSet: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketVersioningOutput\",\n            MFADelete: undefined,\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"MfaDelete\"] !== undefined) {\n            contents.MFADelete = data[\"MfaDelete\"];\n          }\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetBucketWebsiteOutput\",\n            ErrorDocument: undefined,\n            IndexDocument: undefined,\n            RedirectAllRequestsTo: undefined,\n            RoutingRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ErrorDocument\"] !== undefined) {\n            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n          }\n\n          if (data[\"IndexDocument\"] !== undefined) {\n            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n          }\n\n          if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n          }\n\n          if (data.RoutingRules === \"\") {\n            contents.RoutingRules = [];\n          }\n\n          if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n            contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 400) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        __type: \"GetObjectOutput\",\n        AcceptRanges: undefined,\n        Body: undefined,\n        CacheControl: undefined,\n        ContentDisposition: undefined,\n        ContentEncoding: undefined,\n        ContentLanguage: undefined,\n        ContentLength: undefined,\n        ContentRange: undefined,\n        ContentType: undefined,\n        DeleteMarker: undefined,\n        ETag: undefined,\n        Expiration: undefined,\n        Expires: undefined,\n        LastModified: undefined,\n        Metadata: undefined,\n        MissingMeta: undefined,\n        ObjectLockLegalHoldStatus: undefined,\n        ObjectLockMode: undefined,\n        ObjectLockRetainUntilDate: undefined,\n        PartsCount: undefined,\n        ReplicationStatus: undefined,\n        RequestCharged: undefined,\n        Restore: undefined,\n        SSECustomerAlgorithm: undefined,\n        SSECustomerKeyMD5: undefined,\n        SSEKMSKeyId: undefined,\n        ServerSideEncryption: undefined,\n        StorageClass: undefined,\n        TagCount: undefined,\n        VersionId: undefined,\n        WebsiteRedirectLocation: undefined\n      };\n\n      if (output.headers[\"accept-ranges\"] !== undefined) {\n        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n      }\n\n      if (output.headers[\"cache-control\"] !== undefined) {\n        contents.CacheControl = output.headers[\"cache-control\"];\n      }\n\n      if (output.headers[\"content-disposition\"] !== undefined) {\n        contents.ContentDisposition = output.headers[\"content-disposition\"];\n      }\n\n      if (output.headers[\"content-encoding\"] !== undefined) {\n        contents.ContentEncoding = output.headers[\"content-encoding\"];\n      }\n\n      if (output.headers[\"content-language\"] !== undefined) {\n        contents.ContentLanguage = output.headers[\"content-language\"];\n      }\n\n      if (output.headers[\"content-length\"] !== undefined) {\n        contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n      }\n\n      if (output.headers[\"content-range\"] !== undefined) {\n        contents.ContentRange = output.headers[\"content-range\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n        contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n      }\n\n      if (output.headers[\"etag\"] !== undefined) {\n        contents.ETag = output.headers[\"etag\"];\n      }\n\n      if (output.headers[\"x-amz-expiration\"] !== undefined) {\n        contents.Expiration = output.headers[\"x-amz-expiration\"];\n      }\n\n      if (output.headers[\"expires\"] !== undefined) {\n        contents.Expires = new Date(output.headers[\"expires\"]);\n      }\n\n      if (output.headers[\"last-modified\"] !== undefined) {\n        contents.LastModified = new Date(output.headers[\"last-modified\"]);\n      }\n\n      if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n        contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n      }\n\n      if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n        contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n        contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n      }\n\n      if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n        contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n      }\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      if (output.headers[\"x-amz-restore\"] !== undefined) {\n        contents.Restore = output.headers[\"x-amz-restore\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n        contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n        contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n        contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n        contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n      }\n\n      if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n      }\n\n      if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n        contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-version-id\"] !== undefined) {\n        contents.VersionId = output.headers[\"x-amz-version-id\"];\n      }\n\n      if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n        contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n      }\n\n      Object.keys(output.headers).forEach(function (header) {\n        if (contents.Metadata === undefined) {\n          contents.Metadata = {};\n        }\n\n        if (header.startsWith(\"x-amz-meta-\")) {\n          contents.Metadata[header.substring(11)] = output.headers[header];\n        }\n      });\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectAclOutput\",\n            Grants: undefined,\n            Owner: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectLegalHoldOutput\",\n            LegalHold: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectLockConfigurationOutput\",\n            ObjectLockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectRetentionOutput\",\n            Retention: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetObjectTaggingOutput\",\n            TagSet: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 400) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        __type: \"GetObjectTorrentOutput\",\n        Body: undefined,\n        RequestCharged: undefined\n      };\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"GetPublicAccessBlockOutput\",\n            PublicAccessBlockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"HeadObjectOutput\",\n            AcceptRanges: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined\n          };\n\n          if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n          }\n\n          if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n          }\n\n          if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n          }\n\n          if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n          }\n\n          if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n          }\n\n          if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n          }\n\n          if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n          }\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = new Date(output.headers[\"expires\"]);\n          }\n\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = new Date(output.headers[\"last-modified\"]);\n          }\n\n          if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n          }\n\n          if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n          }\n\n          if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n          }\n\n          if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n          }\n\n          Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n              contents.Metadata = {};\n            }\n\n            if (header.startsWith(\"x-amz-meta-\")) {\n              contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n          });\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketAnalyticsConfigurationsOutput\",\n            AnalyticsConfigurationList: undefined,\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AnalyticsConfiguration === \"\") {\n            contents.AnalyticsConfigurationList = [];\n          }\n\n          if (data[\"AnalyticsConfiguration\"] !== undefined) {\n            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketInventoryConfigurationsOutput\",\n            ContinuationToken: undefined,\n            InventoryConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data.InventoryConfiguration === \"\") {\n            contents.InventoryConfigurationList = [];\n          }\n\n          if (data[\"InventoryConfiguration\"] !== undefined) {\n            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketMetricsConfigurationsOutput\",\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            MetricsConfigurationList: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data.MetricsConfiguration === \"\") {\n            contents.MetricsConfigurationList = [];\n          }\n\n          if (data[\"MetricsConfiguration\"] !== undefined) {\n            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListBucketsOutput\",\n            Buckets: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Buckets === \"\") {\n            contents.Buckets = [];\n          }\n\n          if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n            contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListMultipartUploadsOutput\",\n            Bucket: undefined,\n            CommonPrefixes: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxUploads: undefined,\n            NextKeyMarker: undefined,\n            NextUploadIdMarker: undefined,\n            Prefix: undefined,\n            UploadIdMarker: undefined,\n            Uploads: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxUploads\"] !== undefined) {\n            contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextUploadIdMarker\"] !== undefined) {\n            contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"UploadIdMarker\"] !== undefined) {\n            contents.UploadIdMarker = data[\"UploadIdMarker\"];\n          }\n\n          if (data.Upload === \"\") {\n            contents.Uploads = [];\n          }\n\n          if (data[\"Upload\"] !== undefined) {\n            contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListObjectsOutput\",\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            Marker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextMarker: undefined,\n            Prefix: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Marker\"] !== undefined) {\n            contents.Marker = data[\"Marker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextMarker\"] !== undefined) {\n            contents.NextMarker = data[\"NextMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListObjectsV2Output\",\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            ContinuationToken: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyCount: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextContinuationToken: undefined,\n            Prefix: undefined,\n            StartAfter: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyCount\"] !== undefined) {\n            contents.KeyCount = parseInt(data[\"KeyCount\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"StartAfter\"] !== undefined) {\n            contents.StartAfter = data[\"StartAfter\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListObjectVersionsOutput\",\n            CommonPrefixes: undefined,\n            DeleteMarkers: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextKeyMarker: undefined,\n            NextVersionIdMarker: undefined,\n            Prefix: undefined,\n            VersionIdMarker: undefined,\n            Versions: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.DeleteMarker === \"\") {\n            contents.DeleteMarkers = [];\n          }\n\n          if (data[\"DeleteMarker\"] !== undefined) {\n            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextVersionIdMarker\"] !== undefined) {\n            contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"VersionIdMarker\"] !== undefined) {\n            contents.VersionIdMarker = data[\"VersionIdMarker\"];\n          }\n\n          if (data.Version === \"\") {\n            contents.Versions = [];\n          }\n\n          if (data[\"Version\"] !== undefined) {\n            contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListPartsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"ListPartsOutput\",\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Initiator: undefined,\n            IsTruncated: undefined,\n            Key: undefined,\n            MaxParts: undefined,\n            NextPartNumberMarker: undefined,\n            Owner: undefined,\n            PartNumberMarker: undefined,\n            Parts: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Initiator\"] !== undefined) {\n            contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"MaxParts\"] !== undefined) {\n            contents.MaxParts = parseInt(data[\"MaxParts\"]);\n          }\n\n          if (data[\"NextPartNumberMarker\"] !== undefined) {\n            contents.NextPartNumberMarker = parseInt(data[\"NextPartNumberMarker\"]);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          if (data[\"PartNumberMarker\"] !== undefined) {\n            contents.PartNumberMarker = parseInt(data[\"PartNumberMarker\"]);\n          }\n\n          if (data.Part === \"\") {\n            contents.Parts = [];\n          }\n\n          if (data[\"Part\"] !== undefined) {\n            contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n          }\n\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = data[\"StorageClass\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectOutput\",\n            ETag: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectAclOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectLegalHoldOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectLockConfigurationOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectRetentionOutput\",\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"PutObjectTaggingOutput\",\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"RestoreObjectOutput\",\n            RequestCharged: undefined,\n            RestoreOutputPath: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n            contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 400) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        __type: \"SelectObjectContentOutput\",\n        Payload: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4\n                /*yield*/\n                , deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _b.sent()];\n            }\n          });\n        });\n      });\n      contents.Payload = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UploadPartOutput\",\n            ETag: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            __type: \"UploadPartCopyOutput\",\n            CopyPartResult: undefined,\n            CopySourceVersionId: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!(output[\"Cont\"] !== undefined)) return [3\n          /*break*/\n          , 2];\n          _a = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n\n        case 1:\n          return [2\n          /*return*/\n          , (_a.Cont = _f.sent(), _a)];\n\n        case 2:\n          if (!(output[\"End\"] !== undefined)) return [3\n          /*break*/\n          , 4];\n          _b = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n\n        case 3:\n          return [2\n          /*return*/\n          , (_b.End = _f.sent(), _b)];\n\n        case 4:\n          if (!(output[\"Progress\"] !== undefined)) return [3\n          /*break*/\n          , 6];\n          _c = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n\n        case 5:\n          return [2\n          /*return*/\n          , (_c.Progress = _f.sent(), _c)];\n\n        case 6:\n          if (!(output[\"Records\"] !== undefined)) return [3\n          /*break*/\n          , 8];\n          _d = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n\n        case 7:\n          return [2\n          /*return*/\n          , (_d.Records = _f.sent(), _d)];\n\n        case 8:\n          if (!(output[\"Stats\"] !== undefined)) return [3\n          /*break*/\n          , 10];\n          _e = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n\n        case 9:\n          return [2\n          /*return*/\n          , (_e.Stats = _f.sent(), _e)];\n\n        case 10:\n          return [2\n          /*return*/\n          , {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlEndEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {\n            __type: \"ProgressEvent\"\n          };\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {\n        __type: \"RecordsEvent\"\n      };\n      contents.Payload = output.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {\n            __type: \"StatsEvent\"\n          };\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyExists\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyOwnedByYou\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchBucket\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchKey\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchUpload\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectAlreadyInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectNotInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n\n  if (input.DaysAfterInitiation !== undefined) {\n    var node = new __XmlNode(\"DaysAfterInitiation\").addChildNode(new __XmlText(String(input.DaysAfterInitiation))).withName(\"DaysAfterInitiation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n\n  if (input.Grants !== undefined) {\n    var nodes = serializeAws_restXmlGrants(input.Grants, context);\n    var containerNode_1 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_1.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_1);\n  }\n\n  if (input.Owner !== undefined) {\n    var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n\n  if (input.Owner !== undefined) {\n    var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\n  return input.map(function (entry) {\n    var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\n  return input.map(function (entry) {\n    var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\n  return input.map(function (entry) {\n    var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined) {\n    var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClassAnalysis !== undefined) {\n    var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n\n  if (input.S3BucketDestination !== undefined) {\n    var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n\n  if (input.And !== undefined) {\n    var node = serializeAws_restXmlAnalyticsAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n\n  if (input.Bucket !== undefined) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketAccountId !== undefined) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.BucketAccountId)).withName(\"BucketAccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Format !== undefined) {\n    var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n\n  if (input.Rules !== undefined) {\n    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\n  var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n\n  if (input.LoggingEnabled !== undefined) {\n    var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n\n  if (input.Parts !== undefined) {\n    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPart = function (input, context) {\n  var bodyNode = new __XmlNode(\"CompletedPart\");\n\n  if (input.ETag !== undefined) {\n    var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.PartNumber !== undefined) {\n    var node = new __XmlNode(\"PartNumber\").addChildNode(new __XmlText(String(input.PartNumber))).withName(\"PartNumber\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlCompletedPart(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCondition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Condition\");\n\n  if (input.HttpErrorCodeReturnedEquals !== undefined) {\n    var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\").addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals)).withName(\"HttpErrorCodeReturnedEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KeyPrefixEquals !== undefined) {\n    var node = new __XmlNode(\"KeyPrefixEquals\").addChildNode(new __XmlText(input.KeyPrefixEquals)).withName(\"KeyPrefixEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSConfiguration\");\n\n  if (input.CORSRules !== undefined) {\n    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"CORSRule\");\n\n  if (input.AllowedHeaders !== undefined) {\n    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedMethods !== undefined) {\n    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedOrigins !== undefined) {\n    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ExposeHeaders !== undefined) {\n    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.MaxAgeSeconds !== undefined) {\n    var node = new __XmlNode(\"MaxAgeSeconds\").addChildNode(new __XmlText(String(input.MaxAgeSeconds))).withName(\"MaxAgeSeconds\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRules = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlCORSRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n\n  if (input.LocationConstraint !== undefined) {\n    var node = new __XmlNode(\"BucketLocationConstraint\").addChildNode(new __XmlText(input.LocationConstraint)).withName(\"LocationConstraint\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVInput\");\n\n  if (input.AllowQuotedRecordDelimiter !== undefined) {\n    var node = new __XmlNode(\"AllowQuotedRecordDelimiter\").addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter))).withName(\"AllowQuotedRecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Comments !== undefined) {\n    var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FileHeaderInfo !== undefined) {\n    var node = new __XmlNode(\"FileHeaderInfo\").addChildNode(new __XmlText(input.FileHeaderInfo)).withName(\"FileHeaderInfo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"CSVOutput\");\n\n  if (input.FieldDelimiter !== undefined) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteFields !== undefined) {\n    var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"DefaultRetention\");\n\n  if (input.Days !== undefined) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Mode !== undefined) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Years !== undefined) {\n    var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDelete = function (input, context) {\n  var bodyNode = new __XmlNode(\"Delete\");\n\n  if (input.Objects !== undefined) {\n    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Quiet !== undefined) {\n    var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"DeleteMarkerReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"Destination\");\n\n  if (input.AccessControlTranslation !== undefined) {\n    var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Account !== undefined) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EncryptionConfiguration !== undefined) {\n    var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Metrics !== undefined) {\n    var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicationTime !== undefined) {\n    var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"Encryption\");\n\n  if (input.EncryptionType !== undefined) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.EncryptionType)).withName(\"EncryptionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSContext !== undefined) {\n    var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSKeyId !== undefined) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n\n  if (input.ReplicaKmsKeyID !== undefined) {\n    var node = new __XmlNode(\"ReplicaKmsKeyID\").addChildNode(new __XmlText(input.ReplicaKmsKeyID)).withName(\"ReplicaKmsKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlErrorDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"ErrorDocument\");\n\n  if (input.Key !== undefined) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventList = function (input, context) {\n  return input.map(function (entry) {\n    var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\n  var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"ExistingObjectReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\n  return input.map(function (entry) {\n    var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlFilterRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"FilterRule\");\n\n  if (input.Name !== undefined) {\n    var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined) {\n    var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlFilterRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n\n  if (input.Tier !== undefined) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grant\");\n\n  if (input.Grantee !== undefined) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined) {\n    var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrantee = function (input, context) {\n  var bodyNode = new __XmlNode(\"Grantee\");\n\n  if (input.DisplayName !== undefined) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EmailAddress !== undefined) {\n    var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n\n  if (input.URI !== undefined) {\n    var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrants = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlIndexDocument = function (input, context) {\n  var bodyNode = new __XmlNode(\"IndexDocument\");\n\n  if (input.Suffix !== undefined) {\n    var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"InputSerialization\");\n\n  if (input.CSV !== undefined) {\n    var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CompressionType !== undefined) {\n    var node = new __XmlNode(\"CompressionType\").addChildNode(new __XmlText(input.CompressionType)).withName(\"CompressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined) {\n    var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Parquet !== undefined) {\n    var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n\n  if (input.Destination !== undefined) {\n    var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined) {\n    var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IncludedObjectVersions !== undefined) {\n    var node = new __XmlNode(\"InventoryIncludedObjectVersions\").addChildNode(new __XmlText(input.IncludedObjectVersions)).withName(\"IncludedObjectVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IsEnabled !== undefined) {\n    var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OptionalFields !== undefined) {\n    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    var containerNode_2 = new __XmlNode(\"OptionalFields\");\n    nodes.map(function (node) {\n      containerNode_2.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_2);\n  }\n\n  if (input.Schedule !== undefined) {\n    var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryDestination\");\n\n  if (input.S3BucketDestination !== undefined) {\n    var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryEncryption\");\n\n  if (input.SSEKMS !== undefined) {\n    var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SSES3 !== undefined) {\n    var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryFilter\");\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\n  return input.map(function (entry) {\n    var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n    return node.withName(\"Field\");\n  });\n};\n\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n\n  if (input.AccountId !== undefined) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined) {\n    var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Format !== undefined) {\n    var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\n  var bodyNode = new __XmlNode(\"InventorySchedule\");\n\n  if (input.Frequency !== undefined) {\n    var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONInput\");\n\n  if (input.Type !== undefined) {\n    var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONOutput = function (input, context) {\n  var bodyNode = new __XmlNode(\"JSONOutput\");\n\n  if (input.RecordDelimiter !== undefined) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n\n  if (input.Events !== undefined) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.LambdaFunctionArn !== undefined) {\n    var node = new __XmlNode(\"LambdaFunctionArn\").addChildNode(new __XmlText(input.LambdaFunctionArn)).withName(\"CloudFunction\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n\n  if (input.Date !== undefined) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpiredObjectDeleteMarker !== undefined) {\n    var node = new __XmlNode(\"ExpiredObjectDeleteMarker\").addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker))).withName(\"ExpiredObjectDeleteMarker\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRule\");\n\n  if (input.AbortIncompleteMultipartUpload !== undefined) {\n    var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Expiration !== undefined) {\n    var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.NoncurrentVersionExpiration !== undefined) {\n    var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.NoncurrentVersionTransitions !== undefined) {\n    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Transitions !== undefined) {\n    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n\n  if (input.And !== undefined) {\n    var node = serializeAws_restXmlLifecycleRuleAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlLifecycleRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\n  var bodyNode = new __XmlNode(\"LoggingEnabled\");\n\n  if (input.TargetBucket !== undefined) {\n    var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TargetGrants !== undefined) {\n    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    var containerNode_3 = new __XmlNode(\"TargetGrants\");\n    nodes.map(function (node) {\n      containerNode_3.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_3);\n  }\n\n  if (input.TargetPrefix !== undefined) {\n    var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetadataEntry\");\n\n  if (input.Name !== undefined) {\n    var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined) {\n    var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetrics = function (input, context) {\n  var bodyNode = new __XmlNode(\"Metrics\");\n\n  if (input.EventThreshold !== undefined) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined) {\n    var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"MetricsFilter\");\n\n  if (input.And !== undefined) {\n    var node = serializeAws_restXmlMetricsAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n\n  if (input.NoncurrentDays !== undefined) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n\n  if (input.NoncurrentDays !== undefined) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n\n  if (input.LambdaFunctionConfigurations !== undefined) {\n    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.QueueConfigurations !== undefined) {\n    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.TopicConfigurations !== undefined) {\n    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n\n  if (input.Key !== undefined) {\n    var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n\n  if (input.Key !== undefined) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.VersionId !== undefined) {\n    var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlObjectIdentifier(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n\n  if (input.ObjectLockEnabled !== undefined) {\n    var node = new __XmlNode(\"ObjectLockEnabled\").addChildNode(new __XmlText(input.ObjectLockEnabled)).withName(\"ObjectLockEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rule !== undefined) {\n    var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"ObjectLockLegalHoldStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n\n  if (input.Mode !== undefined) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RetainUntilDate !== undefined) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\")).withName(\"RetainUntilDate\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRule\");\n\n  if (input.DefaultRetention !== undefined) {\n    var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputLocation = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputLocation\");\n\n  if (input.S3 !== undefined) {\n    var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\n  var bodyNode = new __XmlNode(\"OutputSerialization\");\n\n  if (input.CSV !== undefined) {\n    var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined) {\n    var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwner = function (input, context) {\n  var bodyNode = new __XmlNode(\"Owner\");\n\n  if (input.DisplayName !== undefined) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlParquetInput = function (input, context) {\n  var bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n\n  if (input.BlockPublicAcls !== undefined) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicAcls))).withName(\"BlockPublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BlockPublicPolicy !== undefined) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicPolicy))).withName(\"BlockPublicPolicy\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IgnorePublicAcls !== undefined) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.IgnorePublicAcls))).withName(\"IgnorePublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RestrictPublicBuckets !== undefined) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.RestrictPublicBuckets))).withName(\"RestrictPublicBuckets\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"QueueConfiguration\");\n\n  if (input.Events !== undefined) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QueueArn !== undefined) {\n    var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlQueueConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlRedirect = function (input, context) {\n  var bodyNode = new __XmlNode(\"Redirect\");\n\n  if (input.HostName !== undefined) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.HttpRedirectCode !== undefined) {\n    var node = new __XmlNode(\"HttpRedirectCode\").addChildNode(new __XmlText(input.HttpRedirectCode)).withName(\"HttpRedirectCode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyPrefixWith !== undefined) {\n    var node = new __XmlNode(\"ReplaceKeyPrefixWith\").addChildNode(new __XmlText(input.ReplaceKeyPrefixWith)).withName(\"ReplaceKeyPrefixWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyWith !== undefined) {\n    var node = new __XmlNode(\"ReplaceKeyWith\").addChildNode(new __XmlText(input.ReplaceKeyWith)).withName(\"ReplaceKeyWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\n  var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n\n  if (input.HostName !== undefined) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n\n  if (input.Role !== undefined) {\n    var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rules !== undefined) {\n    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRule\");\n\n  if (input.DeleteMarkerReplication !== undefined) {\n    var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined) {\n    var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExistingObjectReplication !== undefined) {\n    var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Priority !== undefined) {\n    var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SourceSelectionCriteria !== undefined) {\n    var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n\n  if (input.And !== undefined) {\n    var node = serializeAws_restXmlReplicationRuleAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRules = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlReplicationRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlReplicationTime = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTime\");\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Time !== undefined) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n\n  if (input.Minutes !== undefined) {\n    var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n\n  if (input.Payer !== undefined) {\n    var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestProgress = function (input, context) {\n  var bodyNode = new __XmlNode(\"RequestProgress\");\n\n  if (input.Enabled !== undefined) {\n    var node = new __XmlNode(\"EnableRequestProgress\").addChildNode(new __XmlText(String(input.Enabled))).withName(\"Enabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\n  var bodyNode = new __XmlNode(\"RestoreRequest\");\n\n  if (input.Days !== undefined) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Description !== undefined) {\n    var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.GlacierJobParameters !== undefined) {\n    var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputLocation !== undefined) {\n    var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SelectParameters !== undefined) {\n    var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tier !== undefined) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined) {\n    var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"RoutingRule\");\n\n  if (input.Condition !== undefined) {\n    var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Redirect !== undefined) {\n    var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRules = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlRoutingRule(entry, context);\n    return node.withName(\"RoutingRule\");\n  });\n};\n\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3KeyFilter\");\n\n  if (input.FilterRules !== undefined) {\n    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlS3Location = function (input, context) {\n  var bodyNode = new __XmlNode(\"S3Location\");\n\n  if (input.AccessControlList !== undefined) {\n    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    var containerNode_4 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_4.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_4);\n  }\n\n  if (input.BucketName !== undefined) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CannedACL !== undefined) {\n    var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined) {\n    var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined) {\n    var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tagging !== undefined) {\n    var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.UserMetadata !== undefined) {\n    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    var containerNode_5 = new __XmlNode(\"UserMetadata\");\n    nodes.map(function (node) {\n      containerNode_5.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_5);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlScanRange = function (input, context) {\n  var bodyNode = new __XmlNode(\"ScanRange\");\n\n  if (input.End !== undefined) {\n    var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Start !== undefined) {\n    var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSelectParameters = function (input, context) {\n  var bodyNode = new __XmlNode(\"SelectParameters\");\n\n  if (input.Expression !== undefined) {\n    var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpressionType !== undefined) {\n    var node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.InputSerialization !== undefined) {\n    var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputSerialization !== undefined) {\n    var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n\n  if (input.KMSMasterKeyID !== undefined) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSMasterKeyID)).withName(\"KMSMasterKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SSEAlgorithm !== undefined) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.SSEAlgorithm)).withName(\"SSEAlgorithm\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n\n  if (input.Rules !== undefined) {\n    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n\n  if (input.ApplyServerSideEncryptionByDefault !== undefined) {\n    var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\n  var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n\n  if (input.SseKmsEncryptedObjects !== undefined) {\n    var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSEKMS = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-KMS\");\n\n  if (input.KeyId !== undefined) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\n  var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSES3 = function (input, context) {\n  var bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n\n  if (input.DataExport !== undefined) {\n    var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n\n  if (input.Destination !== undefined) {\n    var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputSchemaVersion !== undefined) {\n    var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\").addChildNode(new __XmlText(input.OutputSchemaVersion)).withName(\"OutputSchemaVersion\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTag = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tag\");\n\n  if (input.Key !== undefined) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined) {\n    var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagging = function (input, context) {\n  var bodyNode = new __XmlNode(\"Tagging\");\n\n  if (input.TagSet !== undefined) {\n    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    var containerNode_6 = new __XmlNode(\"TagSet\");\n    nodes.map(function (node) {\n      containerNode_6.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_6);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagSet = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlTag(entry, context);\n    return node.withName(\"Tag\");\n  });\n};\n\nvar serializeAws_restXmlTargetGrant = function (input, context) {\n  var bodyNode = new __XmlNode(\"TargetGrant\");\n\n  if (input.Grantee !== undefined) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined) {\n    var node = new __XmlNode(\"BucketLogsPermission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTargetGrants = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlTargetGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"TopicConfiguration\");\n\n  if (input.Events !== undefined) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TopicArn !== undefined) {\n    var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlTopicConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTransition = function (input, context) {\n  var bodyNode = new __XmlNode(\"Transition\");\n\n  if (input.Date !== undefined) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTransitionList = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlUserMetadata = function (input, context) {\n  return input.map(function (entry) {\n    var node = serializeAws_restXmlMetadataEntry(entry, context);\n    return node.withName(\"MetadataEntry\");\n  });\n};\n\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n\n  if (input.MFADelete !== undefined) {\n    var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined) {\n    var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\n  var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n\n  if (input.ErrorDocument !== undefined) {\n    var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IndexDocument !== undefined) {\n    var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RedirectAllRequestsTo !== undefined) {\n    var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RoutingRules !== undefined) {\n    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    var containerNode_7 = new __XmlNode(\"RoutingRules\");\n    nodes.map(function (node) {\n      containerNode_7.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_7);\n  }\n\n  return bodyNode;\n};\n\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\n  var contents = {\n    __type: \"AbortIncompleteMultipartUpload\",\n    DaysAfterInitiation: undefined\n  };\n\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\n  var contents = {\n    __type: \"AccessControlTranslation\",\n    Owner: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = output[\"Owner\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsConfiguration\",\n    Filter: undefined,\n    Id: undefined,\n    StorageClassAnalysis: undefined\n  };\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsExportDestination\",\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\n  var contents = {\n    __type: \"AnalyticsS3BucketDestination\",\n    Bucket: undefined,\n    BucketAccountId: undefined,\n    Format: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = output[\"BucketAccountId\"];\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBucket = function (output, context) {\n  var contents = {\n    __type: \"Bucket\",\n    CreationDate: undefined,\n    Name: undefined\n  };\n\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = new Date(output[\"CreationDate\"]);\n  }\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBuckets = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlBucket(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\n  var contents = {\n    __type: \"CommonPrefix\",\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlCommonPrefix(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCondition = function (output, context) {\n  var contents = {\n    __type: \"Condition\",\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined\n  };\n\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\n  }\n\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\n  var contents = {\n    __type: \"CopyObjectResult\",\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\n  var contents = {\n    __type: \"CopyPartResult\",\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRule = function (output, context) {\n  var contents = {\n    __type: \"CORSRule\",\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined\n  };\n\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  }\n\n  if (output[\"AllowedHeader\"] !== undefined) {\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n  }\n\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  }\n\n  if (output[\"AllowedMethod\"] !== undefined) {\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n  }\n\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  }\n\n  if (output[\"AllowedOrigin\"] !== undefined) {\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n  }\n\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  }\n\n  if (output[\"ExposeHeader\"] !== undefined) {\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n  }\n\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRules = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlCORSRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\n  var contents = {\n    __type: \"DefaultRetention\",\n    Days: undefined,\n    Mode: undefined,\n    Years: undefined\n  };\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = parseInt(output[\"Years\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\n  var contents = {\n    __type: \"DeletedObject\",\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined,\n    Key: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n  }\n\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlDeletedObject(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\n  var contents = {\n    __type: \"DeleteMarkerEntry\",\n    IsLatest: undefined,\n    Key: undefined,\n    LastModified: undefined,\n    Owner: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\n  var contents = {\n    __type: \"DeleteMarkerReplication\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDestination = function (output, context) {\n  var contents = {\n    __type: \"Destination\",\n    AccessControlTranslation: undefined,\n    Account: undefined,\n    Bucket: undefined,\n    EncryptionConfiguration: undefined,\n    Metrics: undefined,\n    ReplicationTime: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n  }\n\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = output[\"Account\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n  }\n\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\n  var contents = {\n    __type: \"EncryptionConfiguration\",\n    ReplicaKmsKeyID: undefined\n  };\n\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Error = function (output, context) {\n  var contents = {\n    __type: \"Error\",\n    Code: undefined,\n    Key: undefined,\n    Message: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = output[\"Code\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = output[\"Message\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\n  var contents = {\n    __type: \"ErrorDocument\",\n    Key: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrors = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXml_Error(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlEventList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\n  var contents = {\n    __type: \"ExistingObjectReplication\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlFilterRule = function (output, context) {\n  var contents = {\n    __type: \"FilterRule\",\n    Name: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlFilterRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlGrant = function (output, context) {\n  var contents = {\n    __type: \"Grant\",\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrantee = function (output, context) {\n  var contents = {\n    __type: \"Grantee\",\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    Type: undefined,\n    URI: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = output[\"EmailAddress\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = output[\"xsi:type\"];\n  }\n\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = output[\"URI\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrants = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\n  var contents = {\n    __type: \"IndexDocument\",\n    Suffix: undefined\n  };\n\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = output[\"Suffix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInitiator = function (output, context) {\n  var contents = {\n    __type: \"Initiator\",\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\n  var contents = {\n    __type: \"InventoryConfiguration\",\n    Destination: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    IsEnabled: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n  }\n\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n  }\n\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  }\n\n  if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n  }\n\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlInventoryConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\n  var contents = {\n    __type: \"InventoryDestination\",\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\n  var contents = {\n    __type: \"InventoryEncryption\",\n    SSEKMS: undefined,\n    SSES3: undefined\n  };\n\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\n  var contents = {\n    __type: \"InventoryFilter\",\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\n  var contents = {\n    __type: \"InventoryS3BucketDestination\",\n    AccountId: undefined,\n    Bucket: undefined,\n    Encryption: undefined,\n    Format: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = output[\"AccountId\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\n  var contents = {\n    __type: \"InventorySchedule\",\n    Frequency: undefined\n  };\n\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = output[\"Frequency\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\n  var contents = {\n    __type: \"LambdaFunctionConfiguration\",\n    Events: undefined,\n    Filter: undefined,\n    Id: undefined,\n    LambdaFunctionArn: undefined\n  };\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = output[\"CloudFunction\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\n  var contents = {\n    __type: \"LifecycleExpiration\",\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\n  var contents = {\n    __type: \"LifecycleRule\",\n    AbortIncompleteMultipartUpload: undefined,\n    Expiration: undefined,\n    Filter: undefined,\n    ID: undefined,\n    NoncurrentVersionExpiration: undefined,\n    NoncurrentVersionTransitions: undefined,\n    Prefix: undefined,\n    Status: undefined,\n    Transitions: undefined\n  };\n\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n  }\n\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n  }\n\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  }\n\n  if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  }\n\n  if (output[\"Transition\"] !== undefined) {\n    contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\n  var contents = {\n    __type: \"LifecycleRuleAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\n  var contents = {\n    __type: \"LifecycleRuleFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlLifecycleRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\n  var contents = {\n    __type: \"LoggingEnabled\",\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined\n  };\n\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = output[\"TargetBucket\"];\n  }\n\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  }\n\n  if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n  }\n\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = output[\"TargetPrefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetrics = function (output, context) {\n  var contents = {\n    __type: \"Metrics\",\n    EventThreshold: undefined,\n    Status: undefined\n  };\n\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\n  var contents = {\n    __type: \"MetricsAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\n  var contents = {\n    __type: \"MetricsConfiguration\",\n    Filter: undefined,\n    Id: undefined\n  };\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlMetricsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\n  var contents = {\n    __type: \"MetricsFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\n  var contents = {\n    __type: \"MultipartUpload\",\n    Initiated: undefined,\n    Initiator: undefined,\n    Key: undefined,\n    Owner: undefined,\n    StorageClass: undefined,\n    UploadId: undefined\n  };\n\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = new Date(output[\"Initiated\"]);\n  }\n\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = output[\"UploadId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlMultipartUpload(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\n  var contents = {\n    __type: \"NoncurrentVersionExpiration\",\n    NoncurrentDays: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\n  var contents = {\n    __type: \"NoncurrentVersionTransition\",\n    NoncurrentDays: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\n  var contents = {\n    __type: \"NotificationConfigurationFilter\",\n    Key: undefined\n  };\n\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Object = function (output, context) {\n  var contents = {\n    __type: \"Object\",\n    ETag: undefined,\n    Key: undefined,\n    LastModified: undefined,\n    Owner: undefined,\n    Size: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXml_Object(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockConfiguration\",\n    ObjectLockEnabled: undefined,\n    Rule: undefined\n  };\n\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockLegalHold\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockRetention\",\n    Mode: undefined,\n    RetainUntilDate: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\n  var contents = {\n    __type: \"ObjectLockRule\",\n    DefaultRetention: undefined\n  };\n\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\n  var contents = {\n    __type: \"ObjectVersion\",\n    ETag: undefined,\n    IsLatest: undefined,\n    Key: undefined,\n    LastModified: undefined,\n    Owner: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    VersionId: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlObjectVersion(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlOwner = function (output, context) {\n  var contents = {\n    __type: \"Owner\",\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPart = function (output, context) {\n  var contents = {\n    __type: \"Part\",\n    ETag: undefined,\n    LastModified: undefined,\n    PartNumber: undefined,\n    Size: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = parseInt(output[\"PartNumber\"]);\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlParts = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlPart(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\n  var contents = {\n    __type: \"PolicyStatus\",\n    IsPublic: undefined\n  };\n\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = output[\"IsPublic\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\n  var contents = {\n    __type: \"PublicAccessBlockConfiguration\",\n    BlockPublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    IgnorePublicAcls: undefined,\n    RestrictPublicBuckets: undefined\n  };\n\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n  }\n\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n  }\n\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n  }\n\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\n  var contents = {\n    __type: \"QueueConfiguration\",\n    Events: undefined,\n    Filter: undefined,\n    Id: undefined,\n    QueueArn: undefined\n  };\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = output[\"Queue\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlQueueConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlRedirect = function (output, context) {\n  var contents = {\n    __type: \"Redirect\",\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n  }\n\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\n  var contents = {\n    __type: \"RedirectAllRequestsTo\",\n    HostName: undefined,\n    Protocol: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\n  var contents = {\n    __type: \"ReplicationConfiguration\",\n    Role: undefined,\n    Rules: undefined\n  };\n\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = output[\"Role\"];\n  }\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\n  var contents = {\n    __type: \"ReplicationRule\",\n    DeleteMarkerReplication: undefined,\n    Destination: undefined,\n    ExistingObjectReplication: undefined,\n    Filter: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Priority: undefined,\n    SourceSelectionCriteria: undefined,\n    Status: undefined\n  };\n\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = parseInt(output[\"Priority\"]);\n  }\n\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\n  var contents = {\n    __type: \"ReplicationRuleAndOperator\",\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\n  var contents = {\n    __type: \"ReplicationRuleFilter\",\n    And: undefined,\n    Prefix: undefined,\n    Tag: undefined\n  };\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlReplicationRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\n  var contents = {\n    __type: \"ReplicationTime\",\n    Status: undefined,\n    Time: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\n  var contents = {\n    __type: \"ReplicationTimeValue\",\n    Minutes: undefined\n  };\n\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = parseInt(output[\"Minutes\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\n  var contents = {\n    __type: \"RoutingRule\",\n    Condition: undefined,\n    Redirect: undefined\n  };\n\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlRoutingRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\n  var contents = {\n    __type: \"S3KeyFilter\",\n    FilterRules: undefined\n  };\n\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  }\n\n  if (output[\"FilterRule\"] !== undefined) {\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\n  var contents = {\n    __type: \"ServerSideEncryptionByDefault\",\n    KMSMasterKeyID: undefined,\n    SSEAlgorithm: undefined\n  };\n\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n  }\n\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\n  var contents = {\n    __type: \"ServerSideEncryptionConfiguration\",\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\n  var contents = {\n    __type: \"ServerSideEncryptionRule\",\n    ApplyServerSideEncryptionByDefault: undefined\n  };\n\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\n  var contents = {\n    __type: \"SourceSelectionCriteria\",\n    SseKmsEncryptedObjects: undefined\n  };\n\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\n  var contents = {\n    __type: \"SSEKMS\",\n    KeyId: undefined\n  };\n\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = output[\"KeyId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\n  var contents = {\n    __type: \"SseKmsEncryptedObjects\",\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSES3 = function (output, context) {\n  var contents = {\n    __type: \"SSES3\"\n  };\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\n  var contents = {\n    __type: \"StorageClassAnalysis\",\n    DataExport: undefined\n  };\n\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\n  var contents = {\n    __type: \"StorageClassAnalysisDataExport\",\n    Destination: undefined,\n    OutputSchemaVersion: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTag = function (output, context) {\n  var contents = {\n    __type: \"Tag\",\n    Key: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTagSet = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlTag(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\n  var contents = {\n    __type: \"TargetGrant\",\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlTargetGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\n  var contents = {\n    __type: \"TopicConfiguration\",\n    Events: undefined,\n    Filter: undefined,\n    Id: undefined,\n    TopicArn: undefined\n  };\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = output[\"Topic\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlTopicConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTransition = function (output, context) {\n  var contents = {\n    __type: \"Transition\",\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTransitionList = function (output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_restXmlTransition(entry, context);\n  });\n};\n\nvar deserializeMetadata = function (output) {\n  return {\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar decodeEscapedXML = function (str) {\n  return str.replace(/&amp;/g, \"&\").replace(/&apos;/g, \"'\").replace(/&quot;/g, '\"').replace(/&gt;/g, \">\").replace(/&lt;/g, \"<\");\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      var parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        tagValueProcessor: function (val, tagName) {\n          return decodeEscapedXML(val);\n        }\n      });\n      var textNodeName = \"#text\";\n      var key = Object.keys(parsedObj)[0];\n      var parsedObjToReturn = parsedObj[key];\n\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n\n      return __getValueFromTextNode(parsedObjToReturn);\n    }\n\n    return {};\n  });\n};\n\nvar loadRestXmlErrorCode = function (output, data) {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n\n  return \"\";\n};","map":{"version":3,"sources":["../../../protocols/Aws_restXml.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\r\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode, } from \"@aws-sdk/smithy-client\";\r\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\r\nimport { parse as xmlParse } from \"fast-xml-parser\";\r\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ \"x-id\": \"AbortMultipartUpload\" }, (input.UploadId !== undefined && { uploadId: input.UploadId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({}, (input.UploadId !== undefined && { uploadId: input.UploadId }));\r\n                if (input.MultipartUpload !== undefined) {\r\n                    contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"POST\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlCopyObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"Cache-Control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"Content-Disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"Content-Encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"Content-Language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"Content-Type\": input.ContentType })), (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\r\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\r\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\r\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\r\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\r\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\r\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\r\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\r\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\r\n                    \"x-amz-copy-source-server-side-encryption-customer-key-MD5\": input.CopySourceSSECustomerKeyMD5,\r\n                })), (isSerializableHeaderValue(input.Expires) && { Expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.MetadataDirective) && { \"x-amz-metadata-directive\": input.MetadataDirective })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\r\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\r\n                })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\r\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\r\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\r\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\r\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\r\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\r\n                })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\r\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\r\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.TaggingDirective) && { \"x-amz-tagging-directive\": input.TaggingDirective })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\r\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\r\n                })), (input.Metadata !== undefined &&\r\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\r\n                        acc[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\r\n                        return acc;\r\n                    }, {})));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = {\r\n                    \"x-id\": \"CopyObject\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlCreateBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\r\n                    \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString(),\r\n                }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.CreateBucketConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"Cache-Control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"Content-Disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"Content-Encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"Content-Language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentType) && { \"Content-Type\": input.ContentType })), (isSerializableHeaderValue(input.Expires) && { Expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\r\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\r\n                })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\r\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\r\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\r\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\r\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\r\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\r\n                })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\r\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\r\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\r\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\r\n                })), (input.Metadata !== undefined &&\r\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\r\n                        acc[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\r\n                        return acc;\r\n                    }, {})));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = {\r\n                    uploads: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"POST\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    cors: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    encryption: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    lifecycle: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    policy: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    replication: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    tagging: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    website: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\r\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\r\n                })), (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ \"x-id\": \"DeleteObject\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\r\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\r\n                })), (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    delete: \"\",\r\n                };\r\n                if (input.Delete !== undefined) {\r\n                    contents = serializeAws_restXmlDelete(input.Delete, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"POST\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    publicAccessBlock: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"DELETE\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    accelerate: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    acl: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ analytics: \"\", \"x-id\": \"GetBucketAnalyticsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    cors: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    encryption: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ inventory: \"\", \"x-id\": \"GetBucketInventoryConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    lifecycle: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketLocationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    location: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    logging: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ metrics: \"\", \"x-id\": \"GetBucketMetricsConfiguration\" }, (input.Id !== undefined && { id: input.Id }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    notification: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    policy: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    policyStatus: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    replication: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    requestPayment: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    tagging: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    versioning: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    website: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.IfMatch) && { \"If-Match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\r\n                    \"If-Modified-Since\": __dateToUtcString(input.IfModifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"If-None-Match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\r\n                    \"If-Unmodified-Since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.Range) && { Range: input.Range })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"x-id\": \"GetObject\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.ResponseCacheControl !== undefined && { \"response-cache-control\": input.ResponseCacheControl })), (input.ResponseContentDisposition !== undefined && {\r\n                    \"response-content-disposition\": input.ResponseContentDisposition,\r\n                })), (input.ResponseContentEncoding !== undefined && { \"response-content-encoding\": input.ResponseContentEncoding })), (input.ResponseContentLanguage !== undefined && { \"response-content-language\": input.ResponseContentLanguage })), (input.ResponseContentType !== undefined && { \"response-content-type\": input.ResponseContentType })), (input.ResponseExpires !== undefined && {\r\n                    \"response-expires\": (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString(),\r\n                })), (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    \"object-lock\": \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = {\r\n                    torrent: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    publicAccessBlock: \"\",\r\n                };\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlHeadBucketCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"HEAD\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlHeadObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.IfMatch) && { \"If-Match\": input.IfMatch })), (isSerializableHeaderValue(input.IfModifiedSince) && {\r\n                    \"If-Modified-Since\": __dateToUtcString(input.IfModifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.IfNoneMatch) && { \"If-None-Match\": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {\r\n                    \"If-Unmodified-Since\": __dateToUtcString(input.IfUnmodifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.Range) && { Range: input.Range })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign(__assign({}, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"HEAD\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ analytics: \"\", \"x-id\": \"ListBucketAnalyticsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ inventory: \"\", \"x-id\": \"ListBucketInventoryConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ metrics: \"\", \"x-id\": \"ListBucketMetricsConfigurations\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListBucketsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/\";\r\n                body = \"\";\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ uploads: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxUploads !== undefined && { \"max-uploads\": input.MaxUploads.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.UploadIdMarker !== undefined && { \"upload-id-marker\": input.UploadIdMarker }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListObjectsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign(__assign(__assign(__assign(__assign({}, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.Marker !== undefined && { marker: input.Marker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListObjectsV2Command = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"list-type\": \"2\" }, (input.ContinuationToken !== undefined && { \"continuation-token\": input.ContinuationToken })), (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.FetchOwner !== undefined && { \"fetch-owner\": input.FetchOwner.toString() })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.StartAfter !== undefined && { \"start-after\": input.StartAfter }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListObjectVersionsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign(__assign(__assign(__assign(__assign(__assign({ versions: \"\" }, (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { \"encoding-type\": input.EncodingType })), (input.KeyMarker !== undefined && { \"key-marker\": input.KeyMarker })), (input.MaxKeys !== undefined && { \"max-keys\": input.MaxKeys.toString() })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.VersionIdMarker !== undefined && { \"version-id-marker\": input.VersionIdMarker }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlListPartsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign(__assign(__assign({ \"x-id\": \"ListParts\" }, (input.MaxParts !== undefined && { \"max-parts\": input.MaxParts.toString() })), (input.PartNumberMarker !== undefined && { \"part-number-marker\": input.PartNumberMarker.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"GET\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"application/xml\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    accelerate: \"\",\r\n                };\r\n                if (input.AccelerateConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    acl: \"\",\r\n                };\r\n                if (input.AccessControlPolicy !== undefined) {\r\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"application/xml\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ analytics: \"\" }, (input.Id !== undefined && { id: input.Id }));\r\n                if (input.AnalyticsConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketCorsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    cors: \"\",\r\n                };\r\n                if (input.CORSConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    encryption: \"\",\r\n                };\r\n                if (input.ServerSideEncryptionConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"application/xml\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ inventory: \"\" }, (input.Id !== undefined && { id: input.Id }));\r\n                if (input.InventoryConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"application/xml\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    lifecycle: \"\",\r\n                };\r\n                if (input.LifecycleConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    logging: \"\",\r\n                };\r\n                if (input.BucketLoggingStatus !== undefined) {\r\n                    contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"application/xml\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = __assign({ metrics: \"\" }, (input.Id !== undefined && { id: input.Id }));\r\n                if (input.MetricsConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = {\r\n                    \"Content-Type\": \"application/xml\",\r\n                };\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    notification: \"\",\r\n                };\r\n                if (input.NotificationConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, bodyNode, node, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\r\n                    \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString(),\r\n                })), (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    policy: \"\",\r\n                };\r\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                bodyNode = new __XmlNode(\"PutBucketPolicyRequest\");\r\n                bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                if (input.Policy !== undefined) {\r\n                    node = new __XmlNode(\"Policy\").addChildNode(new __XmlText(input.Policy)).withName(\"Policy\");\r\n                    bodyNode.addChildNode(node);\r\n                }\r\n                body += bodyNode.toString();\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    replication: \"\",\r\n                };\r\n                if (input.ReplicationConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    requestPayment: \"\",\r\n                };\r\n                if (input.RequestPaymentConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    tagging: \"\",\r\n                };\r\n                if (input.Tagging !== undefined) {\r\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.MFA) && { \"x-amz-mfa\": input.MFA }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    versioning: \"\",\r\n                };\r\n                if (input.VersioningConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    website: \"\",\r\n                };\r\n                if (input.WebsiteConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.CacheControl) && { \"Cache-Control\": input.CacheControl })), (isSerializableHeaderValue(input.ContentDisposition) && { \"Content-Disposition\": input.ContentDisposition })), (isSerializableHeaderValue(input.ContentEncoding) && { \"Content-Encoding\": input.ContentEncoding })), (isSerializableHeaderValue(input.ContentLanguage) && { \"Content-Language\": input.ContentLanguage })), (isSerializableHeaderValue(input.ContentLength) && { \"Content-Length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.ContentType) && { \"Content-Type\": input.ContentType })), (isSerializableHeaderValue(input.Expires) && { Expires: __dateToUtcString(input.Expires).toString() })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\r\n                    \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus,\r\n                })), (isSerializableHeaderValue(input.ObjectLockMode) && { \"x-amz-object-lock-mode\": input.ObjectLockMode })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\r\n                    \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString(),\r\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\r\n                    \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext,\r\n                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {\r\n                    \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId,\r\n                })), (isSerializableHeaderValue(input.ServerSideEncryption) && {\r\n                    \"x-amz-server-side-encryption\": input.ServerSideEncryption,\r\n                })), (isSerializableHeaderValue(input.StorageClass) && { \"x-amz-storage-class\": input.StorageClass })), (isSerializableHeaderValue(input.Tagging) && { \"x-amz-tagging\": input.Tagging })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\r\n                    \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation,\r\n                })), (input.Metadata !== undefined &&\r\n                    Object.keys(input.Metadata).reduce(function (acc, suffix) {\r\n                        acc[\"x-amz-meta-\" + suffix] = input.Metadata[suffix];\r\n                        return acc;\r\n                    }, {})));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = {\r\n                    \"x-id\": \"PutObject\",\r\n                };\r\n                if (input.Body !== undefined) {\r\n                    contents = input.Body;\r\n                    body = contents;\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutObjectAclCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ACL) && { \"x-amz-acl\": input.ACL })), (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.GrantFullControl) && { \"x-amz-grant-full-control\": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantRead) && { \"x-amz-grant-read\": input.GrantRead })), (isSerializableHeaderValue(input.GrantReadACP) && { \"x-amz-grant-read-acp\": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { \"x-amz-grant-write\": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { \"x-amz-grant-write-acp\": input.GrantWriteACP })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ acl: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                if (input.AccessControlPolicy !== undefined) {\r\n                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ \"legal-hold\": \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                if (input.LegalHold !== undefined) {\r\n                    contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.Token) && { \"x-amz-bucket-object-lock-token\": input.Token }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    \"object-lock\": \"\",\r\n                };\r\n                if (input.ObjectLockConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.BypassGovernanceRetention) && {\r\n                    \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString(),\r\n                })), (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ retention: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                if (input.Retention !== undefined) {\r\n                    contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ tagging: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                if (input.Tagging !== undefined) {\r\n                    contents = serializeAws_restXmlTagging(input.Tagging, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 }));\r\n                resolvedPath = \"/{Bucket}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                query = {\r\n                    publicAccessBlock: \"\",\r\n                };\r\n                if (input.PublicAccessBlockConfiguration !== undefined) {\r\n                    contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlRestoreObjectCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign({ restore: \"\" }, (input.VersionId !== undefined && { versionId: input.VersionId }));\r\n                if (input.RestoreRequest !== undefined) {\r\n                    contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\r\n                    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                    contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                    body += contents.toString();\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"POST\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlSelectObjectContentCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign({ \"Content-Type\": \"application/xml\" }, (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = {\r\n                    select: \"\",\r\n                    \"select-type\": \"2\",\r\n                };\r\n                body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\r\n                bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\r\n                bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\r\n                if (input.Expression !== undefined) {\r\n                    node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\r\n                    bodyNode.addChildNode(node);\r\n                }\r\n                if (input.ExpressionType !== undefined) {\r\n                    node = new __XmlNode(\"ExpressionType\")\r\n                        .addChildNode(new __XmlText(input.ExpressionType))\r\n                        .withName(\"ExpressionType\");\r\n                    bodyNode.addChildNode(node);\r\n                }\r\n                if (input.InputSerialization !== undefined) {\r\n                    node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\r\n                    bodyNode.addChildNode(node);\r\n                }\r\n                if (input.OutputSerialization !== undefined) {\r\n                    node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\r\n                    bodyNode.addChildNode(node);\r\n                }\r\n                if (input.RequestProgress !== undefined) {\r\n                    node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\r\n                    bodyNode.addChildNode(node);\r\n                }\r\n                if (input.ScanRange !== undefined) {\r\n                    node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\r\n                    bodyNode.addChildNode(node);\r\n                }\r\n                body += bodyNode.toString();\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"POST\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlUploadPartCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"application/octet-stream\" }, (isSerializableHeaderValue(input.ContentLength) && { \"Content-Length\": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ContentMD5) && { \"Content-MD5\": input.ContentMD5 })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign(__assign({ \"x-id\": \"UploadPart\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\r\n                if (input.Body !== undefined) {\r\n                    contents = input.Body;\r\n                    body = contents;\r\n                }\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var serializeAws_restXmlUploadPartCopyCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({ \"Content-Type\": \"\" }, (isSerializableHeaderValue(input.CopySource) && { \"x-amz-copy-source\": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {\r\n                    \"x-amz-copy-source-if-match\": input.CopySourceIfMatch,\r\n                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\r\n                    \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\r\n                    \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch,\r\n                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\r\n                    \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString(),\r\n                })), (isSerializableHeaderValue(input.CopySourceRange) && { \"x-amz-copy-source-range\": input.CopySourceRange })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\r\n                    \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\r\n                    \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\r\n                    \"x-amz-copy-source-server-side-encryption-customer-key-MD5\": input.CopySourceSSECustomerKeyMD5,\r\n                })), (isSerializableHeaderValue(input.RequestPayer) && { \"x-amz-request-payer\": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\r\n                    \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKey) && {\r\n                    \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey,\r\n                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\r\n                    \"x-amz-server-side-encryption-customer-key-MD5\": input.SSECustomerKeyMD5,\r\n                }));\r\n                resolvedPath = \"/{Bucket}/{Key+}\";\r\n                if (input.Bucket !== undefined) {\r\n                    labelValue = input.Bucket;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Bucket.\");\r\n                }\r\n                if (input.Key !== undefined) {\r\n                    labelValue = input.Key;\r\n                    if (labelValue.length <= 0) {\r\n                        throw new Error(\"Empty value provided for input HTTP label: Key.\");\r\n                    }\r\n                    resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue\r\n                        .split(\"/\")\r\n                        .map(function (segment) { return __extendedEncodeURIComponent(segment); })\r\n                        .join(\"/\"));\r\n                }\r\n                else {\r\n                    throw new Error(\"No value provided for input HTTP label: Key.\");\r\n                }\r\n                query = __assign(__assign({ \"x-id\": \"UploadPartCopy\" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));\r\n                return [4 /*yield*/, context.endpoint()];\r\n            case 1:\r\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\r\n                return [2 /*return*/, new __HttpRequest({\r\n                        protocol: protocol,\r\n                        hostname: hostname,\r\n                        port: port,\r\n                        method: \"PUT\",\r\n                        headers: headers,\r\n                        path: resolvedPath,\r\n                        query: query,\r\n                        body: body,\r\n                    })];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"AbortMultipartUploadOutput\",\r\n                    RequestCharged: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchUpload\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchUpload\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"CompleteMultipartUploadOutput\",\r\n                    Bucket: undefined,\r\n                    ETag: undefined,\r\n                    Expiration: undefined,\r\n                    Key: undefined,\r\n                    Location: undefined,\r\n                    RequestCharged: undefined,\r\n                    SSEKMSKeyId: undefined,\r\n                    ServerSideEncryption: undefined,\r\n                    VersionId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\r\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n                }\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"Bucket\"] !== undefined) {\r\n                    contents.Bucket = data[\"Bucket\"];\r\n                }\r\n                if (data[\"ETag\"] !== undefined) {\r\n                    contents.ETag = data[\"ETag\"];\r\n                }\r\n                if (data[\"Key\"] !== undefined) {\r\n                    contents.Key = data[\"Key\"];\r\n                }\r\n                if (data[\"Location\"] !== undefined) {\r\n                    contents.Location = data[\"Location\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlCopyObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlCopyObjectCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"CopyObjectOutput\",\r\n                    CopyObjectResult: undefined,\r\n                    CopySourceVersionId: undefined,\r\n                    Expiration: undefined,\r\n                    RequestCharged: undefined,\r\n                    SSECustomerAlgorithm: undefined,\r\n                    SSECustomerKeyMD5: undefined,\r\n                    SSEKMSEncryptionContext: undefined,\r\n                    SSEKMSKeyId: undefined,\r\n                    ServerSideEncryption: undefined,\r\n                    VersionId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\r\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\r\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\r\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\r\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\r\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n                }\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlCopyObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"ObjectNotInActiveTierError\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#ObjectNotInActiveTierError\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlCreateBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlCreateBucketCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"CreateBucketOutput\",\r\n                    Location: undefined,\r\n                };\r\n                if (output.headers[\"location\"] !== undefined) {\r\n                    contents.Location = output.headers[\"location\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlCreateBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, _e, parsedBody, message;\r\n    return __generator(this, function (_f) {\r\n        switch (_f.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"BucketAlreadyExists\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#BucketAlreadyExists\": return [3 /*break*/, 2];\r\n                    case \"BucketAlreadyOwnedByYou\": return [3 /*break*/, 4];\r\n                    case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\": return [3 /*break*/, 4];\r\n                }\r\n                return [3 /*break*/, 6];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 7];\r\n            case 4:\r\n                _e = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\r\n            case 5:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 7];\r\n            case 6:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _f.label = 7;\r\n            case 7:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"CreateMultipartUploadOutput\",\r\n                    AbortDate: undefined,\r\n                    AbortRuleId: undefined,\r\n                    Bucket: undefined,\r\n                    Key: undefined,\r\n                    RequestCharged: undefined,\r\n                    SSECustomerAlgorithm: undefined,\r\n                    SSECustomerKeyMD5: undefined,\r\n                    SSEKMSEncryptionContext: undefined,\r\n                    SSEKMSKeyId: undefined,\r\n                    ServerSideEncryption: undefined,\r\n                    UploadId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\r\n                    contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\r\n                }\r\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\r\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\r\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\r\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\r\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"Bucket\"] !== undefined) {\r\n                    contents.Bucket = data[\"Bucket\"];\r\n                }\r\n                if (data[\"Key\"] !== undefined) {\r\n                    contents.Key = data[\"Key\"];\r\n                }\r\n                if (data[\"UploadId\"] !== undefined) {\r\n                    contents.UploadId = data[\"UploadId\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"DeleteObjectOutput\",\r\n                    DeleteMarker: undefined,\r\n                    RequestCharged: undefined,\r\n                    VersionId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\r\n                    contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"DeleteObjectsOutput\",\r\n                    Deleted: undefined,\r\n                    Errors: undefined,\r\n                    RequestCharged: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.Deleted === \"\") {\r\n                    contents.Deleted = [];\r\n                }\r\n                if (data[\"Deleted\"] !== undefined) {\r\n                    contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\r\n                }\r\n                if (data.Error === \"\") {\r\n                    contents.Errors = [];\r\n                }\r\n                if (data[\"Error\"] !== undefined) {\r\n                    contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"DeleteObjectTaggingOutput\",\r\n                    VersionId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 204 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketAccelerateConfigurationOutput\",\r\n                    Status: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"Status\"] !== undefined) {\r\n                    contents.Status = data[\"Status\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketAclCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketAclOutput\",\r\n                    Grants: undefined,\r\n                    Owner: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.AccessControlList === \"\") {\r\n                    contents.Grants = [];\r\n                }\r\n                if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\r\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\r\n                }\r\n                if (data[\"Owner\"] !== undefined) {\r\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketAnalyticsConfigurationOutput\",\r\n                    AnalyticsConfiguration: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketCorsOutput\",\r\n                    CORSRules: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.CORSRule === \"\") {\r\n                    contents.CORSRules = [];\r\n                }\r\n                if (data[\"CORSRule\"] !== undefined) {\r\n                    contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketEncryptionOutput\",\r\n                    ServerSideEncryptionConfiguration: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketInventoryConfigurationOutput\",\r\n                    InventoryConfiguration: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketLifecycleConfigurationOutput\",\r\n                    Rules: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.Rule === \"\") {\r\n                    contents.Rules = [];\r\n                }\r\n                if (data[\"Rule\"] !== undefined) {\r\n                    contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketLocationOutput\",\r\n                    LocationConstraint: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"LocationConstraint\"] !== undefined) {\r\n                    contents.LocationConstraint = data[\"LocationConstraint\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketLoggingOutput\",\r\n                    LoggingEnabled: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"LoggingEnabled\"] !== undefined) {\r\n                    contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketMetricsConfigurationOutput\",\r\n                    MetricsConfiguration: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"NotificationConfiguration\",\r\n                    LambdaFunctionConfigurations: undefined,\r\n                    QueueConfigurations: undefined,\r\n                    TopicConfigurations: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.CloudFunctionConfiguration === \"\") {\r\n                    contents.LambdaFunctionConfigurations = [];\r\n                }\r\n                if (data[\"CloudFunctionConfiguration\"] !== undefined) {\r\n                    contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\r\n                }\r\n                if (data.QueueConfiguration === \"\") {\r\n                    contents.QueueConfigurations = [];\r\n                }\r\n                if (data[\"QueueConfiguration\"] !== undefined) {\r\n                    contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\r\n                }\r\n                if (data.TopicConfiguration === \"\") {\r\n                    contents.TopicConfigurations = [];\r\n                }\r\n                if (data[\"TopicConfiguration\"] !== undefined) {\r\n                    contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketPolicyOutput\",\r\n                    Policy: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"Policy\"] !== undefined) {\r\n                    contents.Policy = data[\"Policy\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketPolicyStatusOutput\",\r\n                    PolicyStatus: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketReplicationOutput\",\r\n                    ReplicationConfiguration: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketRequestPaymentOutput\",\r\n                    Payer: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"Payer\"] !== undefined) {\r\n                    contents.Payer = data[\"Payer\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketTaggingOutput\",\r\n                    TagSet: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.TagSet === \"\") {\r\n                    contents.TagSet = [];\r\n                }\r\n                if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\r\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketVersioningOutput\",\r\n                    MFADelete: undefined,\r\n                    Status: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"MfaDelete\"] !== undefined) {\r\n                    contents.MFADelete = data[\"MfaDelete\"];\r\n                }\r\n                if (data[\"Status\"] !== undefined) {\r\n                    contents.Status = data[\"Status\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetBucketWebsiteOutput\",\r\n                    ErrorDocument: undefined,\r\n                    IndexDocument: undefined,\r\n                    RedirectAllRequestsTo: undefined,\r\n                    RoutingRules: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"ErrorDocument\"] !== undefined) {\r\n                    contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\r\n                }\r\n                if (data[\"IndexDocument\"] !== undefined) {\r\n                    contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\r\n                }\r\n                if (data[\"RedirectAllRequestsTo\"] !== undefined) {\r\n                    contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\r\n                }\r\n                if (data.RoutingRules === \"\") {\r\n                    contents.RoutingRules = [];\r\n                }\r\n                if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\r\n                    contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n            return [2 /*return*/, deserializeAws_restXmlGetObjectCommandError(output, context)];\r\n        }\r\n        contents = {\r\n            $metadata: deserializeMetadata(output),\r\n            __type: \"GetObjectOutput\",\r\n            AcceptRanges: undefined,\r\n            Body: undefined,\r\n            CacheControl: undefined,\r\n            ContentDisposition: undefined,\r\n            ContentEncoding: undefined,\r\n            ContentLanguage: undefined,\r\n            ContentLength: undefined,\r\n            ContentRange: undefined,\r\n            ContentType: undefined,\r\n            DeleteMarker: undefined,\r\n            ETag: undefined,\r\n            Expiration: undefined,\r\n            Expires: undefined,\r\n            LastModified: undefined,\r\n            Metadata: undefined,\r\n            MissingMeta: undefined,\r\n            ObjectLockLegalHoldStatus: undefined,\r\n            ObjectLockMode: undefined,\r\n            ObjectLockRetainUntilDate: undefined,\r\n            PartsCount: undefined,\r\n            ReplicationStatus: undefined,\r\n            RequestCharged: undefined,\r\n            Restore: undefined,\r\n            SSECustomerAlgorithm: undefined,\r\n            SSECustomerKeyMD5: undefined,\r\n            SSEKMSKeyId: undefined,\r\n            ServerSideEncryption: undefined,\r\n            StorageClass: undefined,\r\n            TagCount: undefined,\r\n            VersionId: undefined,\r\n            WebsiteRedirectLocation: undefined,\r\n        };\r\n        if (output.headers[\"accept-ranges\"] !== undefined) {\r\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\r\n        }\r\n        if (output.headers[\"cache-control\"] !== undefined) {\r\n            contents.CacheControl = output.headers[\"cache-control\"];\r\n        }\r\n        if (output.headers[\"content-disposition\"] !== undefined) {\r\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\r\n        }\r\n        if (output.headers[\"content-encoding\"] !== undefined) {\r\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\r\n        }\r\n        if (output.headers[\"content-language\"] !== undefined) {\r\n            contents.ContentLanguage = output.headers[\"content-language\"];\r\n        }\r\n        if (output.headers[\"content-length\"] !== undefined) {\r\n            contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\r\n        }\r\n        if (output.headers[\"content-range\"] !== undefined) {\r\n            contents.ContentRange = output.headers[\"content-range\"];\r\n        }\r\n        if (output.headers[\"content-type\"] !== undefined) {\r\n            contents.ContentType = output.headers[\"content-type\"];\r\n        }\r\n        if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\r\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\r\n        }\r\n        if (output.headers[\"etag\"] !== undefined) {\r\n            contents.ETag = output.headers[\"etag\"];\r\n        }\r\n        if (output.headers[\"x-amz-expiration\"] !== undefined) {\r\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\r\n        }\r\n        if (output.headers[\"expires\"] !== undefined) {\r\n            contents.Expires = new Date(output.headers[\"expires\"]);\r\n        }\r\n        if (output.headers[\"last-modified\"] !== undefined) {\r\n            contents.LastModified = new Date(output.headers[\"last-modified\"]);\r\n        }\r\n        if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\r\n            contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\r\n        }\r\n        if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\r\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\r\n        }\r\n        if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\r\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\r\n        }\r\n        if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\r\n            contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\r\n        }\r\n        if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\r\n            contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\r\n        }\r\n        if (output.headers[\"x-amz-replication-status\"] !== undefined) {\r\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\r\n        }\r\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n        }\r\n        if (output.headers[\"x-amz-restore\"] !== undefined) {\r\n            contents.Restore = output.headers[\"x-amz-restore\"];\r\n        }\r\n        if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\r\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\r\n        }\r\n        if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\r\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\r\n        }\r\n        if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n        }\r\n        if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n        }\r\n        if (output.headers[\"x-amz-storage-class\"] !== undefined) {\r\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\r\n        }\r\n        if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\r\n            contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\r\n        }\r\n        if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n        }\r\n        if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\r\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\r\n        }\r\n        Object.keys(output.headers).forEach(function (header) {\r\n            if (contents.Metadata === undefined) {\r\n                contents.Metadata = {};\r\n            }\r\n            if (header.startsWith(\"x-amz-meta-\")) {\r\n                contents.Metadata[header.substring(11)] = output.headers[header];\r\n            }\r\n        });\r\n        data = output.body;\r\n        contents.Body = data;\r\n        return [2 /*return*/, Promise.resolve(contents)];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchKey\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectAclCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetObjectAclOutput\",\r\n                    Grants: undefined,\r\n                    Owner: undefined,\r\n                    RequestCharged: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.AccessControlList === \"\") {\r\n                    contents.Grants = [];\r\n                }\r\n                if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\r\n                    contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\r\n                }\r\n                if (data[\"Owner\"] !== undefined) {\r\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchKey\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetObjectLegalHoldOutput\",\r\n                    LegalHold: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetObjectLockConfigurationOutput\",\r\n                    ObjectLockConfiguration: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetObjectRetentionOutput\",\r\n                    Retention: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetObjectTaggingOutput\",\r\n                    TagSet: undefined,\r\n                    VersionId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.TagSet === \"\") {\r\n                    contents.TagSet = [];\r\n                }\r\n                if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\r\n                    contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n            return [2 /*return*/, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\r\n        }\r\n        contents = {\r\n            $metadata: deserializeMetadata(output),\r\n            __type: \"GetObjectTorrentOutput\",\r\n            Body: undefined,\r\n            RequestCharged: undefined,\r\n        };\r\n        if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n        }\r\n        data = output.body;\r\n        contents.Body = data;\r\n        return [2 /*return*/, Promise.resolve(contents)];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"GetPublicAccessBlockOutput\",\r\n                    PublicAccessBlockConfiguration: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlHeadBucketCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlHeadBucketCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlHeadBucketCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchBucket\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlHeadObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlHeadObjectCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"HeadObjectOutput\",\r\n                    AcceptRanges: undefined,\r\n                    CacheControl: undefined,\r\n                    ContentDisposition: undefined,\r\n                    ContentEncoding: undefined,\r\n                    ContentLanguage: undefined,\r\n                    ContentLength: undefined,\r\n                    ContentType: undefined,\r\n                    DeleteMarker: undefined,\r\n                    ETag: undefined,\r\n                    Expiration: undefined,\r\n                    Expires: undefined,\r\n                    LastModified: undefined,\r\n                    Metadata: undefined,\r\n                    MissingMeta: undefined,\r\n                    ObjectLockLegalHoldStatus: undefined,\r\n                    ObjectLockMode: undefined,\r\n                    ObjectLockRetainUntilDate: undefined,\r\n                    PartsCount: undefined,\r\n                    ReplicationStatus: undefined,\r\n                    RequestCharged: undefined,\r\n                    Restore: undefined,\r\n                    SSECustomerAlgorithm: undefined,\r\n                    SSECustomerKeyMD5: undefined,\r\n                    SSEKMSKeyId: undefined,\r\n                    ServerSideEncryption: undefined,\r\n                    StorageClass: undefined,\r\n                    VersionId: undefined,\r\n                    WebsiteRedirectLocation: undefined,\r\n                };\r\n                if (output.headers[\"accept-ranges\"] !== undefined) {\r\n                    contents.AcceptRanges = output.headers[\"accept-ranges\"];\r\n                }\r\n                if (output.headers[\"cache-control\"] !== undefined) {\r\n                    contents.CacheControl = output.headers[\"cache-control\"];\r\n                }\r\n                if (output.headers[\"content-disposition\"] !== undefined) {\r\n                    contents.ContentDisposition = output.headers[\"content-disposition\"];\r\n                }\r\n                if (output.headers[\"content-encoding\"] !== undefined) {\r\n                    contents.ContentEncoding = output.headers[\"content-encoding\"];\r\n                }\r\n                if (output.headers[\"content-language\"] !== undefined) {\r\n                    contents.ContentLanguage = output.headers[\"content-language\"];\r\n                }\r\n                if (output.headers[\"content-length\"] !== undefined) {\r\n                    contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\r\n                }\r\n                if (output.headers[\"content-type\"] !== undefined) {\r\n                    contents.ContentType = output.headers[\"content-type\"];\r\n                }\r\n                if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\r\n                    contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\r\n                }\r\n                if (output.headers[\"etag\"] !== undefined) {\r\n                    contents.ETag = output.headers[\"etag\"];\r\n                }\r\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\r\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\r\n                }\r\n                if (output.headers[\"expires\"] !== undefined) {\r\n                    contents.Expires = new Date(output.headers[\"expires\"]);\r\n                }\r\n                if (output.headers[\"last-modified\"] !== undefined) {\r\n                    contents.LastModified = new Date(output.headers[\"last-modified\"]);\r\n                }\r\n                if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\r\n                    contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\r\n                }\r\n                if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\r\n                    contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\r\n                }\r\n                if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\r\n                    contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\r\n                }\r\n                if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\r\n                    contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\r\n                }\r\n                if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\r\n                    contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\r\n                }\r\n                if (output.headers[\"x-amz-replication-status\"] !== undefined) {\r\n                    contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-restore\"] !== undefined) {\r\n                    contents.Restore = output.headers[\"x-amz-restore\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\r\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\r\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n                }\r\n                if (output.headers[\"x-amz-storage-class\"] !== undefined) {\r\n                    contents.StorageClass = output.headers[\"x-amz-storage-class\"];\r\n                }\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\r\n                    contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\r\n                }\r\n                Object.keys(output.headers).forEach(function (header) {\r\n                    if (contents.Metadata === undefined) {\r\n                        contents.Metadata = {};\r\n                    }\r\n                    if (header.startsWith(\"x-amz-meta-\")) {\r\n                        contents.Metadata[header.substring(11)] = output.headers[header];\r\n                    }\r\n                });\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlHeadObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchKey\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListBucketAnalyticsConfigurationsOutput\",\r\n                    AnalyticsConfigurationList: undefined,\r\n                    ContinuationToken: undefined,\r\n                    IsTruncated: undefined,\r\n                    NextContinuationToken: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.AnalyticsConfiguration === \"\") {\r\n                    contents.AnalyticsConfigurationList = [];\r\n                }\r\n                if (data[\"AnalyticsConfiguration\"] !== undefined) {\r\n                    contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\r\n                }\r\n                if (data[\"ContinuationToken\"] !== undefined) {\r\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data[\"NextContinuationToken\"] !== undefined) {\r\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListBucketInventoryConfigurationsOutput\",\r\n                    ContinuationToken: undefined,\r\n                    InventoryConfigurationList: undefined,\r\n                    IsTruncated: undefined,\r\n                    NextContinuationToken: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"ContinuationToken\"] !== undefined) {\r\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\r\n                }\r\n                if (data.InventoryConfiguration === \"\") {\r\n                    contents.InventoryConfigurationList = [];\r\n                }\r\n                if (data[\"InventoryConfiguration\"] !== undefined) {\r\n                    contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data[\"NextContinuationToken\"] !== undefined) {\r\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListBucketMetricsConfigurationsOutput\",\r\n                    ContinuationToken: undefined,\r\n                    IsTruncated: undefined,\r\n                    MetricsConfigurationList: undefined,\r\n                    NextContinuationToken: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"ContinuationToken\"] !== undefined) {\r\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data.MetricsConfiguration === \"\") {\r\n                    contents.MetricsConfigurationList = [];\r\n                }\r\n                if (data[\"MetricsConfiguration\"] !== undefined) {\r\n                    contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\r\n                }\r\n                if (data[\"NextContinuationToken\"] !== undefined) {\r\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListBucketsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListBucketsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListBucketsOutput\",\r\n                    Buckets: undefined,\r\n                    Owner: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.Buckets === \"\") {\r\n                    contents.Buckets = [];\r\n                }\r\n                if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\r\n                    contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\r\n                }\r\n                if (data[\"Owner\"] !== undefined) {\r\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListBucketsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListMultipartUploadsOutput\",\r\n                    Bucket: undefined,\r\n                    CommonPrefixes: undefined,\r\n                    Delimiter: undefined,\r\n                    EncodingType: undefined,\r\n                    IsTruncated: undefined,\r\n                    KeyMarker: undefined,\r\n                    MaxUploads: undefined,\r\n                    NextKeyMarker: undefined,\r\n                    NextUploadIdMarker: undefined,\r\n                    Prefix: undefined,\r\n                    UploadIdMarker: undefined,\r\n                    Uploads: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"Bucket\"] !== undefined) {\r\n                    contents.Bucket = data[\"Bucket\"];\r\n                }\r\n                if (data.CommonPrefixes === \"\") {\r\n                    contents.CommonPrefixes = [];\r\n                }\r\n                if (data[\"CommonPrefixes\"] !== undefined) {\r\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\r\n                }\r\n                if (data[\"Delimiter\"] !== undefined) {\r\n                    contents.Delimiter = data[\"Delimiter\"];\r\n                }\r\n                if (data[\"EncodingType\"] !== undefined) {\r\n                    contents.EncodingType = data[\"EncodingType\"];\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data[\"KeyMarker\"] !== undefined) {\r\n                    contents.KeyMarker = data[\"KeyMarker\"];\r\n                }\r\n                if (data[\"MaxUploads\"] !== undefined) {\r\n                    contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\r\n                }\r\n                if (data[\"NextKeyMarker\"] !== undefined) {\r\n                    contents.NextKeyMarker = data[\"NextKeyMarker\"];\r\n                }\r\n                if (data[\"NextUploadIdMarker\"] !== undefined) {\r\n                    contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\r\n                }\r\n                if (data[\"Prefix\"] !== undefined) {\r\n                    contents.Prefix = data[\"Prefix\"];\r\n                }\r\n                if (data[\"UploadIdMarker\"] !== undefined) {\r\n                    contents.UploadIdMarker = data[\"UploadIdMarker\"];\r\n                }\r\n                if (data.Upload === \"\") {\r\n                    contents.Uploads = [];\r\n                }\r\n                if (data[\"Upload\"] !== undefined) {\r\n                    contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListObjectsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListObjectsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListObjectsOutput\",\r\n                    CommonPrefixes: undefined,\r\n                    Contents: undefined,\r\n                    Delimiter: undefined,\r\n                    EncodingType: undefined,\r\n                    IsTruncated: undefined,\r\n                    Marker: undefined,\r\n                    MaxKeys: undefined,\r\n                    Name: undefined,\r\n                    NextMarker: undefined,\r\n                    Prefix: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.CommonPrefixes === \"\") {\r\n                    contents.CommonPrefixes = [];\r\n                }\r\n                if (data[\"CommonPrefixes\"] !== undefined) {\r\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\r\n                }\r\n                if (data.Contents === \"\") {\r\n                    contents.Contents = [];\r\n                }\r\n                if (data[\"Contents\"] !== undefined) {\r\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\r\n                }\r\n                if (data[\"Delimiter\"] !== undefined) {\r\n                    contents.Delimiter = data[\"Delimiter\"];\r\n                }\r\n                if (data[\"EncodingType\"] !== undefined) {\r\n                    contents.EncodingType = data[\"EncodingType\"];\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data[\"Marker\"] !== undefined) {\r\n                    contents.Marker = data[\"Marker\"];\r\n                }\r\n                if (data[\"MaxKeys\"] !== undefined) {\r\n                    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\r\n                }\r\n                if (data[\"Name\"] !== undefined) {\r\n                    contents.Name = data[\"Name\"];\r\n                }\r\n                if (data[\"NextMarker\"] !== undefined) {\r\n                    contents.NextMarker = data[\"NextMarker\"];\r\n                }\r\n                if (data[\"Prefix\"] !== undefined) {\r\n                    contents.Prefix = data[\"Prefix\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListObjectsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchBucket\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListObjectsV2Command = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListObjectsV2CommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListObjectsV2Output\",\r\n                    CommonPrefixes: undefined,\r\n                    Contents: undefined,\r\n                    ContinuationToken: undefined,\r\n                    Delimiter: undefined,\r\n                    EncodingType: undefined,\r\n                    IsTruncated: undefined,\r\n                    KeyCount: undefined,\r\n                    MaxKeys: undefined,\r\n                    Name: undefined,\r\n                    NextContinuationToken: undefined,\r\n                    Prefix: undefined,\r\n                    StartAfter: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.CommonPrefixes === \"\") {\r\n                    contents.CommonPrefixes = [];\r\n                }\r\n                if (data[\"CommonPrefixes\"] !== undefined) {\r\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\r\n                }\r\n                if (data.Contents === \"\") {\r\n                    contents.Contents = [];\r\n                }\r\n                if (data[\"Contents\"] !== undefined) {\r\n                    contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\r\n                }\r\n                if (data[\"ContinuationToken\"] !== undefined) {\r\n                    contents.ContinuationToken = data[\"ContinuationToken\"];\r\n                }\r\n                if (data[\"Delimiter\"] !== undefined) {\r\n                    contents.Delimiter = data[\"Delimiter\"];\r\n                }\r\n                if (data[\"EncodingType\"] !== undefined) {\r\n                    contents.EncodingType = data[\"EncodingType\"];\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data[\"KeyCount\"] !== undefined) {\r\n                    contents.KeyCount = parseInt(data[\"KeyCount\"]);\r\n                }\r\n                if (data[\"MaxKeys\"] !== undefined) {\r\n                    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\r\n                }\r\n                if (data[\"Name\"] !== undefined) {\r\n                    contents.Name = data[\"Name\"];\r\n                }\r\n                if (data[\"NextContinuationToken\"] !== undefined) {\r\n                    contents.NextContinuationToken = data[\"NextContinuationToken\"];\r\n                }\r\n                if (data[\"Prefix\"] !== undefined) {\r\n                    contents.Prefix = data[\"Prefix\"];\r\n                }\r\n                if (data[\"StartAfter\"] !== undefined) {\r\n                    contents.StartAfter = data[\"StartAfter\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListObjectsV2CommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchBucket\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchBucket\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListObjectVersionsOutput\",\r\n                    CommonPrefixes: undefined,\r\n                    DeleteMarkers: undefined,\r\n                    Delimiter: undefined,\r\n                    EncodingType: undefined,\r\n                    IsTruncated: undefined,\r\n                    KeyMarker: undefined,\r\n                    MaxKeys: undefined,\r\n                    Name: undefined,\r\n                    NextKeyMarker: undefined,\r\n                    NextVersionIdMarker: undefined,\r\n                    Prefix: undefined,\r\n                    VersionIdMarker: undefined,\r\n                    Versions: undefined,\r\n                };\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data.CommonPrefixes === \"\") {\r\n                    contents.CommonPrefixes = [];\r\n                }\r\n                if (data[\"CommonPrefixes\"] !== undefined) {\r\n                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\r\n                }\r\n                if (data.DeleteMarker === \"\") {\r\n                    contents.DeleteMarkers = [];\r\n                }\r\n                if (data[\"DeleteMarker\"] !== undefined) {\r\n                    contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\r\n                }\r\n                if (data[\"Delimiter\"] !== undefined) {\r\n                    contents.Delimiter = data[\"Delimiter\"];\r\n                }\r\n                if (data[\"EncodingType\"] !== undefined) {\r\n                    contents.EncodingType = data[\"EncodingType\"];\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data[\"KeyMarker\"] !== undefined) {\r\n                    contents.KeyMarker = data[\"KeyMarker\"];\r\n                }\r\n                if (data[\"MaxKeys\"] !== undefined) {\r\n                    contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\r\n                }\r\n                if (data[\"Name\"] !== undefined) {\r\n                    contents.Name = data[\"Name\"];\r\n                }\r\n                if (data[\"NextKeyMarker\"] !== undefined) {\r\n                    contents.NextKeyMarker = data[\"NextKeyMarker\"];\r\n                }\r\n                if (data[\"NextVersionIdMarker\"] !== undefined) {\r\n                    contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\r\n                }\r\n                if (data[\"Prefix\"] !== undefined) {\r\n                    contents.Prefix = data[\"Prefix\"];\r\n                }\r\n                if (data[\"VersionIdMarker\"] !== undefined) {\r\n                    contents.VersionIdMarker = data[\"VersionIdMarker\"];\r\n                }\r\n                if (data.Version === \"\") {\r\n                    contents.Versions = [];\r\n                }\r\n                if (data[\"Version\"] !== undefined) {\r\n                    contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlListPartsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlListPartsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"ListPartsOutput\",\r\n                    AbortDate: undefined,\r\n                    AbortRuleId: undefined,\r\n                    Bucket: undefined,\r\n                    Initiator: undefined,\r\n                    IsTruncated: undefined,\r\n                    Key: undefined,\r\n                    MaxParts: undefined,\r\n                    NextPartNumberMarker: undefined,\r\n                    Owner: undefined,\r\n                    PartNumberMarker: undefined,\r\n                    Parts: undefined,\r\n                    RequestCharged: undefined,\r\n                    StorageClass: undefined,\r\n                    UploadId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-abort-date\"] !== undefined) {\r\n                    contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\r\n                }\r\n                if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\r\n                    contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                if (data[\"Bucket\"] !== undefined) {\r\n                    contents.Bucket = data[\"Bucket\"];\r\n                }\r\n                if (data[\"Initiator\"] !== undefined) {\r\n                    contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\r\n                }\r\n                if (data[\"IsTruncated\"] !== undefined) {\r\n                    contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\r\n                }\r\n                if (data[\"Key\"] !== undefined) {\r\n                    contents.Key = data[\"Key\"];\r\n                }\r\n                if (data[\"MaxParts\"] !== undefined) {\r\n                    contents.MaxParts = parseInt(data[\"MaxParts\"]);\r\n                }\r\n                if (data[\"NextPartNumberMarker\"] !== undefined) {\r\n                    contents.NextPartNumberMarker = parseInt(data[\"NextPartNumberMarker\"]);\r\n                }\r\n                if (data[\"Owner\"] !== undefined) {\r\n                    contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\r\n                }\r\n                if (data[\"PartNumberMarker\"] !== undefined) {\r\n                    contents.PartNumberMarker = parseInt(data[\"PartNumberMarker\"]);\r\n                }\r\n                if (data.Part === \"\") {\r\n                    contents.Parts = [];\r\n                }\r\n                if (data[\"Part\"] !== undefined) {\r\n                    contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\r\n                }\r\n                if (data[\"StorageClass\"] !== undefined) {\r\n                    contents.StorageClass = data[\"StorageClass\"];\r\n                }\r\n                if (data[\"UploadId\"] !== undefined) {\r\n                    contents.UploadId = data[\"UploadId\"];\r\n                }\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlListPartsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketAclCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"PutObjectOutput\",\r\n                    ETag: undefined,\r\n                    Expiration: undefined,\r\n                    RequestCharged: undefined,\r\n                    SSECustomerAlgorithm: undefined,\r\n                    SSECustomerKeyMD5: undefined,\r\n                    SSEKMSEncryptionContext: undefined,\r\n                    SSEKMSKeyId: undefined,\r\n                    ServerSideEncryption: undefined,\r\n                    VersionId: undefined,\r\n                };\r\n                if (output.headers[\"etag\"] !== undefined) {\r\n                    contents.ETag = output.headers[\"etag\"];\r\n                }\r\n                if (output.headers[\"x-amz-expiration\"] !== undefined) {\r\n                    contents.Expiration = output.headers[\"x-amz-expiration\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\r\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\r\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\r\n                    contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n                }\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutObjectAclCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectAclCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"PutObjectAclOutput\",\r\n                    RequestCharged: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutObjectAclCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"NoSuchKey\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#NoSuchKey\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"PutObjectLegalHoldOutput\",\r\n                    RequestCharged: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"PutObjectLockConfigurationOutput\",\r\n                    RequestCharged: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"PutObjectRetentionOutput\",\r\n                    RequestCharged: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"PutObjectTaggingOutput\",\r\n                    VersionId: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-version-id\"] !== undefined) {\r\n                    contents.VersionId = output.headers[\"x-amz-version-id\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                };\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlRestoreObjectCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlRestoreObjectCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"RestoreObjectOutput\",\r\n                    RequestCharged: undefined,\r\n                    RestoreOutputPath: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\r\n                    contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlRestoreObjectCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, _c, _d, parsedBody, message;\r\n    return __generator(this, function (_e) {\r\n        switch (_e.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                _c = errorCode;\r\n                switch (_c) {\r\n                    case \"ObjectAlreadyInActiveTierError\": return [3 /*break*/, 2];\r\n                    case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\": return [3 /*break*/, 2];\r\n                }\r\n                return [3 /*break*/, 4];\r\n            case 2:\r\n                _d = [{}];\r\n                return [4 /*yield*/, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\r\n            case 3:\r\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\r\n                return [3 /*break*/, 5];\r\n            case 4:\r\n                parsedBody = parsedOutput.body;\r\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                _e.label = 5;\r\n            case 5:\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n            return [2 /*return*/, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\r\n        }\r\n        contents = {\r\n            $metadata: deserializeMetadata(output),\r\n            __type: \"SelectObjectContentOutput\",\r\n            Payload: undefined,\r\n        };\r\n        data = context.eventStreamMarshaller.deserialize(output.body, function (event) { return __awaiter(void 0, void 0, void 0, function () {\r\n            var eventName, eventHeaders, eventMessage, parsedEvent;\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        eventName = Object.keys(event)[0];\r\n                        eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\r\n                            accummulator[curr[0]] = curr[1].value;\r\n                            return accummulator;\r\n                        }, {});\r\n                        eventMessage = {\r\n                            headers: eventHeaders,\r\n                            body: event[eventName].body,\r\n                        };\r\n                        parsedEvent = (_a = {},\r\n                            _a[eventName] = eventMessage,\r\n                            _a);\r\n                        return [4 /*yield*/, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\r\n                    case 1: return [2 /*return*/, _b.sent()];\r\n                }\r\n            });\r\n        }); });\r\n        contents.Payload = data;\r\n        return [2 /*return*/, Promise.resolve(contents)];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlUploadPartCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlUploadPartCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"UploadPartOutput\",\r\n                    ETag: undefined,\r\n                    RequestCharged: undefined,\r\n                    SSECustomerAlgorithm: undefined,\r\n                    SSECustomerKeyMD5: undefined,\r\n                    SSEKMSKeyId: undefined,\r\n                    ServerSideEncryption: undefined,\r\n                };\r\n                if (output.headers[\"etag\"] !== undefined) {\r\n                    contents.ETag = output.headers[\"etag\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\r\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\r\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n                }\r\n                return [4 /*yield*/, collectBody(output.body, context)];\r\n            case 1:\r\n                _a.sent();\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlUploadPartCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nexport var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                if (output.statusCode !== 200 && output.statusCode >= 400) {\r\n                    return [2 /*return*/, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\r\n                }\r\n                contents = {\r\n                    $metadata: deserializeMetadata(output),\r\n                    __type: \"UploadPartCopyOutput\",\r\n                    CopyPartResult: undefined,\r\n                    CopySourceVersionId: undefined,\r\n                    RequestCharged: undefined,\r\n                    SSECustomerAlgorithm: undefined,\r\n                    SSECustomerKeyMD5: undefined,\r\n                    SSEKMSKeyId: undefined,\r\n                    ServerSideEncryption: undefined,\r\n                };\r\n                if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\r\n                    contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-request-charged\"] !== undefined) {\r\n                    contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\r\n                    contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\r\n                    contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\r\n                    contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\r\n                }\r\n                if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\r\n                    contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\r\n                }\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                data = _a.sent();\r\n                contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\r\n                return [2 /*return*/, Promise.resolve(contents)];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var parsedOutput, _a, _b, response, errorCode, parsedBody, message;\r\n    return __generator(this, function (_c) {\r\n        switch (_c.label) {\r\n            case 0:\r\n                _a = [__assign({}, output)];\r\n                _b = {};\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\r\n                errorCode = \"UnknownError\";\r\n                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\r\n                switch (errorCode) {\r\n                    default:\r\n                        parsedBody = parsedOutput.body;\r\n                        errorCode = parsedBody.code || parsedBody.Code || errorCode;\r\n                        response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\r\n                }\r\n                message = response.message || response.Message || errorCode;\r\n                response.message = message;\r\n                delete response.Message;\r\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var _a, _b, _c, _d, _e;\r\n    return __generator(this, function (_f) {\r\n        switch (_f.label) {\r\n            case 0:\r\n                if (!(output[\"Cont\"] !== undefined)) return [3 /*break*/, 2];\r\n                _a = {};\r\n                return [4 /*yield*/, deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\r\n            case 1: return [2 /*return*/, (_a.Cont = _f.sent(),\r\n                    _a)];\r\n            case 2:\r\n                if (!(output[\"End\"] !== undefined)) return [3 /*break*/, 4];\r\n                _b = {};\r\n                return [4 /*yield*/, deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\r\n            case 3: return [2 /*return*/, (_b.End = _f.sent(),\r\n                    _b)];\r\n            case 4:\r\n                if (!(output[\"Progress\"] !== undefined)) return [3 /*break*/, 6];\r\n                _c = {};\r\n                return [4 /*yield*/, deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\r\n            case 5: return [2 /*return*/, (_c.Progress = _f.sent(),\r\n                    _c)];\r\n            case 6:\r\n                if (!(output[\"Records\"] !== undefined)) return [3 /*break*/, 8];\r\n                _d = {};\r\n                return [4 /*yield*/, deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\r\n            case 7: return [2 /*return*/, (_d.Records = _f.sent(),\r\n                    _d)];\r\n            case 8:\r\n                if (!(output[\"Stats\"] !== undefined)) return [3 /*break*/, 10];\r\n                _e = {};\r\n                return [4 /*yield*/, deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\r\n            case 9: return [2 /*return*/, (_e.Stats = _f.sent(),\r\n                    _e)];\r\n            case 10: return [2 /*return*/, { $unknown: output }];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlContinuationEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        contents = {};\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlEndEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        contents = {};\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlProgressEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, _a;\r\n    return __generator(this, function (_b) {\r\n        switch (_b.label) {\r\n            case 0:\r\n                contents = {\r\n                    __type: \"ProgressEvent\",\r\n                };\r\n                _a = contents;\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                _a.Details = _b.sent();\r\n                return [2 /*return*/, contents];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlRecordsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            __type: \"RecordsEvent\",\r\n        };\r\n        contents.Payload = output.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlStatsEvent_event = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, _a;\r\n    return __generator(this, function (_b) {\r\n        switch (_b.label) {\r\n            case 0:\r\n                contents = {\r\n                    __type: \"StatsEvent\",\r\n                };\r\n                _a = contents;\r\n                return [4 /*yield*/, parseBody(output.body, context)];\r\n            case 1:\r\n                _a.Details = _b.sent();\r\n                return [2 /*return*/, contents];\r\n        }\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            name: \"BucketAlreadyExists\",\r\n            $fault: \"client\",\r\n            $metadata: deserializeMetadata(parsedOutput),\r\n        };\r\n        data = parsedOutput.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            name: \"BucketAlreadyOwnedByYou\",\r\n            $fault: \"client\",\r\n            $metadata: deserializeMetadata(parsedOutput),\r\n        };\r\n        data = parsedOutput.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            name: \"NoSuchBucket\",\r\n            $fault: \"client\",\r\n            $metadata: deserializeMetadata(parsedOutput),\r\n        };\r\n        data = parsedOutput.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            name: \"NoSuchKey\",\r\n            $fault: \"client\",\r\n            $metadata: deserializeMetadata(parsedOutput),\r\n        };\r\n        data = parsedOutput.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            name: \"NoSuchUpload\",\r\n            $fault: \"client\",\r\n            $metadata: deserializeMetadata(parsedOutput),\r\n        };\r\n        data = parsedOutput.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            name: \"ObjectAlreadyInActiveTierError\",\r\n            $fault: \"client\",\r\n            $metadata: deserializeMetadata(parsedOutput),\r\n        };\r\n        data = parsedOutput.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\r\n    var contents, data;\r\n    return __generator(this, function (_a) {\r\n        contents = {\r\n            name: \"ObjectNotInActiveTierError\",\r\n            $fault: \"client\",\r\n            $metadata: deserializeMetadata(parsedOutput),\r\n        };\r\n        data = parsedOutput.body;\r\n        return [2 /*return*/, contents];\r\n    });\r\n}); };\r\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\r\n    if (input.DaysAfterInitiation !== undefined) {\r\n        var node = new __XmlNode(\"DaysAfterInitiation\")\r\n            .addChildNode(new __XmlText(String(input.DaysAfterInitiation)))\r\n            .withName(\"DaysAfterInitiation\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAccelerateConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAccessControlPolicy = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AccessControlPolicy\");\r\n    if (input.Grants !== undefined) {\r\n        var nodes = serializeAws_restXmlGrants(input.Grants, context);\r\n        var containerNode_1 = new __XmlNode(\"AccessControlList\");\r\n        nodes.map(function (node) {\r\n            containerNode_1.addChildNode(node);\r\n        });\r\n        bodyNode.addChildNode(containerNode_1);\r\n    }\r\n    if (input.Owner !== undefined) {\r\n        var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAccessControlTranslation = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AccessControlTranslation\");\r\n    if (input.Owner !== undefined) {\r\n        var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAllowedHeaders = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlAllowedMethods = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlAllowedOrigins = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlAnalyticsAndOperator = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tags !== undefined) {\r\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Tag\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAnalyticsConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Id !== undefined) {\r\n        var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.StorageClassAnalysis !== undefined) {\r\n        var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAnalyticsExportDestination = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\r\n    if (input.S3BucketDestination !== undefined) {\r\n        var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAnalyticsFilter = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AnalyticsFilter\");\r\n    if (input.And !== undefined) {\r\n        var node = serializeAws_restXmlAnalyticsAndOperator(input.And, context).withName(\"And\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tag !== undefined) {\r\n        var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\r\n    if (input.Bucket !== undefined) {\r\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.BucketAccountId !== undefined) {\r\n        var node = new __XmlNode(\"AccountId\")\r\n            .addChildNode(new __XmlText(input.BucketAccountId))\r\n            .withName(\"BucketAccountId\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Format !== undefined) {\r\n        var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\")\r\n            .addChildNode(new __XmlText(input.Format))\r\n            .withName(\"Format\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\r\n    if (input.Rules !== undefined) {\r\n        var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Rule\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlBucketLoggingStatus = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\r\n    if (input.LoggingEnabled !== undefined) {\r\n        var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCompletedMultipartUpload = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\r\n    if (input.Parts !== undefined) {\r\n        var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Part\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCompletedPart = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"CompletedPart\");\r\n    if (input.ETag !== undefined) {\r\n        var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.PartNumber !== undefined) {\r\n        var node = new __XmlNode(\"PartNumber\")\r\n            .addChildNode(new __XmlText(String(input.PartNumber)))\r\n            .withName(\"PartNumber\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCompletedPartList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlCompletedPart(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlCondition = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Condition\");\r\n    if (input.HttpErrorCodeReturnedEquals !== undefined) {\r\n        var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\")\r\n            .addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals))\r\n            .withName(\"HttpErrorCodeReturnedEquals\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.KeyPrefixEquals !== undefined) {\r\n        var node = new __XmlNode(\"KeyPrefixEquals\")\r\n            .addChildNode(new __XmlText(input.KeyPrefixEquals))\r\n            .withName(\"KeyPrefixEquals\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCORSConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"CORSConfiguration\");\r\n    if (input.CORSRules !== undefined) {\r\n        var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"CORSRule\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCORSRule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"CORSRule\");\r\n    if (input.AllowedHeaders !== undefined) {\r\n        var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"AllowedHeader\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.AllowedMethods !== undefined) {\r\n        var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"AllowedMethod\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.AllowedOrigins !== undefined) {\r\n        var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"AllowedOrigin\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.ExposeHeaders !== undefined) {\r\n        var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"ExposeHeader\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.MaxAgeSeconds !== undefined) {\r\n        var node = new __XmlNode(\"MaxAgeSeconds\")\r\n            .addChildNode(new __XmlText(String(input.MaxAgeSeconds)))\r\n            .withName(\"MaxAgeSeconds\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCORSRules = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlCORSRule(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlCreateBucketConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\r\n    if (input.LocationConstraint !== undefined) {\r\n        var node = new __XmlNode(\"BucketLocationConstraint\")\r\n            .addChildNode(new __XmlText(input.LocationConstraint))\r\n            .withName(\"LocationConstraint\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCSVInput = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"CSVInput\");\r\n    if (input.AllowQuotedRecordDelimiter !== undefined) {\r\n        var node = new __XmlNode(\"AllowQuotedRecordDelimiter\")\r\n            .addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter)))\r\n            .withName(\"AllowQuotedRecordDelimiter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Comments !== undefined) {\r\n        var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.FieldDelimiter !== undefined) {\r\n        var node = new __XmlNode(\"FieldDelimiter\")\r\n            .addChildNode(new __XmlText(input.FieldDelimiter))\r\n            .withName(\"FieldDelimiter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.FileHeaderInfo !== undefined) {\r\n        var node = new __XmlNode(\"FileHeaderInfo\")\r\n            .addChildNode(new __XmlText(input.FileHeaderInfo))\r\n            .withName(\"FileHeaderInfo\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.QuoteCharacter !== undefined) {\r\n        var node = new __XmlNode(\"QuoteCharacter\")\r\n            .addChildNode(new __XmlText(input.QuoteCharacter))\r\n            .withName(\"QuoteCharacter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.QuoteEscapeCharacter !== undefined) {\r\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\r\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\r\n            .withName(\"QuoteEscapeCharacter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.RecordDelimiter !== undefined) {\r\n        var node = new __XmlNode(\"RecordDelimiter\")\r\n            .addChildNode(new __XmlText(input.RecordDelimiter))\r\n            .withName(\"RecordDelimiter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlCSVOutput = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"CSVOutput\");\r\n    if (input.FieldDelimiter !== undefined) {\r\n        var node = new __XmlNode(\"FieldDelimiter\")\r\n            .addChildNode(new __XmlText(input.FieldDelimiter))\r\n            .withName(\"FieldDelimiter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.QuoteCharacter !== undefined) {\r\n        var node = new __XmlNode(\"QuoteCharacter\")\r\n            .addChildNode(new __XmlText(input.QuoteCharacter))\r\n            .withName(\"QuoteCharacter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.QuoteEscapeCharacter !== undefined) {\r\n        var node = new __XmlNode(\"QuoteEscapeCharacter\")\r\n            .addChildNode(new __XmlText(input.QuoteEscapeCharacter))\r\n            .withName(\"QuoteEscapeCharacter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.QuoteFields !== undefined) {\r\n        var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.RecordDelimiter !== undefined) {\r\n        var node = new __XmlNode(\"RecordDelimiter\")\r\n            .addChildNode(new __XmlText(input.RecordDelimiter))\r\n            .withName(\"RecordDelimiter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlDefaultRetention = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"DefaultRetention\");\r\n    if (input.Days !== undefined) {\r\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Mode !== undefined) {\r\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Years !== undefined) {\r\n        var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlDelete = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Delete\");\r\n    if (input.Objects !== undefined) {\r\n        var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Object\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.Quiet !== undefined) {\r\n        var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlDeleteMarkerReplication = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"DeleteMarkerReplicationStatus\")\r\n            .addChildNode(new __XmlText(input.Status))\r\n            .withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlDestination = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Destination\");\r\n    if (input.AccessControlTranslation !== undefined) {\r\n        var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Account !== undefined) {\r\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Bucket !== undefined) {\r\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.EncryptionConfiguration !== undefined) {\r\n        var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Metrics !== undefined) {\r\n        var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ReplicationTime !== undefined) {\r\n        var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.StorageClass !== undefined) {\r\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlEncryption = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Encryption\");\r\n    if (input.EncryptionType !== undefined) {\r\n        var node = new __XmlNode(\"ServerSideEncryption\")\r\n            .addChildNode(new __XmlText(input.EncryptionType))\r\n            .withName(\"EncryptionType\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.KMSContext !== undefined) {\r\n        var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.KMSKeyId !== undefined) {\r\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlEncryptionConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\r\n    if (input.ReplicaKmsKeyID !== undefined) {\r\n        var node = new __XmlNode(\"ReplicaKmsKeyID\")\r\n            .addChildNode(new __XmlText(input.ReplicaKmsKeyID))\r\n            .withName(\"ReplicaKmsKeyID\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlErrorDocument = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ErrorDocument\");\r\n    if (input.Key !== undefined) {\r\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlEventList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlExistingObjectReplication = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"ExistingObjectReplicationStatus\")\r\n            .addChildNode(new __XmlText(input.Status))\r\n            .withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlExposeHeaders = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlFilterRule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"FilterRule\");\r\n    if (input.Name !== undefined) {\r\n        var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Value !== undefined) {\r\n        var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlFilterRuleList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlFilterRule(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlGlacierJobParameters = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"GlacierJobParameters\");\r\n    if (input.Tier !== undefined) {\r\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlGrant = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Grant\");\r\n    if (input.Grantee !== undefined) {\r\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Permission !== undefined) {\r\n        var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlGrantee = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Grantee\");\r\n    if (input.DisplayName !== undefined) {\r\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.EmailAddress !== undefined) {\r\n        var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ID !== undefined) {\r\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Type !== undefined) {\r\n        bodyNode.addAttribute(\"xsi:type\", input.Type);\r\n    }\r\n    if (input.URI !== undefined) {\r\n        var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlGrants = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlGrant(entry, context);\r\n        return node.withName(\"Grant\");\r\n    });\r\n};\r\nvar serializeAws_restXmlIndexDocument = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"IndexDocument\");\r\n    if (input.Suffix !== undefined) {\r\n        var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlInputSerialization = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"InputSerialization\");\r\n    if (input.CSV !== undefined) {\r\n        var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.CompressionType !== undefined) {\r\n        var node = new __XmlNode(\"CompressionType\")\r\n            .addChildNode(new __XmlText(input.CompressionType))\r\n            .withName(\"CompressionType\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.JSON !== undefined) {\r\n        var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Parquet !== undefined) {\r\n        var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlInventoryConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"InventoryConfiguration\");\r\n    if (input.Destination !== undefined) {\r\n        var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Id !== undefined) {\r\n        var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.IncludedObjectVersions !== undefined) {\r\n        var node = new __XmlNode(\"InventoryIncludedObjectVersions\")\r\n            .addChildNode(new __XmlText(input.IncludedObjectVersions))\r\n            .withName(\"IncludedObjectVersions\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.IsEnabled !== undefined) {\r\n        var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.OptionalFields !== undefined) {\r\n        var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\r\n        var containerNode_2 = new __XmlNode(\"OptionalFields\");\r\n        nodes.map(function (node) {\r\n            containerNode_2.addChildNode(node);\r\n        });\r\n        bodyNode.addChildNode(containerNode_2);\r\n    }\r\n    if (input.Schedule !== undefined) {\r\n        var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlInventoryDestination = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"InventoryDestination\");\r\n    if (input.S3BucketDestination !== undefined) {\r\n        var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlInventoryEncryption = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"InventoryEncryption\");\r\n    if (input.SSEKMS !== undefined) {\r\n        var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.SSES3 !== undefined) {\r\n        var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlInventoryFilter = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"InventoryFilter\");\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlInventoryOptionalFields = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\r\n        return node.withName(\"Field\");\r\n    });\r\n};\r\nvar serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\r\n    if (input.AccountId !== undefined) {\r\n        var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Bucket !== undefined) {\r\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Encryption !== undefined) {\r\n        var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Format !== undefined) {\r\n        var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlInventorySchedule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"InventorySchedule\");\r\n    if (input.Frequency !== undefined) {\r\n        var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlJSONInput = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"JSONInput\");\r\n    if (input.Type !== undefined) {\r\n        var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlJSONOutput = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"JSONOutput\");\r\n    if (input.RecordDelimiter !== undefined) {\r\n        var node = new __XmlNode(\"RecordDelimiter\")\r\n            .addChildNode(new __XmlText(input.RecordDelimiter))\r\n            .withName(\"RecordDelimiter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\r\n    if (input.Events !== undefined) {\r\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Event\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Id !== undefined) {\r\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.LambdaFunctionArn !== undefined) {\r\n        var node = new __XmlNode(\"LambdaFunctionArn\")\r\n            .addChildNode(new __XmlText(input.LambdaFunctionArn))\r\n            .withName(\"CloudFunction\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlLifecycleExpiration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"LifecycleExpiration\");\r\n    if (input.Date !== undefined) {\r\n        var node = new __XmlNode(\"Date\")\r\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\r\n            .withName(\"Date\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Days !== undefined) {\r\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ExpiredObjectDeleteMarker !== undefined) {\r\n        var node = new __XmlNode(\"ExpiredObjectDeleteMarker\")\r\n            .addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker)))\r\n            .withName(\"ExpiredObjectDeleteMarker\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlLifecycleRule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"LifecycleRule\");\r\n    if (input.AbortIncompleteMultipartUpload !== undefined) {\r\n        var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Expiration !== undefined) {\r\n        var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ID !== undefined) {\r\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.NoncurrentVersionExpiration !== undefined) {\r\n        var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.NoncurrentVersionTransitions !== undefined) {\r\n        var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"NoncurrentVersionTransition\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Transitions !== undefined) {\r\n        var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Transition\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tags !== undefined) {\r\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Tag\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlLifecycleRuleFilter = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\r\n    if (input.And !== undefined) {\r\n        var node = serializeAws_restXmlLifecycleRuleAndOperator(input.And, context).withName(\"And\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tag !== undefined) {\r\n        var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlLifecycleRules = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlLifecycleRule(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlLoggingEnabled = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"LoggingEnabled\");\r\n    if (input.TargetBucket !== undefined) {\r\n        var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.TargetGrants !== undefined) {\r\n        var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\r\n        var containerNode_3 = new __XmlNode(\"TargetGrants\");\r\n        nodes.map(function (node) {\r\n            containerNode_3.addChildNode(node);\r\n        });\r\n        bodyNode.addChildNode(containerNode_3);\r\n    }\r\n    if (input.TargetPrefix !== undefined) {\r\n        var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlMetadataEntry = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"MetadataEntry\");\r\n    if (input.Name !== undefined) {\r\n        var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Value !== undefined) {\r\n        var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlMetrics = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Metrics\");\r\n    if (input.EventThreshold !== undefined) {\r\n        var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlMetricsAndOperator = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"MetricsAndOperator\");\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tags !== undefined) {\r\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Tag\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlMetricsConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"MetricsConfiguration\");\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Id !== undefined) {\r\n        var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlMetricsFilter = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"MetricsFilter\");\r\n    if (input.And !== undefined) {\r\n        var node = serializeAws_restXmlMetricsAndOperator(input.And, context).withName(\"And\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tag !== undefined) {\r\n        var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\r\n    if (input.NoncurrentDays !== undefined) {\r\n        var node = new __XmlNode(\"Days\")\r\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\r\n            .withName(\"NoncurrentDays\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\r\n    if (input.NoncurrentDays !== undefined) {\r\n        var node = new __XmlNode(\"Days\")\r\n            .addChildNode(new __XmlText(String(input.NoncurrentDays)))\r\n            .withName(\"NoncurrentDays\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.StorageClass !== undefined) {\r\n        var node = new __XmlNode(\"TransitionStorageClass\")\r\n            .addChildNode(new __XmlText(input.StorageClass))\r\n            .withName(\"StorageClass\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlNotificationConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"NotificationConfiguration\");\r\n    if (input.LambdaFunctionConfigurations !== undefined) {\r\n        var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"CloudFunctionConfiguration\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.QueueConfigurations !== undefined) {\r\n        var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"QueueConfiguration\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.TopicConfigurations !== undefined) {\r\n        var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"TopicConfiguration\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\r\n    if (input.Key !== undefined) {\r\n        var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlObjectIdentifier = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ObjectIdentifier\");\r\n    if (input.Key !== undefined) {\r\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.VersionId !== undefined) {\r\n        var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlObjectIdentifierList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlObjectIdentifier(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlObjectLockConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\r\n    if (input.ObjectLockEnabled !== undefined) {\r\n        var node = new __XmlNode(\"ObjectLockEnabled\")\r\n            .addChildNode(new __XmlText(input.ObjectLockEnabled))\r\n            .withName(\"ObjectLockEnabled\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Rule !== undefined) {\r\n        var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlObjectLockLegalHold = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"ObjectLockLegalHoldStatus\")\r\n            .addChildNode(new __XmlText(input.Status))\r\n            .withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlObjectLockRetention = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ObjectLockRetention\");\r\n    if (input.Mode !== undefined) {\r\n        var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.RetainUntilDate !== undefined) {\r\n        var node = new __XmlNode(\"Date\")\r\n            .addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\"))\r\n            .withName(\"RetainUntilDate\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlObjectLockRule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ObjectLockRule\");\r\n    if (input.DefaultRetention !== undefined) {\r\n        var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlOutputLocation = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"OutputLocation\");\r\n    if (input.S3 !== undefined) {\r\n        var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlOutputSerialization = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"OutputSerialization\");\r\n    if (input.CSV !== undefined) {\r\n        var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.JSON !== undefined) {\r\n        var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlOwner = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Owner\");\r\n    if (input.DisplayName !== undefined) {\r\n        var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ID !== undefined) {\r\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlParquetInput = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ParquetInput\");\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\r\n    if (input.BlockPublicAcls !== undefined) {\r\n        var node = new __XmlNode(\"Setting\")\r\n            .addChildNode(new __XmlText(String(input.BlockPublicAcls)))\r\n            .withName(\"BlockPublicAcls\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.BlockPublicPolicy !== undefined) {\r\n        var node = new __XmlNode(\"Setting\")\r\n            .addChildNode(new __XmlText(String(input.BlockPublicPolicy)))\r\n            .withName(\"BlockPublicPolicy\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.IgnorePublicAcls !== undefined) {\r\n        var node = new __XmlNode(\"Setting\")\r\n            .addChildNode(new __XmlText(String(input.IgnorePublicAcls)))\r\n            .withName(\"IgnorePublicAcls\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.RestrictPublicBuckets !== undefined) {\r\n        var node = new __XmlNode(\"Setting\")\r\n            .addChildNode(new __XmlText(String(input.RestrictPublicBuckets)))\r\n            .withName(\"RestrictPublicBuckets\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlQueueConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"QueueConfiguration\");\r\n    if (input.Events !== undefined) {\r\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Event\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Id !== undefined) {\r\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.QueueArn !== undefined) {\r\n        var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlQueueConfigurationList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlQueueConfiguration(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlRedirect = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Redirect\");\r\n    if (input.HostName !== undefined) {\r\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.HttpRedirectCode !== undefined) {\r\n        var node = new __XmlNode(\"HttpRedirectCode\")\r\n            .addChildNode(new __XmlText(input.HttpRedirectCode))\r\n            .withName(\"HttpRedirectCode\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Protocol !== undefined) {\r\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ReplaceKeyPrefixWith !== undefined) {\r\n        var node = new __XmlNode(\"ReplaceKeyPrefixWith\")\r\n            .addChildNode(new __XmlText(input.ReplaceKeyPrefixWith))\r\n            .withName(\"ReplaceKeyPrefixWith\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ReplaceKeyWith !== undefined) {\r\n        var node = new __XmlNode(\"ReplaceKeyWith\")\r\n            .addChildNode(new __XmlText(input.ReplaceKeyWith))\r\n            .withName(\"ReplaceKeyWith\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\r\n    if (input.HostName !== undefined) {\r\n        var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Protocol !== undefined) {\r\n        var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlReplicationConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\r\n    if (input.Role !== undefined) {\r\n        var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Rules !== undefined) {\r\n        var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Rule\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlReplicationRule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ReplicationRule\");\r\n    if (input.DeleteMarkerReplication !== undefined) {\r\n        var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Destination !== undefined) {\r\n        var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ExistingObjectReplication !== undefined) {\r\n        var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ID !== undefined) {\r\n        var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Priority !== undefined) {\r\n        var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.SourceSelectionCriteria !== undefined) {\r\n        var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tags !== undefined) {\r\n        var nodes = serializeAws_restXmlTagSet(input.Tags, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Tag\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlReplicationRuleFilter = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\r\n    if (input.And !== undefined) {\r\n        var node = serializeAws_restXmlReplicationRuleAndOperator(input.And, context).withName(\"And\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tag !== undefined) {\r\n        var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlReplicationRules = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlReplicationRule(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlReplicationTime = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ReplicationTime\");\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Time !== undefined) {\r\n        var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlReplicationTimeValue = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\r\n    if (input.Minutes !== undefined) {\r\n        var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\r\n    if (input.Payer !== undefined) {\r\n        var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlRequestProgress = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"RequestProgress\");\r\n    if (input.Enabled !== undefined) {\r\n        var node = new __XmlNode(\"EnableRequestProgress\")\r\n            .addChildNode(new __XmlText(String(input.Enabled)))\r\n            .withName(\"Enabled\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlRestoreRequest = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"RestoreRequest\");\r\n    if (input.Days !== undefined) {\r\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Description !== undefined) {\r\n        var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.GlacierJobParameters !== undefined) {\r\n        var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.OutputLocation !== undefined) {\r\n        var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.SelectParameters !== undefined) {\r\n        var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tier !== undefined) {\r\n        var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Type !== undefined) {\r\n        var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlRoutingRule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"RoutingRule\");\r\n    if (input.Condition !== undefined) {\r\n        var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Redirect !== undefined) {\r\n        var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlRoutingRules = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlRoutingRule(entry, context);\r\n        return node.withName(\"RoutingRule\");\r\n    });\r\n};\r\nvar serializeAws_restXmlS3KeyFilter = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"S3KeyFilter\");\r\n    if (input.FilterRules !== undefined) {\r\n        var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"FilterRule\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlS3Location = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"S3Location\");\r\n    if (input.AccessControlList !== undefined) {\r\n        var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\r\n        var containerNode_4 = new __XmlNode(\"AccessControlList\");\r\n        nodes.map(function (node) {\r\n            containerNode_4.addChildNode(node);\r\n        });\r\n        bodyNode.addChildNode(containerNode_4);\r\n    }\r\n    if (input.BucketName !== undefined) {\r\n        var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.CannedACL !== undefined) {\r\n        var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Encryption !== undefined) {\r\n        var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Prefix !== undefined) {\r\n        var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.StorageClass !== undefined) {\r\n        var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Tagging !== undefined) {\r\n        var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.UserMetadata !== undefined) {\r\n        var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\r\n        var containerNode_5 = new __XmlNode(\"UserMetadata\");\r\n        nodes.map(function (node) {\r\n            containerNode_5.addChildNode(node);\r\n        });\r\n        bodyNode.addChildNode(containerNode_5);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlScanRange = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ScanRange\");\r\n    if (input.End !== undefined) {\r\n        var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Start !== undefined) {\r\n        var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlSelectParameters = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"SelectParameters\");\r\n    if (input.Expression !== undefined) {\r\n        var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.ExpressionType !== undefined) {\r\n        var node = new __XmlNode(\"ExpressionType\")\r\n            .addChildNode(new __XmlText(input.ExpressionType))\r\n            .withName(\"ExpressionType\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.InputSerialization !== undefined) {\r\n        var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.OutputSerialization !== undefined) {\r\n        var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\r\n    if (input.KMSMasterKeyID !== undefined) {\r\n        var node = new __XmlNode(\"SSEKMSKeyId\")\r\n            .addChildNode(new __XmlText(input.KMSMasterKeyID))\r\n            .withName(\"KMSMasterKeyID\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.SSEAlgorithm !== undefined) {\r\n        var node = new __XmlNode(\"ServerSideEncryption\")\r\n            .addChildNode(new __XmlText(input.SSEAlgorithm))\r\n            .withName(\"SSEAlgorithm\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\r\n    if (input.Rules !== undefined) {\r\n        var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Rule\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlServerSideEncryptionRule = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\r\n    if (input.ApplyServerSideEncryptionByDefault !== undefined) {\r\n        var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlServerSideEncryptionRules = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlSourceSelectionCriteria = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\r\n    if (input.SseKmsEncryptedObjects !== undefined) {\r\n        var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlSSEKMS = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"SSE-KMS\");\r\n    if (input.KeyId !== undefined) {\r\n        var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\")\r\n            .addChildNode(new __XmlText(input.Status))\r\n            .withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlSSES3 = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"SSE-S3\");\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlStorageClassAnalysis = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\r\n    if (input.DataExport !== undefined) {\r\n        var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\r\n    if (input.Destination !== undefined) {\r\n        var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.OutputSchemaVersion !== undefined) {\r\n        var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\")\r\n            .addChildNode(new __XmlText(input.OutputSchemaVersion))\r\n            .withName(\"OutputSchemaVersion\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlTag = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Tag\");\r\n    if (input.Key !== undefined) {\r\n        var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Value !== undefined) {\r\n        var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlTagging = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Tagging\");\r\n    if (input.TagSet !== undefined) {\r\n        var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\r\n        var containerNode_6 = new __XmlNode(\"TagSet\");\r\n        nodes.map(function (node) {\r\n            containerNode_6.addChildNode(node);\r\n        });\r\n        bodyNode.addChildNode(containerNode_6);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlTagSet = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlTag(entry, context);\r\n        return node.withName(\"Tag\");\r\n    });\r\n};\r\nvar serializeAws_restXmlTargetGrant = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"TargetGrant\");\r\n    if (input.Grantee !== undefined) {\r\n        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Permission !== undefined) {\r\n        var node = new __XmlNode(\"BucketLogsPermission\")\r\n            .addChildNode(new __XmlText(input.Permission))\r\n            .withName(\"Permission\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlTargetGrants = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlTargetGrant(entry, context);\r\n        return node.withName(\"Grant\");\r\n    });\r\n};\r\nvar serializeAws_restXmlTopicConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"TopicConfiguration\");\r\n    if (input.Events !== undefined) {\r\n        var nodes = serializeAws_restXmlEventList(input.Events, context);\r\n        nodes.map(function (node) {\r\n            node = node.withName(\"Event\");\r\n            bodyNode.addChildNode(node);\r\n        });\r\n    }\r\n    if (input.Filter !== undefined) {\r\n        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Id !== undefined) {\r\n        var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.TopicArn !== undefined) {\r\n        var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlTopicConfigurationList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlTopicConfiguration(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlTransition = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"Transition\");\r\n    if (input.Date !== undefined) {\r\n        var node = new __XmlNode(\"Date\")\r\n            .addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\"))\r\n            .withName(\"Date\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Days !== undefined) {\r\n        var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.StorageClass !== undefined) {\r\n        var node = new __XmlNode(\"TransitionStorageClass\")\r\n            .addChildNode(new __XmlText(input.StorageClass))\r\n            .withName(\"StorageClass\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlTransitionList = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlTransition(entry, context);\r\n        return node.withName(\"member\");\r\n    });\r\n};\r\nvar serializeAws_restXmlUserMetadata = function (input, context) {\r\n    return input.map(function (entry) {\r\n        var node = serializeAws_restXmlMetadataEntry(entry, context);\r\n        return node.withName(\"MetadataEntry\");\r\n    });\r\n};\r\nvar serializeAws_restXmlVersioningConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"VersioningConfiguration\");\r\n    if (input.MFADelete !== undefined) {\r\n        var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.Status !== undefined) {\r\n        var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar serializeAws_restXmlWebsiteConfiguration = function (input, context) {\r\n    var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\r\n    if (input.ErrorDocument !== undefined) {\r\n        var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.IndexDocument !== undefined) {\r\n        var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.RedirectAllRequestsTo !== undefined) {\r\n        var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\r\n        bodyNode.addChildNode(node);\r\n    }\r\n    if (input.RoutingRules !== undefined) {\r\n        var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\r\n        var containerNode_7 = new __XmlNode(\"RoutingRules\");\r\n        nodes.map(function (node) {\r\n            containerNode_7.addChildNode(node);\r\n        });\r\n        bodyNode.addChildNode(containerNode_7);\r\n    }\r\n    return bodyNode;\r\n};\r\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {\r\n    var contents = {\r\n        __type: \"AbortIncompleteMultipartUpload\",\r\n        DaysAfterInitiation: undefined,\r\n    };\r\n    if (output[\"DaysAfterInitiation\"] !== undefined) {\r\n        contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlAccessControlTranslation = function (output, context) {\r\n    var contents = {\r\n        __type: \"AccessControlTranslation\",\r\n        Owner: undefined,\r\n    };\r\n    if (output[\"Owner\"] !== undefined) {\r\n        contents.Owner = output[\"Owner\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlAllowedHeaders = function (output, context) {\r\n    return (output || []).map(function (entry) { return entry; });\r\n};\r\nvar deserializeAws_restXmlAllowedMethods = function (output, context) {\r\n    return (output || []).map(function (entry) { return entry; });\r\n};\r\nvar deserializeAws_restXmlAllowedOrigins = function (output, context) {\r\n    return (output || []).map(function (entry) { return entry; });\r\n};\r\nvar deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {\r\n    var contents = {\r\n        __type: \"AnalyticsAndOperator\",\r\n        Prefix: undefined,\r\n        Tags: undefined,\r\n    };\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output.Tag === \"\") {\r\n        contents.Tags = [];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"AnalyticsConfiguration\",\r\n        Filter: undefined,\r\n        Id: undefined,\r\n        StorageClassAnalysis: undefined,\r\n    };\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"Id\"] !== undefined) {\r\n        contents.Id = output[\"Id\"];\r\n    }\r\n    if (output[\"StorageClassAnalysis\"] !== undefined) {\r\n        contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlAnalyticsConfiguration(entry, context); });\r\n};\r\nvar deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {\r\n    var contents = {\r\n        __type: \"AnalyticsExportDestination\",\r\n        S3BucketDestination: undefined,\r\n    };\r\n    if (output[\"S3BucketDestination\"] !== undefined) {\r\n        contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlAnalyticsFilter = function (output, context) {\r\n    var contents = {\r\n        __type: \"AnalyticsFilter\",\r\n        And: undefined,\r\n        Prefix: undefined,\r\n        Tag: undefined,\r\n    };\r\n    if (output[\"And\"] !== undefined) {\r\n        contents.And = deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context);\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {\r\n    var contents = {\r\n        __type: \"AnalyticsS3BucketDestination\",\r\n        Bucket: undefined,\r\n        BucketAccountId: undefined,\r\n        Format: undefined,\r\n        Prefix: undefined,\r\n    };\r\n    if (output[\"Bucket\"] !== undefined) {\r\n        contents.Bucket = output[\"Bucket\"];\r\n    }\r\n    if (output[\"BucketAccountId\"] !== undefined) {\r\n        contents.BucketAccountId = output[\"BucketAccountId\"];\r\n    }\r\n    if (output[\"Format\"] !== undefined) {\r\n        contents.Format = output[\"Format\"];\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlBucket = function (output, context) {\r\n    var contents = {\r\n        __type: \"Bucket\",\r\n        CreationDate: undefined,\r\n        Name: undefined,\r\n    };\r\n    if (output[\"CreationDate\"] !== undefined) {\r\n        contents.CreationDate = new Date(output[\"CreationDate\"]);\r\n    }\r\n    if (output[\"Name\"] !== undefined) {\r\n        contents.Name = output[\"Name\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlBuckets = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlBucket(entry, context); });\r\n};\r\nvar deserializeAws_restXmlCommonPrefix = function (output, context) {\r\n    var contents = {\r\n        __type: \"CommonPrefix\",\r\n        Prefix: undefined,\r\n    };\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlCommonPrefixList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlCommonPrefix(entry, context); });\r\n};\r\nvar deserializeAws_restXmlCondition = function (output, context) {\r\n    var contents = {\r\n        __type: \"Condition\",\r\n        HttpErrorCodeReturnedEquals: undefined,\r\n        KeyPrefixEquals: undefined,\r\n    };\r\n    if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\r\n        contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\r\n    }\r\n    if (output[\"KeyPrefixEquals\"] !== undefined) {\r\n        contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlCopyObjectResult = function (output, context) {\r\n    var contents = {\r\n        __type: \"CopyObjectResult\",\r\n        ETag: undefined,\r\n        LastModified: undefined,\r\n    };\r\n    if (output[\"ETag\"] !== undefined) {\r\n        contents.ETag = output[\"ETag\"];\r\n    }\r\n    if (output[\"LastModified\"] !== undefined) {\r\n        contents.LastModified = new Date(output[\"LastModified\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlCopyPartResult = function (output, context) {\r\n    var contents = {\r\n        __type: \"CopyPartResult\",\r\n        ETag: undefined,\r\n        LastModified: undefined,\r\n    };\r\n    if (output[\"ETag\"] !== undefined) {\r\n        contents.ETag = output[\"ETag\"];\r\n    }\r\n    if (output[\"LastModified\"] !== undefined) {\r\n        contents.LastModified = new Date(output[\"LastModified\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlCORSRule = function (output, context) {\r\n    var contents = {\r\n        __type: \"CORSRule\",\r\n        AllowedHeaders: undefined,\r\n        AllowedMethods: undefined,\r\n        AllowedOrigins: undefined,\r\n        ExposeHeaders: undefined,\r\n        MaxAgeSeconds: undefined,\r\n    };\r\n    if (output.AllowedHeader === \"\") {\r\n        contents.AllowedHeaders = [];\r\n    }\r\n    if (output[\"AllowedHeader\"] !== undefined) {\r\n        contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\r\n    }\r\n    if (output.AllowedMethod === \"\") {\r\n        contents.AllowedMethods = [];\r\n    }\r\n    if (output[\"AllowedMethod\"] !== undefined) {\r\n        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\r\n    }\r\n    if (output.AllowedOrigin === \"\") {\r\n        contents.AllowedOrigins = [];\r\n    }\r\n    if (output[\"AllowedOrigin\"] !== undefined) {\r\n        contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\r\n    }\r\n    if (output.ExposeHeader === \"\") {\r\n        contents.ExposeHeaders = [];\r\n    }\r\n    if (output[\"ExposeHeader\"] !== undefined) {\r\n        contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\r\n    }\r\n    if (output[\"MaxAgeSeconds\"] !== undefined) {\r\n        contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlCORSRules = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlCORSRule(entry, context); });\r\n};\r\nvar deserializeAws_restXmlDefaultRetention = function (output, context) {\r\n    var contents = {\r\n        __type: \"DefaultRetention\",\r\n        Days: undefined,\r\n        Mode: undefined,\r\n        Years: undefined,\r\n    };\r\n    if (output[\"Days\"] !== undefined) {\r\n        contents.Days = parseInt(output[\"Days\"]);\r\n    }\r\n    if (output[\"Mode\"] !== undefined) {\r\n        contents.Mode = output[\"Mode\"];\r\n    }\r\n    if (output[\"Years\"] !== undefined) {\r\n        contents.Years = parseInt(output[\"Years\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlDeletedObject = function (output, context) {\r\n    var contents = {\r\n        __type: \"DeletedObject\",\r\n        DeleteMarker: undefined,\r\n        DeleteMarkerVersionId: undefined,\r\n        Key: undefined,\r\n        VersionId: undefined,\r\n    };\r\n    if (output[\"DeleteMarker\"] !== undefined) {\r\n        contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\r\n    }\r\n    if (output[\"DeleteMarkerVersionId\"] !== undefined) {\r\n        contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\r\n    }\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    if (output[\"VersionId\"] !== undefined) {\r\n        contents.VersionId = output[\"VersionId\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlDeletedObjects = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlDeletedObject(entry, context); });\r\n};\r\nvar deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {\r\n    var contents = {\r\n        __type: \"DeleteMarkerEntry\",\r\n        IsLatest: undefined,\r\n        Key: undefined,\r\n        LastModified: undefined,\r\n        Owner: undefined,\r\n        VersionId: undefined,\r\n    };\r\n    if (output[\"IsLatest\"] !== undefined) {\r\n        contents.IsLatest = output[\"IsLatest\"] == \"true\";\r\n    }\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    if (output[\"LastModified\"] !== undefined) {\r\n        contents.LastModified = new Date(output[\"LastModified\"]);\r\n    }\r\n    if (output[\"Owner\"] !== undefined) {\r\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\r\n    }\r\n    if (output[\"VersionId\"] !== undefined) {\r\n        contents.VersionId = output[\"VersionId\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {\r\n    var contents = {\r\n        __type: \"DeleteMarkerReplication\",\r\n        Status: undefined,\r\n    };\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlDeleteMarkers = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlDeleteMarkerEntry(entry, context); });\r\n};\r\nvar deserializeAws_restXmlDestination = function (output, context) {\r\n    var contents = {\r\n        __type: \"Destination\",\r\n        AccessControlTranslation: undefined,\r\n        Account: undefined,\r\n        Bucket: undefined,\r\n        EncryptionConfiguration: undefined,\r\n        Metrics: undefined,\r\n        ReplicationTime: undefined,\r\n        StorageClass: undefined,\r\n    };\r\n    if (output[\"AccessControlTranslation\"] !== undefined) {\r\n        contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\r\n    }\r\n    if (output[\"Account\"] !== undefined) {\r\n        contents.Account = output[\"Account\"];\r\n    }\r\n    if (output[\"Bucket\"] !== undefined) {\r\n        contents.Bucket = output[\"Bucket\"];\r\n    }\r\n    if (output[\"EncryptionConfiguration\"] !== undefined) {\r\n        contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\r\n    }\r\n    if (output[\"Metrics\"] !== undefined) {\r\n        contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\r\n    }\r\n    if (output[\"ReplicationTime\"] !== undefined) {\r\n        contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\r\n    }\r\n    if (output[\"StorageClass\"] !== undefined) {\r\n        contents.StorageClass = output[\"StorageClass\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlEncryptionConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"EncryptionConfiguration\",\r\n        ReplicaKmsKeyID: undefined,\r\n    };\r\n    if (output[\"ReplicaKmsKeyID\"] !== undefined) {\r\n        contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXml_Error = function (output, context) {\r\n    var contents = {\r\n        __type: \"Error\",\r\n        Code: undefined,\r\n        Key: undefined,\r\n        Message: undefined,\r\n        VersionId: undefined,\r\n    };\r\n    if (output[\"Code\"] !== undefined) {\r\n        contents.Code = output[\"Code\"];\r\n    }\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    if (output[\"Message\"] !== undefined) {\r\n        contents.Message = output[\"Message\"];\r\n    }\r\n    if (output[\"VersionId\"] !== undefined) {\r\n        contents.VersionId = output[\"VersionId\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlErrorDocument = function (output, context) {\r\n    var contents = {\r\n        __type: \"ErrorDocument\",\r\n        Key: undefined,\r\n    };\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlErrors = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXml_Error(entry, context); });\r\n};\r\nvar deserializeAws_restXmlEventList = function (output, context) {\r\n    return (output || []).map(function (entry) { return entry; });\r\n};\r\nvar deserializeAws_restXmlExistingObjectReplication = function (output, context) {\r\n    var contents = {\r\n        __type: \"ExistingObjectReplication\",\r\n        Status: undefined,\r\n    };\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlExposeHeaders = function (output, context) {\r\n    return (output || []).map(function (entry) { return entry; });\r\n};\r\nvar deserializeAws_restXmlFilterRule = function (output, context) {\r\n    var contents = {\r\n        __type: \"FilterRule\",\r\n        Name: undefined,\r\n        Value: undefined,\r\n    };\r\n    if (output[\"Name\"] !== undefined) {\r\n        contents.Name = output[\"Name\"];\r\n    }\r\n    if (output[\"Value\"] !== undefined) {\r\n        contents.Value = output[\"Value\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlFilterRuleList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlFilterRule(entry, context); });\r\n};\r\nvar deserializeAws_restXmlGrant = function (output, context) {\r\n    var contents = {\r\n        __type: \"Grant\",\r\n        Grantee: undefined,\r\n        Permission: undefined,\r\n    };\r\n    if (output[\"Grantee\"] !== undefined) {\r\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\r\n    }\r\n    if (output[\"Permission\"] !== undefined) {\r\n        contents.Permission = output[\"Permission\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlGrantee = function (output, context) {\r\n    var contents = {\r\n        __type: \"Grantee\",\r\n        DisplayName: undefined,\r\n        EmailAddress: undefined,\r\n        ID: undefined,\r\n        Type: undefined,\r\n        URI: undefined,\r\n    };\r\n    if (output[\"DisplayName\"] !== undefined) {\r\n        contents.DisplayName = output[\"DisplayName\"];\r\n    }\r\n    if (output[\"EmailAddress\"] !== undefined) {\r\n        contents.EmailAddress = output[\"EmailAddress\"];\r\n    }\r\n    if (output[\"ID\"] !== undefined) {\r\n        contents.ID = output[\"ID\"];\r\n    }\r\n    if (output[\"xsi:type\"] !== undefined) {\r\n        contents.Type = output[\"xsi:type\"];\r\n    }\r\n    if (output[\"URI\"] !== undefined) {\r\n        contents.URI = output[\"URI\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlGrants = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlGrant(entry, context); });\r\n};\r\nvar deserializeAws_restXmlIndexDocument = function (output, context) {\r\n    var contents = {\r\n        __type: \"IndexDocument\",\r\n        Suffix: undefined,\r\n    };\r\n    if (output[\"Suffix\"] !== undefined) {\r\n        contents.Suffix = output[\"Suffix\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlInitiator = function (output, context) {\r\n    var contents = {\r\n        __type: \"Initiator\",\r\n        DisplayName: undefined,\r\n        ID: undefined,\r\n    };\r\n    if (output[\"DisplayName\"] !== undefined) {\r\n        contents.DisplayName = output[\"DisplayName\"];\r\n    }\r\n    if (output[\"ID\"] !== undefined) {\r\n        contents.ID = output[\"ID\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlInventoryConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"InventoryConfiguration\",\r\n        Destination: undefined,\r\n        Filter: undefined,\r\n        Id: undefined,\r\n        IncludedObjectVersions: undefined,\r\n        IsEnabled: undefined,\r\n        OptionalFields: undefined,\r\n        Schedule: undefined,\r\n    };\r\n    if (output[\"Destination\"] !== undefined) {\r\n        contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\r\n    }\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"Id\"] !== undefined) {\r\n        contents.Id = output[\"Id\"];\r\n    }\r\n    if (output[\"IncludedObjectVersions\"] !== undefined) {\r\n        contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\r\n    }\r\n    if (output[\"IsEnabled\"] !== undefined) {\r\n        contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\r\n    }\r\n    if (output.OptionalFields === \"\") {\r\n        contents.OptionalFields = [];\r\n    }\r\n    if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\r\n        contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\r\n    }\r\n    if (output[\"Schedule\"] !== undefined) {\r\n        contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlInventoryConfigurationList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlInventoryConfiguration(entry, context); });\r\n};\r\nvar deserializeAws_restXmlInventoryDestination = function (output, context) {\r\n    var contents = {\r\n        __type: \"InventoryDestination\",\r\n        S3BucketDestination: undefined,\r\n    };\r\n    if (output[\"S3BucketDestination\"] !== undefined) {\r\n        contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlInventoryEncryption = function (output, context) {\r\n    var contents = {\r\n        __type: \"InventoryEncryption\",\r\n        SSEKMS: undefined,\r\n        SSES3: undefined,\r\n    };\r\n    if (output[\"SSE-KMS\"] !== undefined) {\r\n        contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\r\n    }\r\n    if (output[\"SSE-S3\"] !== undefined) {\r\n        contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlInventoryFilter = function (output, context) {\r\n    var contents = {\r\n        __type: \"InventoryFilter\",\r\n        Prefix: undefined,\r\n    };\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlInventoryOptionalFields = function (output, context) {\r\n    return (output || []).map(function (entry) { return entry; });\r\n};\r\nvar deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {\r\n    var contents = {\r\n        __type: \"InventoryS3BucketDestination\",\r\n        AccountId: undefined,\r\n        Bucket: undefined,\r\n        Encryption: undefined,\r\n        Format: undefined,\r\n        Prefix: undefined,\r\n    };\r\n    if (output[\"AccountId\"] !== undefined) {\r\n        contents.AccountId = output[\"AccountId\"];\r\n    }\r\n    if (output[\"Bucket\"] !== undefined) {\r\n        contents.Bucket = output[\"Bucket\"];\r\n    }\r\n    if (output[\"Encryption\"] !== undefined) {\r\n        contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\r\n    }\r\n    if (output[\"Format\"] !== undefined) {\r\n        contents.Format = output[\"Format\"];\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlInventorySchedule = function (output, context) {\r\n    var contents = {\r\n        __type: \"InventorySchedule\",\r\n        Frequency: undefined,\r\n    };\r\n    if (output[\"Frequency\"] !== undefined) {\r\n        contents.Frequency = output[\"Frequency\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"LambdaFunctionConfiguration\",\r\n        Events: undefined,\r\n        Filter: undefined,\r\n        Id: undefined,\r\n        LambdaFunctionArn: undefined,\r\n    };\r\n    if (output.Event === \"\") {\r\n        contents.Events = [];\r\n    }\r\n    if (output[\"Event\"] !== undefined) {\r\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\r\n    }\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"Id\"] !== undefined) {\r\n        contents.Id = output[\"Id\"];\r\n    }\r\n    if (output[\"CloudFunction\"] !== undefined) {\r\n        contents.LambdaFunctionArn = output[\"CloudFunction\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context); });\r\n};\r\nvar deserializeAws_restXmlLifecycleExpiration = function (output, context) {\r\n    var contents = {\r\n        __type: \"LifecycleExpiration\",\r\n        Date: undefined,\r\n        Days: undefined,\r\n        ExpiredObjectDeleteMarker: undefined,\r\n    };\r\n    if (output[\"Date\"] !== undefined) {\r\n        contents.Date = new Date(output[\"Date\"]);\r\n    }\r\n    if (output[\"Days\"] !== undefined) {\r\n        contents.Days = parseInt(output[\"Days\"]);\r\n    }\r\n    if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\r\n        contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlLifecycleRule = function (output, context) {\r\n    var contents = {\r\n        __type: \"LifecycleRule\",\r\n        AbortIncompleteMultipartUpload: undefined,\r\n        Expiration: undefined,\r\n        Filter: undefined,\r\n        ID: undefined,\r\n        NoncurrentVersionExpiration: undefined,\r\n        NoncurrentVersionTransitions: undefined,\r\n        Prefix: undefined,\r\n        Status: undefined,\r\n        Transitions: undefined,\r\n    };\r\n    if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\r\n        contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\r\n    }\r\n    if (output[\"Expiration\"] !== undefined) {\r\n        contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\r\n    }\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"ID\"] !== undefined) {\r\n        contents.ID = output[\"ID\"];\r\n    }\r\n    if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\r\n        contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\r\n    }\r\n    if (output.NoncurrentVersionTransition === \"\") {\r\n        contents.NoncurrentVersionTransitions = [];\r\n    }\r\n    if (output[\"NoncurrentVersionTransition\"] !== undefined) {\r\n        contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    if (output.Transition === \"\") {\r\n        contents.Transitions = [];\r\n    }\r\n    if (output[\"Transition\"] !== undefined) {\r\n        contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {\r\n    var contents = {\r\n        __type: \"LifecycleRuleAndOperator\",\r\n        Prefix: undefined,\r\n        Tags: undefined,\r\n    };\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output.Tag === \"\") {\r\n        contents.Tags = [];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {\r\n    var contents = {\r\n        __type: \"LifecycleRuleFilter\",\r\n        And: undefined,\r\n        Prefix: undefined,\r\n        Tag: undefined,\r\n    };\r\n    if (output[\"And\"] !== undefined) {\r\n        contents.And = deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context);\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlLifecycleRules = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlLifecycleRule(entry, context); });\r\n};\r\nvar deserializeAws_restXmlLoggingEnabled = function (output, context) {\r\n    var contents = {\r\n        __type: \"LoggingEnabled\",\r\n        TargetBucket: undefined,\r\n        TargetGrants: undefined,\r\n        TargetPrefix: undefined,\r\n    };\r\n    if (output[\"TargetBucket\"] !== undefined) {\r\n        contents.TargetBucket = output[\"TargetBucket\"];\r\n    }\r\n    if (output.TargetGrants === \"\") {\r\n        contents.TargetGrants = [];\r\n    }\r\n    if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\r\n        contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\r\n    }\r\n    if (output[\"TargetPrefix\"] !== undefined) {\r\n        contents.TargetPrefix = output[\"TargetPrefix\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlMetrics = function (output, context) {\r\n    var contents = {\r\n        __type: \"Metrics\",\r\n        EventThreshold: undefined,\r\n        Status: undefined,\r\n    };\r\n    if (output[\"EventThreshold\"] !== undefined) {\r\n        contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\r\n    }\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlMetricsAndOperator = function (output, context) {\r\n    var contents = {\r\n        __type: \"MetricsAndOperator\",\r\n        Prefix: undefined,\r\n        Tags: undefined,\r\n    };\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output.Tag === \"\") {\r\n        contents.Tags = [];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlMetricsConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"MetricsConfiguration\",\r\n        Filter: undefined,\r\n        Id: undefined,\r\n    };\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"Id\"] !== undefined) {\r\n        contents.Id = output[\"Id\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlMetricsConfigurationList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlMetricsConfiguration(entry, context); });\r\n};\r\nvar deserializeAws_restXmlMetricsFilter = function (output, context) {\r\n    var contents = {\r\n        __type: \"MetricsFilter\",\r\n        And: undefined,\r\n        Prefix: undefined,\r\n        Tag: undefined,\r\n    };\r\n    if (output[\"And\"] !== undefined) {\r\n        contents.And = deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context);\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlMultipartUpload = function (output, context) {\r\n    var contents = {\r\n        __type: \"MultipartUpload\",\r\n        Initiated: undefined,\r\n        Initiator: undefined,\r\n        Key: undefined,\r\n        Owner: undefined,\r\n        StorageClass: undefined,\r\n        UploadId: undefined,\r\n    };\r\n    if (output[\"Initiated\"] !== undefined) {\r\n        contents.Initiated = new Date(output[\"Initiated\"]);\r\n    }\r\n    if (output[\"Initiator\"] !== undefined) {\r\n        contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\r\n    }\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    if (output[\"Owner\"] !== undefined) {\r\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\r\n    }\r\n    if (output[\"StorageClass\"] !== undefined) {\r\n        contents.StorageClass = output[\"StorageClass\"];\r\n    }\r\n    if (output[\"UploadId\"] !== undefined) {\r\n        contents.UploadId = output[\"UploadId\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlMultipartUploadList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlMultipartUpload(entry, context); });\r\n};\r\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {\r\n    var contents = {\r\n        __type: \"NoncurrentVersionExpiration\",\r\n        NoncurrentDays: undefined,\r\n    };\r\n    if (output[\"NoncurrentDays\"] !== undefined) {\r\n        contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {\r\n    var contents = {\r\n        __type: \"NoncurrentVersionTransition\",\r\n        NoncurrentDays: undefined,\r\n        StorageClass: undefined,\r\n    };\r\n    if (output[\"NoncurrentDays\"] !== undefined) {\r\n        contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\r\n    }\r\n    if (output[\"StorageClass\"] !== undefined) {\r\n        contents.StorageClass = output[\"StorageClass\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlNoncurrentVersionTransition(entry, context); });\r\n};\r\nvar deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {\r\n    var contents = {\r\n        __type: \"NotificationConfigurationFilter\",\r\n        Key: undefined,\r\n    };\r\n    if (output[\"S3Key\"] !== undefined) {\r\n        contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXml_Object = function (output, context) {\r\n    var contents = {\r\n        __type: \"Object\",\r\n        ETag: undefined,\r\n        Key: undefined,\r\n        LastModified: undefined,\r\n        Owner: undefined,\r\n        Size: undefined,\r\n        StorageClass: undefined,\r\n    };\r\n    if (output[\"ETag\"] !== undefined) {\r\n        contents.ETag = output[\"ETag\"];\r\n    }\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    if (output[\"LastModified\"] !== undefined) {\r\n        contents.LastModified = new Date(output[\"LastModified\"]);\r\n    }\r\n    if (output[\"Owner\"] !== undefined) {\r\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\r\n    }\r\n    if (output[\"Size\"] !== undefined) {\r\n        contents.Size = parseInt(output[\"Size\"]);\r\n    }\r\n    if (output[\"StorageClass\"] !== undefined) {\r\n        contents.StorageClass = output[\"StorageClass\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlObjectList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXml_Object(entry, context); });\r\n};\r\nvar deserializeAws_restXmlObjectLockConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"ObjectLockConfiguration\",\r\n        ObjectLockEnabled: undefined,\r\n        Rule: undefined,\r\n    };\r\n    if (output[\"ObjectLockEnabled\"] !== undefined) {\r\n        contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\r\n    }\r\n    if (output[\"Rule\"] !== undefined) {\r\n        contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlObjectLockLegalHold = function (output, context) {\r\n    var contents = {\r\n        __type: \"ObjectLockLegalHold\",\r\n        Status: undefined,\r\n    };\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlObjectLockRetention = function (output, context) {\r\n    var contents = {\r\n        __type: \"ObjectLockRetention\",\r\n        Mode: undefined,\r\n        RetainUntilDate: undefined,\r\n    };\r\n    if (output[\"Mode\"] !== undefined) {\r\n        contents.Mode = output[\"Mode\"];\r\n    }\r\n    if (output[\"RetainUntilDate\"] !== undefined) {\r\n        contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlObjectLockRule = function (output, context) {\r\n    var contents = {\r\n        __type: \"ObjectLockRule\",\r\n        DefaultRetention: undefined,\r\n    };\r\n    if (output[\"DefaultRetention\"] !== undefined) {\r\n        contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlObjectVersion = function (output, context) {\r\n    var contents = {\r\n        __type: \"ObjectVersion\",\r\n        ETag: undefined,\r\n        IsLatest: undefined,\r\n        Key: undefined,\r\n        LastModified: undefined,\r\n        Owner: undefined,\r\n        Size: undefined,\r\n        StorageClass: undefined,\r\n        VersionId: undefined,\r\n    };\r\n    if (output[\"ETag\"] !== undefined) {\r\n        contents.ETag = output[\"ETag\"];\r\n    }\r\n    if (output[\"IsLatest\"] !== undefined) {\r\n        contents.IsLatest = output[\"IsLatest\"] == \"true\";\r\n    }\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    if (output[\"LastModified\"] !== undefined) {\r\n        contents.LastModified = new Date(output[\"LastModified\"]);\r\n    }\r\n    if (output[\"Owner\"] !== undefined) {\r\n        contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\r\n    }\r\n    if (output[\"Size\"] !== undefined) {\r\n        contents.Size = parseInt(output[\"Size\"]);\r\n    }\r\n    if (output[\"StorageClass\"] !== undefined) {\r\n        contents.StorageClass = output[\"StorageClass\"];\r\n    }\r\n    if (output[\"VersionId\"] !== undefined) {\r\n        contents.VersionId = output[\"VersionId\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlObjectVersionList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlObjectVersion(entry, context); });\r\n};\r\nvar deserializeAws_restXmlOwner = function (output, context) {\r\n    var contents = {\r\n        __type: \"Owner\",\r\n        DisplayName: undefined,\r\n        ID: undefined,\r\n    };\r\n    if (output[\"DisplayName\"] !== undefined) {\r\n        contents.DisplayName = output[\"DisplayName\"];\r\n    }\r\n    if (output[\"ID\"] !== undefined) {\r\n        contents.ID = output[\"ID\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlPart = function (output, context) {\r\n    var contents = {\r\n        __type: \"Part\",\r\n        ETag: undefined,\r\n        LastModified: undefined,\r\n        PartNumber: undefined,\r\n        Size: undefined,\r\n    };\r\n    if (output[\"ETag\"] !== undefined) {\r\n        contents.ETag = output[\"ETag\"];\r\n    }\r\n    if (output[\"LastModified\"] !== undefined) {\r\n        contents.LastModified = new Date(output[\"LastModified\"]);\r\n    }\r\n    if (output[\"PartNumber\"] !== undefined) {\r\n        contents.PartNumber = parseInt(output[\"PartNumber\"]);\r\n    }\r\n    if (output[\"Size\"] !== undefined) {\r\n        contents.Size = parseInt(output[\"Size\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlParts = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlPart(entry, context); });\r\n};\r\nvar deserializeAws_restXmlPolicyStatus = function (output, context) {\r\n    var contents = {\r\n        __type: \"PolicyStatus\",\r\n        IsPublic: undefined,\r\n    };\r\n    if (output[\"IsPublic\"] !== undefined) {\r\n        contents.IsPublic = output[\"IsPublic\"] == \"true\";\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"PublicAccessBlockConfiguration\",\r\n        BlockPublicAcls: undefined,\r\n        BlockPublicPolicy: undefined,\r\n        IgnorePublicAcls: undefined,\r\n        RestrictPublicBuckets: undefined,\r\n    };\r\n    if (output[\"BlockPublicAcls\"] !== undefined) {\r\n        contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\r\n    }\r\n    if (output[\"BlockPublicPolicy\"] !== undefined) {\r\n        contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\r\n    }\r\n    if (output[\"IgnorePublicAcls\"] !== undefined) {\r\n        contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\r\n    }\r\n    if (output[\"RestrictPublicBuckets\"] !== undefined) {\r\n        contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlQueueConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"QueueConfiguration\",\r\n        Events: undefined,\r\n        Filter: undefined,\r\n        Id: undefined,\r\n        QueueArn: undefined,\r\n    };\r\n    if (output.Event === \"\") {\r\n        contents.Events = [];\r\n    }\r\n    if (output[\"Event\"] !== undefined) {\r\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\r\n    }\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"Id\"] !== undefined) {\r\n        contents.Id = output[\"Id\"];\r\n    }\r\n    if (output[\"Queue\"] !== undefined) {\r\n        contents.QueueArn = output[\"Queue\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlQueueConfigurationList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlQueueConfiguration(entry, context); });\r\n};\r\nvar deserializeAws_restXmlRedirect = function (output, context) {\r\n    var contents = {\r\n        __type: \"Redirect\",\r\n        HostName: undefined,\r\n        HttpRedirectCode: undefined,\r\n        Protocol: undefined,\r\n        ReplaceKeyPrefixWith: undefined,\r\n        ReplaceKeyWith: undefined,\r\n    };\r\n    if (output[\"HostName\"] !== undefined) {\r\n        contents.HostName = output[\"HostName\"];\r\n    }\r\n    if (output[\"HttpRedirectCode\"] !== undefined) {\r\n        contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\r\n    }\r\n    if (output[\"Protocol\"] !== undefined) {\r\n        contents.Protocol = output[\"Protocol\"];\r\n    }\r\n    if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\r\n        contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\r\n    }\r\n    if (output[\"ReplaceKeyWith\"] !== undefined) {\r\n        contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {\r\n    var contents = {\r\n        __type: \"RedirectAllRequestsTo\",\r\n        HostName: undefined,\r\n        Protocol: undefined,\r\n    };\r\n    if (output[\"HostName\"] !== undefined) {\r\n        contents.HostName = output[\"HostName\"];\r\n    }\r\n    if (output[\"Protocol\"] !== undefined) {\r\n        contents.Protocol = output[\"Protocol\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlReplicationConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"ReplicationConfiguration\",\r\n        Role: undefined,\r\n        Rules: undefined,\r\n    };\r\n    if (output[\"Role\"] !== undefined) {\r\n        contents.Role = output[\"Role\"];\r\n    }\r\n    if (output.Rule === \"\") {\r\n        contents.Rules = [];\r\n    }\r\n    if (output[\"Rule\"] !== undefined) {\r\n        contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlReplicationRule = function (output, context) {\r\n    var contents = {\r\n        __type: \"ReplicationRule\",\r\n        DeleteMarkerReplication: undefined,\r\n        Destination: undefined,\r\n        ExistingObjectReplication: undefined,\r\n        Filter: undefined,\r\n        ID: undefined,\r\n        Prefix: undefined,\r\n        Priority: undefined,\r\n        SourceSelectionCriteria: undefined,\r\n        Status: undefined,\r\n    };\r\n    if (output[\"DeleteMarkerReplication\"] !== undefined) {\r\n        contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\r\n    }\r\n    if (output[\"Destination\"] !== undefined) {\r\n        contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\r\n    }\r\n    if (output[\"ExistingObjectReplication\"] !== undefined) {\r\n        contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\r\n    }\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"ID\"] !== undefined) {\r\n        contents.ID = output[\"ID\"];\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output[\"Priority\"] !== undefined) {\r\n        contents.Priority = parseInt(output[\"Priority\"]);\r\n    }\r\n    if (output[\"SourceSelectionCriteria\"] !== undefined) {\r\n        contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\r\n    }\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {\r\n    var contents = {\r\n        __type: \"ReplicationRuleAndOperator\",\r\n        Prefix: undefined,\r\n        Tags: undefined,\r\n    };\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output.Tag === \"\") {\r\n        contents.Tags = [];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlReplicationRuleFilter = function (output, context) {\r\n    var contents = {\r\n        __type: \"ReplicationRuleFilter\",\r\n        And: undefined,\r\n        Prefix: undefined,\r\n        Tag: undefined,\r\n    };\r\n    if (output[\"And\"] !== undefined) {\r\n        contents.And = deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context);\r\n    }\r\n    if (output[\"Prefix\"] !== undefined) {\r\n        contents.Prefix = output[\"Prefix\"];\r\n    }\r\n    if (output[\"Tag\"] !== undefined) {\r\n        contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlReplicationRules = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlReplicationRule(entry, context); });\r\n};\r\nvar deserializeAws_restXmlReplicationTime = function (output, context) {\r\n    var contents = {\r\n        __type: \"ReplicationTime\",\r\n        Status: undefined,\r\n        Time: undefined,\r\n    };\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    if (output[\"Time\"] !== undefined) {\r\n        contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlReplicationTimeValue = function (output, context) {\r\n    var contents = {\r\n        __type: \"ReplicationTimeValue\",\r\n        Minutes: undefined,\r\n    };\r\n    if (output[\"Minutes\"] !== undefined) {\r\n        contents.Minutes = parseInt(output[\"Minutes\"]);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlRoutingRule = function (output, context) {\r\n    var contents = {\r\n        __type: \"RoutingRule\",\r\n        Condition: undefined,\r\n        Redirect: undefined,\r\n    };\r\n    if (output[\"Condition\"] !== undefined) {\r\n        contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\r\n    }\r\n    if (output[\"Redirect\"] !== undefined) {\r\n        contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlRoutingRules = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlRoutingRule(entry, context); });\r\n};\r\nvar deserializeAws_restXmlS3KeyFilter = function (output, context) {\r\n    var contents = {\r\n        __type: \"S3KeyFilter\",\r\n        FilterRules: undefined,\r\n    };\r\n    if (output.FilterRule === \"\") {\r\n        contents.FilterRules = [];\r\n    }\r\n    if (output[\"FilterRule\"] !== undefined) {\r\n        contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {\r\n    var contents = {\r\n        __type: \"ServerSideEncryptionByDefault\",\r\n        KMSMasterKeyID: undefined,\r\n        SSEAlgorithm: undefined,\r\n    };\r\n    if (output[\"KMSMasterKeyID\"] !== undefined) {\r\n        contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\r\n    }\r\n    if (output[\"SSEAlgorithm\"] !== undefined) {\r\n        contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"ServerSideEncryptionConfiguration\",\r\n        Rules: undefined,\r\n    };\r\n    if (output.Rule === \"\") {\r\n        contents.Rules = [];\r\n    }\r\n    if (output[\"Rule\"] !== undefined) {\r\n        contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {\r\n    var contents = {\r\n        __type: \"ServerSideEncryptionRule\",\r\n        ApplyServerSideEncryptionByDefault: undefined,\r\n    };\r\n    if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\r\n        contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlServerSideEncryptionRule(entry, context); });\r\n};\r\nvar deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {\r\n    var contents = {\r\n        __type: \"SourceSelectionCriteria\",\r\n        SseKmsEncryptedObjects: undefined,\r\n    };\r\n    if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\r\n        contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlSSEKMS = function (output, context) {\r\n    var contents = {\r\n        __type: \"SSEKMS\",\r\n        KeyId: undefined,\r\n    };\r\n    if (output[\"KeyId\"] !== undefined) {\r\n        contents.KeyId = output[\"KeyId\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {\r\n    var contents = {\r\n        __type: \"SseKmsEncryptedObjects\",\r\n        Status: undefined,\r\n    };\r\n    if (output[\"Status\"] !== undefined) {\r\n        contents.Status = output[\"Status\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlSSES3 = function (output, context) {\r\n    var contents = {\r\n        __type: \"SSES3\",\r\n    };\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlStorageClassAnalysis = function (output, context) {\r\n    var contents = {\r\n        __type: \"StorageClassAnalysis\",\r\n        DataExport: undefined,\r\n    };\r\n    if (output[\"DataExport\"] !== undefined) {\r\n        contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {\r\n    var contents = {\r\n        __type: \"StorageClassAnalysisDataExport\",\r\n        Destination: undefined,\r\n        OutputSchemaVersion: undefined,\r\n    };\r\n    if (output[\"Destination\"] !== undefined) {\r\n        contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\r\n    }\r\n    if (output[\"OutputSchemaVersion\"] !== undefined) {\r\n        contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlTag = function (output, context) {\r\n    var contents = {\r\n        __type: \"Tag\",\r\n        Key: undefined,\r\n        Value: undefined,\r\n    };\r\n    if (output[\"Key\"] !== undefined) {\r\n        contents.Key = output[\"Key\"];\r\n    }\r\n    if (output[\"Value\"] !== undefined) {\r\n        contents.Value = output[\"Value\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlTagSet = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlTag(entry, context); });\r\n};\r\nvar deserializeAws_restXmlTargetGrant = function (output, context) {\r\n    var contents = {\r\n        __type: \"TargetGrant\",\r\n        Grantee: undefined,\r\n        Permission: undefined,\r\n    };\r\n    if (output[\"Grantee\"] !== undefined) {\r\n        contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\r\n    }\r\n    if (output[\"Permission\"] !== undefined) {\r\n        contents.Permission = output[\"Permission\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlTargetGrants = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlTargetGrant(entry, context); });\r\n};\r\nvar deserializeAws_restXmlTopicConfiguration = function (output, context) {\r\n    var contents = {\r\n        __type: \"TopicConfiguration\",\r\n        Events: undefined,\r\n        Filter: undefined,\r\n        Id: undefined,\r\n        TopicArn: undefined,\r\n    };\r\n    if (output.Event === \"\") {\r\n        contents.Events = [];\r\n    }\r\n    if (output[\"Event\"] !== undefined) {\r\n        contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\r\n    }\r\n    if (output[\"Filter\"] !== undefined) {\r\n        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\r\n    }\r\n    if (output[\"Id\"] !== undefined) {\r\n        contents.Id = output[\"Id\"];\r\n    }\r\n    if (output[\"Topic\"] !== undefined) {\r\n        contents.TopicArn = output[\"Topic\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlTopicConfigurationList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlTopicConfiguration(entry, context); });\r\n};\r\nvar deserializeAws_restXmlTransition = function (output, context) {\r\n    var contents = {\r\n        __type: \"Transition\",\r\n        Date: undefined,\r\n        Days: undefined,\r\n        StorageClass: undefined,\r\n    };\r\n    if (output[\"Date\"] !== undefined) {\r\n        contents.Date = new Date(output[\"Date\"]);\r\n    }\r\n    if (output[\"Days\"] !== undefined) {\r\n        contents.Days = parseInt(output[\"Days\"]);\r\n    }\r\n    if (output[\"StorageClass\"] !== undefined) {\r\n        contents.StorageClass = output[\"StorageClass\"];\r\n    }\r\n    return contents;\r\n};\r\nvar deserializeAws_restXmlTransitionList = function (output, context) {\r\n    return (output || []).map(function (entry) { return deserializeAws_restXmlTransition(entry, context); });\r\n};\r\nvar deserializeMetadata = function (output) { return ({\r\n    httpStatusCode: output.statusCode,\r\n    httpHeaders: output.headers,\r\n    requestId: output.headers[\"x-amzn-requestid\"],\r\n}); };\r\n// Collect low-level response body stream to Uint8Array.\r\nvar collectBody = function (streamBody, context) {\r\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\r\n    if (streamBody instanceof Uint8Array) {\r\n        return Promise.resolve(streamBody);\r\n    }\r\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\r\n};\r\n// Encode Uint8Array data into string with utf-8.\r\nvar collectBodyString = function (streamBody, context) {\r\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\r\n};\r\nvar isSerializableHeaderValue = function (value) {\r\n    return value !== undefined &&\r\n        value !== \"\" &&\r\n        (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\r\n        (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\r\n};\r\nvar decodeEscapedXML = function (str) {\r\n    return str\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&apos;/g, \"'\")\r\n        .replace(/&quot;/g, '\"')\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&lt;/g, \"<\");\r\n};\r\nvar parseBody = function (streamBody, context) {\r\n    return collectBodyString(streamBody, context).then(function (encoded) {\r\n        if (encoded.length) {\r\n            var parsedObj = xmlParse(encoded, {\r\n                attributeNamePrefix: \"\",\r\n                ignoreAttributes: false,\r\n                parseNodeValue: false,\r\n                tagValueProcessor: function (val, tagName) { return decodeEscapedXML(val); },\r\n            });\r\n            var textNodeName = \"#text\";\r\n            var key = Object.keys(parsedObj)[0];\r\n            var parsedObjToReturn = parsedObj[key];\r\n            if (parsedObjToReturn[textNodeName]) {\r\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\r\n                delete parsedObjToReturn[textNodeName];\r\n            }\r\n            return __getValueFromTextNode(parsedObjToReturn);\r\n        }\r\n        return {};\r\n    });\r\n};\r\nvar loadRestXmlErrorCode = function (output, data) {\r\n    if (data.Code !== undefined) {\r\n        return data.Code;\r\n    }\r\n    if (output.statusCode == 404) {\r\n        return \"NotFound\";\r\n    }\r\n    return \"\";\r\n};\r\n//# sourceMappingURL=Aws_restXml.js.map"]},"metadata":{},"sourceType":"module"}