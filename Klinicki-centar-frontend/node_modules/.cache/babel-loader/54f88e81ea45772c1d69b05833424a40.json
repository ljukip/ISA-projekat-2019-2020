{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon } from './Icon';\nimport { withTheme } from '../core/theming';\n\nclass CrossFadeIcon extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentIcon: this.props.source,\n      previousIcon: null,\n      fade: new Animated.Value(1)\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextState.currentIcon === nextProps.source) {\n      return null;\n    }\n\n    return {\n      currentIcon: nextProps.source,\n      previousIcon: nextState.currentIcon\n    };\n  }\n\n  componentDidUpdate(_, prevState) {\n    const {\n      previousIcon\n    } = this.state;\n    const {\n      theme: {\n        animation: {\n          scale\n        }\n      }\n    } = this.props;\n\n    if (!isValidIcon(previousIcon) || isEqualIcon(previousIcon, prevState.previousIcon)) {\n      return;\n    }\n\n    this.state.fade.setValue(1);\n    Animated.timing(this.state.fade, {\n      duration: scale * 200,\n      toValue: 0,\n      useNativeDriver: true\n    }).start();\n  }\n\n  render() {\n    const {\n      color,\n      size\n    } = this.props;\n    const opacityPrev = this.state.fade;\n    const opacityNext = this.state.previousIcon ? this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0]\n    }) : 1;\n    const rotatePrev = this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['-90deg', '0deg']\n    });\n    const rotateNext = this.state.previousIcon ? this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '-180deg']\n    }) : '0deg';\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.content, {\n        height: size,\n        width: size\n      }]\n    }, this.state.previousIcon ? /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.icon, {\n        opacity: opacityPrev,\n        transform: [{\n          rotate: rotatePrev\n        }]\n      }]\n    }, /*#__PURE__*/React.createElement(Icon, {\n      source: this.state.previousIcon,\n      size: size,\n      color: color\n    })) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.icon, {\n        opacity: opacityNext,\n        transform: [{\n          rotate: rotateNext\n        }]\n      }]\n    }, /*#__PURE__*/React.createElement(Icon, {\n      source: this.state.currentIcon,\n      size: size,\n      color: color\n    })));\n  }\n\n}\n\nexport default withTheme(CrossFadeIcon);\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["React","nextState","nextProps","currentIcon","previousIcon","fade","Animated","componentDidUpdate","theme","animation","scale","isValidIcon","isEqualIcon","prevState","duration","toValue","useNativeDriver","render","size","opacityPrev","opacityNext","inputRange","outputRange","rotatePrev","rotateNext","styles","height","width","opacity","transform","rotate","color","withTheme","content","alignItems","justifyContent","icon","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, isEqualIcon, IconSource } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype State = {\n  currentIcon: IconSource;\n  previousIcon: IconSource | null;\n  fade: Animated.Value;\n};\n\nclass CrossFadeIcon extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, nextState: State) {\n    if (nextState.currentIcon === nextProps.source) {\n      return null;\n    }\n\n    return {\n      currentIcon: nextProps.source,\n      previousIcon: nextState.currentIcon,\n    };\n  }\n\n  state: State = {\n    currentIcon: this.props.source,\n    previousIcon: null,\n    fade: new Animated.Value(1),\n  };\n\n  componentDidUpdate(_: Props, prevState: State) {\n    const { previousIcon } = this.state;\n    const {\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    if (\n      !isValidIcon(previousIcon) ||\n      isEqualIcon(previousIcon, prevState.previousIcon)\n    ) {\n      return;\n    }\n\n    this.state.fade.setValue(1);\n\n    Animated.timing(this.state.fade, {\n      duration: scale * 200,\n      toValue: 0,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const { color, size } = this.props;\n    const opacityPrev = this.state.fade;\n    const opacityNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0],\n        })\n      : 1;\n\n    const rotatePrev = this.state.fade.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['-90deg', '0deg'],\n    });\n\n    const rotateNext = this.state.previousIcon\n      ? this.state.fade.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '-180deg'],\n        })\n      : '0deg';\n\n    return (\n      <View\n        style={[\n          styles.content,\n          {\n            height: size,\n            width: size,\n          },\n        ]}\n      >\n        {this.state.previousIcon ? (\n          <Animated.View\n            style={[\n              styles.icon,\n              {\n                opacity: opacityPrev,\n                transform: [{ rotate: rotatePrev }],\n              },\n            ]}\n          >\n            <Icon source={this.state.previousIcon} size={size} color={color} />\n          </Animated.View>\n        ) : null}\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityNext,\n              transform: [{ rotate: rotateNext }],\n            },\n          ]}\n        >\n          <Icon source={this.state.currentIcon} size={size} color={color} />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}