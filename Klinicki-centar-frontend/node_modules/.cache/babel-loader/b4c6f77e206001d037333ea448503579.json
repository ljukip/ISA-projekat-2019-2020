{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Platform } from 'react-native'; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nimport CheckboxIOS from './CheckboxIOS';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxItem from './CheckboxItem';\nimport { withTheme } from '../../core/theming';\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass Checkbox extends React.Component {\n  // @component ./CheckboxItem.tsx\n  // @component ./CheckboxAndroid.tsx\n  // @component ./CheckboxIOS.tsx\n  render() {\n    return Platform.OS === 'ios' ? /*#__PURE__*/React.createElement(CheckboxIOS, this.props) : /*#__PURE__*/React.createElement(CheckboxAndroid, this.props);\n  }\n\n}\n\n_defineProperty(Checkbox, \"Item\", CheckboxItem);\n\n_defineProperty(Checkbox, \"Android\", CheckboxAndroid);\n\n_defineProperty(Checkbox, \"IOS\", CheckboxIOS);\n\nexport default withTheme(Checkbox);","map":{"version":3,"sources":["Checkbox.tsx"],"names":["Checkbox","React","CheckboxItem","CheckboxAndroid","CheckboxIOS","render","Platform","withTheme"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,cAAA,C,CACA;;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AAIA,OAAA,YAAA,MAAA,gBAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,MAAA,QAAA,SAAuBC,KAAK,CAA5B,SAAA,CAA8C;AAC5C;AAGA;AAGA;AAGAI,EAAAA,MAAM,GAAG;AACP,WAAOC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,aACL,KAAA,CAAA,aAAA,CAAA,WAAA,EAAiB,KADZA,KACL,CADKA,GAAAA,aAGL,KAAA,CAAA,aAAA,CAAA,eAAA,EAAqB,KAHvB,KAGE,CAHF;AAKD;;AAhB2C;;gBAAxCN,Q,UAEUE,Y;;gBAFVF,Q,aAKaG,e;;gBALbH,Q,SAQSI,W;;AAWf,eAAeG,SAAS,CAAxB,QAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\nimport CheckboxItem from './CheckboxItem';\nimport { withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxItem.tsx\n  static Item = CheckboxItem;\n\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"]},"metadata":{},"sourceType":"module"}