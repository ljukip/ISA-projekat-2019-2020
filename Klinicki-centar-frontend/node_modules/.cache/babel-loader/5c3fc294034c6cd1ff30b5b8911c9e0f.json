{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport RadioButtonItem from './RadioButtonItem';\nimport { withTheme } from '../../core/theming';\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState('first');\n *\n *   return (\n *     <View>\n *       <RadioButton\n *         value=\"first\"\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('first')}\n *       />\n *       <RadioButton\n *         value=\"second\"\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('second')}\n *       />\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass RadioButton extends React.Component {\n  // @component ./RadioButtonGroup.tsx\n  // @component ./RadioButtonAndroid.tsx\n  // @component ./RadioButtonIOS.tsx\n  // @component ./RadioButtonItem.tsx\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS\n    });\n    return /*#__PURE__*/React.createElement(Button, this.props);\n  }\n\n}\n\n_defineProperty(RadioButton, \"Group\", RadioButtonGroup);\n\n_defineProperty(RadioButton, \"Android\", RadioButtonAndroid);\n\n_defineProperty(RadioButton, \"IOS\", RadioButtonIOS);\n\n_defineProperty(RadioButton, \"Item\", RadioButtonItem);\n\nexport default withTheme(RadioButton);","map":{"version":3,"sources":["RadioButton.tsx"],"names":["RadioButton","React","RadioButtonGroup","RadioButtonAndroid","RadioButtonIOS","RadioButtonItem","render","Button","default","ios","withTheme"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,cAAA;AACA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAA,kBAAA,MAAA,sBAAA;AACA,OAAA,cAAA,MAAA,kBAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,MAAA,WAAA,SAA0BC,KAAK,CAA/B,SAAA,CAAiD;AAC/C;AAGA;AAGA;AAGA;AAGAK,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,QAAQ,CAAR,MAAA,CAAgB;AAC7BC,MAAAA,OAAO,EADsB,kBAAA;AAE7BC,MAAAA,GAAG,EAAEL;AAFwB,KAAhB,CAAf;AAKA,WAAA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAY,KAAnB,KAAO,CAAP;AACD;;AApB8C;;gBAA3CJ,W,WAEWE,gB;;gBAFXF,W,aAKaG,kB;;gBALbH,W,SAQSI,c;;gBARTJ,W,UAWUK,e;;AAYhB,eAAeK,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport RadioButtonItem from './RadioButtonItem';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState('first');\n *\n *   return (\n *     <View>\n *       <RadioButton\n *         value=\"first\"\n *         status={ checked === 'first' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('first')}\n *       />\n *       <RadioButton\n *         value=\"second\"\n *         status={ checked === 'second' ? 'checked' : 'unchecked' }\n *         onPress={() => setChecked('second')}\n *       />\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  // @component ./RadioButtonItem.tsx\n  static Item = RadioButtonItem;\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return <Button {...this.props} />;\n  }\n}\n\nexport default withTheme(RadioButton);\n"]},"metadata":{},"sourceType":"module"}