{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ConsoleLogger as Logger } from './Logger';\nimport { Sha256 as jsSha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@aws-sdk/util-hex-encoding';\nimport { parse, format } from 'url';\nimport { DateUtils } from './Util';\nvar logger = new Logger('Signer');\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nvar IOT_SERVICE_NAME = 'iotdevicegateway';\n\nvar encrypt = function (key, src) {\n  var hash = new jsSha256(key);\n  hash.update(src);\n  return hash.digestSync();\n};\n\nvar hash = function (src) {\n  var arg = src || '';\n  var hash = new jsSha256();\n  hash.update(arg);\n  return toHex(hash.digestSync());\n};\n/**\r\n * @private\r\n * RFC 3986 compliant version of encodeURIComponent\r\n */\n\n\nvar escape_RFC3986 = function (component) {\n  return component.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n};\n/**\r\n * @private\r\n * Create canonical query string\r\n *\r\n */\n\n\nvar canonical_query = function (query) {\n  if (!query || query.length === 0) {\n    return '';\n  }\n\n  return query.split('&').map(function (e) {\n    var key_val = e.split('=');\n\n    if (key_val.length === 1) {\n      return e;\n    } else {\n      var reencoded_val = escape_RFC3986(key_val[1]);\n      return key_val[0] + '=' + reencoded_val;\n    }\n  }).sort(function (a, b) {\n    var key_a = a.split('=')[0];\n    var key_b = b.split('=')[0];\n\n    if (key_a === key_b) {\n      return a < b ? -1 : 1;\n    } else {\n      return key_a < key_b ? -1 : 1;\n    }\n  }).join('&');\n};\n/**\r\n* @private\r\n* Create canonical headers\r\n*\r\n<pre>\r\nCanonicalHeaders =\r\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\r\nCanonicalHeadersEntry =\r\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\r\n</pre>\r\n*/\n\n\nvar canonical_headers = function (headers) {\n  if (!headers || Object.keys(headers).length === 0) {\n    return '';\n  }\n\n  return Object.keys(headers).map(function (key) {\n    return {\n      key: key.toLowerCase(),\n      value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : ''\n    };\n  }).sort(function (a, b) {\n    return a.key < b.key ? -1 : 1;\n  }).map(function (item) {\n    return item.key + ':' + item.value;\n  }).join('\\n') + '\\n';\n};\n/**\r\n * List of header keys included in the canonical headers.\r\n * @access private\r\n */\n\n\nvar signed_headers = function (headers) {\n  return Object.keys(headers).map(function (key) {\n    return key.toLowerCase();\n  }).sort().join(';');\n};\n/**\r\n* @private\r\n* Create canonical request\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\r\n*\r\n<pre>\r\nCanonicalRequest =\r\n    HTTPRequestMethod + '\\n' +\r\n    CanonicalURI + '\\n' +\r\n    CanonicalQueryString + '\\n' +\r\n    CanonicalHeaders + '\\n' +\r\n    SignedHeaders + '\\n' +\r\n    HexEncode(Hash(RequestPayload))\r\n</pre>\r\n*/\n\n\nvar canonical_request = function (request) {\n  var url_info = parse(request.url);\n  return [request.method || '/', encodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'), canonical_query(url_info.query), canonical_headers(request.headers), signed_headers(request.headers), hash(request.data)].join('\\n');\n};\n\nvar parse_service_info = function (request) {\n  var url_info = parse(request.url),\n      host = url_info.host;\n  var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n  var parsed = (matched || []).slice(1, 3);\n\n  if (parsed[1] === 'es') {\n    // Elastic Search\n    parsed = parsed.reverse();\n  }\n\n  return {\n    service: request.service || parsed[0],\n    region: request.region || parsed[1]\n  };\n};\n\nvar credential_scope = function (d_str, region, service) {\n  return [d_str, region, service, 'aws4_request'].join('/');\n};\n/**\r\n* @private\r\n* Create a string to sign\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\r\n*\r\n<pre>\r\nStringToSign =\r\n    Algorithm + \\n +\r\n    RequestDateTime + \\n +\r\n    CredentialScope + \\n +\r\n    HashedCanonicalRequest\r\n</pre>\r\n*/\n\n\nvar string_to_sign = function (algorithm, canonical_request, dt_str, scope) {\n  return [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\n};\n/**\r\n* @private\r\n* Create signing key\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\r\n*\r\n<pre>\r\nkSecret = your secret access key\r\nkDate = HMAC(\"AWS4\" + kSecret, Date)\r\nkRegion = HMAC(kDate, Region)\r\nkService = HMAC(kRegion, Service)\r\nkSigning = HMAC(kService, \"aws4_request\")\r\n</pre>\r\n*/\n\n\nvar get_signing_key = function (secret_key, d_str, service_info) {\n  logger.debug(service_info);\n  var k = 'AWS4' + secret_key,\n      k_date = encrypt(k, d_str),\n      k_region = encrypt(k_date, service_info.region),\n      k_service = encrypt(k_region, service_info.service),\n      k_signing = encrypt(k_service, 'aws4_request');\n  return k_signing;\n};\n\nvar get_signature = function (signing_key, str_to_sign) {\n  return toHex(encrypt(signing_key, str_to_sign));\n};\n/**\r\n * @private\r\n * Create authorization header\r\n * Refer to\r\n * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\r\n */\n\n\nvar get_authorization_header = function (algorithm, access_key, scope, signed_headers, signature) {\n  return [algorithm + ' ' + 'Credential=' + access_key + '/' + scope, 'SignedHeaders=' + signed_headers, 'Signature=' + signature].join(', ');\n};\n\nvar Signer =\n/** @class */\nfunction () {\n  function Signer() {}\n  /**\r\n  * Sign a HTTP request, add 'Authorization' header to request param\r\n  * @method sign\r\n  * @memberof Signer\r\n  * @static\r\n  *\r\n  * @param {object} request - HTTP request object\r\n  <pre>\r\n  request: {\r\n      method: GET | POST | PUT ...\r\n      url: ...,\r\n      headers: {\r\n          header1: ...\r\n      },\r\n      data: data\r\n  }\r\n  </pre>\r\n  * @param {object} access_info - AWS access credential info\r\n  <pre>\r\n  access_info: {\r\n      access_key: ...,\r\n      secret_key: ...,\r\n      session_token: ...\r\n  }\r\n  </pre>\r\n  * @param {object} [service_info] - AWS service type and region, optional,\r\n  *                                  if not provided then parse out from url\r\n  <pre>\r\n  service_info: {\r\n      service: ...,\r\n      region: ...\r\n  }\r\n  </pre>\r\n  *\r\n  * @returns {object} Signed HTTP request\r\n  */\n\n\n  Signer.sign = function (request, access_info, service_info) {\n    if (service_info === void 0) {\n      service_info = null;\n    }\n\n    request.headers = request.headers || {}; // datetime string and date string\n\n    var dt = DateUtils.getDateWithClockOffset(),\n        dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''),\n        d_str = dt_str.substr(0, 8);\n    var url_info = parse(request.url);\n    request.headers['host'] = url_info.host;\n    request.headers['x-amz-date'] = dt_str;\n\n    if (access_info.session_token) {\n      request.headers['X-Amz-Security-Token'] = access_info.session_token;\n    } // Task 1: Create a Canonical Request\n\n\n    var request_str = canonical_request(request);\n    logger.debug(request_str); // Task 2: Create a String to Sign\n\n    var serviceInfo = service_info || parse_service_info(request),\n        scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service),\n        str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope); // Task 3: Calculate the Signature\n\n    var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo),\n        signature = get_signature(signing_key, str_to_sign); // Task 4: Adding the Signing information to the Request\n\n    var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\n    request.headers['Authorization'] = authorization_header;\n    return request;\n  };\n\n  Signer.signUrl = function (urlOrRequest, accessInfo, serviceInfo, expiration) {\n    var urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n    var method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n    var body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n    var now = DateUtils.getDateWithClockOffset().toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    var today = now.substr(0, 8); // Intentionally discarding search\n\n    var _a = parse(urlToSign, true, true),\n        search = _a.search,\n        parsedUrl = __rest(_a, [\"search\"]);\n\n    var host = parsedUrl.host;\n    var signedHeaders = {\n      host: host\n    };\n\n    var _b = serviceInfo || parse_service_info({\n      url: format(parsedUrl)\n    }),\n        region = _b.region,\n        service = _b.service;\n\n    var credentialScope = credential_scope(today, region, service); // IoT service does not allow the session token in the canonical request\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n\n    var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;\n\n    var queryParams = __assign(__assign(__assign({\n      'X-Amz-Algorithm': DEFAULT_ALGORITHM,\n      'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'),\n      'X-Amz-Date': now.substr(0, 16)\n    }, sessionTokenRequired ? {\n      'X-Amz-Security-Token': \"\" + accessInfo.session_token\n    } : {}), expiration ? {\n      'X-Amz-Expires': \"\" + expiration\n    } : {}), {\n      'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',')\n    });\n\n    var canonicalRequest = canonical_request({\n      method: method,\n      url: format(__assign(__assign({}, parsedUrl), {\n        query: __assign(__assign({}, parsedUrl.query), queryParams)\n      })),\n      headers: signedHeaders,\n      data: body\n    });\n    var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\n    var signing_key = get_signing_key(accessInfo.secret_key, today, {\n      region: region,\n      service: service\n    });\n    var signature = get_signature(signing_key, stringToSign);\n\n    var additionalQueryParams = __assign({\n      'X-Amz-Signature': signature\n    }, accessInfo.session_token && {\n      'X-Amz-Security-Token': accessInfo.session_token\n    });\n\n    var result = format({\n      protocol: parsedUrl.protocol,\n      slashes: true,\n      hostname: parsedUrl.hostname,\n      port: parsedUrl.port,\n      pathname: parsedUrl.pathname,\n      query: __assign(__assign(__assign({}, parsedUrl.query), queryParams), additionalQueryParams)\n    });\n    return result;\n  };\n\n  return Signer;\n}();\n\nexport { Signer };\n/**\r\n * @deprecated use per-function import\r\n */\n\nexport default Signer;","map":{"version":3,"sources":["../src/Signer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { ConsoleLogger as Logger } from './Logger';\r\nimport { Sha256 as jsSha256 } from '@aws-crypto/sha256-js';\r\nimport { toHex } from '@aws-sdk/util-hex-encoding';\r\nimport { parse, format } from 'url';\r\nimport { DateUtils } from './Util';\r\nvar logger = new Logger('Signer');\r\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\r\nvar IOT_SERVICE_NAME = 'iotdevicegateway';\r\nvar encrypt = function (key, src) {\r\n    var hash = new jsSha256(key);\r\n    hash.update(src);\r\n    return hash.digestSync();\r\n};\r\nvar hash = function (src) {\r\n    var arg = src || '';\r\n    var hash = new jsSha256();\r\n    hash.update(arg);\r\n    return toHex(hash.digestSync());\r\n};\r\n/**\r\n * @private\r\n * RFC 3986 compliant version of encodeURIComponent\r\n */\r\nvar escape_RFC3986 = function (component) {\r\n    return component.replace(/[!'()*]/g, function (c) {\r\n        return ('%' +\r\n            c\r\n                .charCodeAt(0)\r\n                .toString(16)\r\n                .toUpperCase());\r\n    });\r\n};\r\n/**\r\n * @private\r\n * Create canonical query string\r\n *\r\n */\r\nvar canonical_query = function (query) {\r\n    if (!query || query.length === 0) {\r\n        return '';\r\n    }\r\n    return query\r\n        .split('&')\r\n        .map(function (e) {\r\n        var key_val = e.split('=');\r\n        if (key_val.length === 1) {\r\n            return e;\r\n        }\r\n        else {\r\n            var reencoded_val = escape_RFC3986(key_val[1]);\r\n            return key_val[0] + '=' + reencoded_val;\r\n        }\r\n    })\r\n        .sort(function (a, b) {\r\n        var key_a = a.split('=')[0];\r\n        var key_b = b.split('=')[0];\r\n        if (key_a === key_b) {\r\n            return a < b ? -1 : 1;\r\n        }\r\n        else {\r\n            return key_a < key_b ? -1 : 1;\r\n        }\r\n    })\r\n        .join('&');\r\n};\r\n/**\r\n* @private\r\n* Create canonical headers\r\n*\r\n<pre>\r\nCanonicalHeaders =\r\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\r\nCanonicalHeadersEntry =\r\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\r\n</pre>\r\n*/\r\nvar canonical_headers = function (headers) {\r\n    if (!headers || Object.keys(headers).length === 0) {\r\n        return '';\r\n    }\r\n    return (Object.keys(headers)\r\n        .map(function (key) {\r\n        return {\r\n            key: key.toLowerCase(),\r\n            value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : '',\r\n        };\r\n    })\r\n        .sort(function (a, b) {\r\n        return a.key < b.key ? -1 : 1;\r\n    })\r\n        .map(function (item) {\r\n        return item.key + ':' + item.value;\r\n    })\r\n        .join('\\n') + '\\n');\r\n};\r\n/**\r\n * List of header keys included in the canonical headers.\r\n * @access private\r\n */\r\nvar signed_headers = function (headers) {\r\n    return Object.keys(headers)\r\n        .map(function (key) {\r\n        return key.toLowerCase();\r\n    })\r\n        .sort()\r\n        .join(';');\r\n};\r\n/**\r\n* @private\r\n* Create canonical request\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\r\n*\r\n<pre>\r\nCanonicalRequest =\r\n    HTTPRequestMethod + '\\n' +\r\n    CanonicalURI + '\\n' +\r\n    CanonicalQueryString + '\\n' +\r\n    CanonicalHeaders + '\\n' +\r\n    SignedHeaders + '\\n' +\r\n    HexEncode(Hash(RequestPayload))\r\n</pre>\r\n*/\r\nvar canonical_request = function (request) {\r\n    var url_info = parse(request.url);\r\n    return [\r\n        request.method || '/',\r\n        encodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'),\r\n        canonical_query(url_info.query),\r\n        canonical_headers(request.headers),\r\n        signed_headers(request.headers),\r\n        hash(request.data),\r\n    ].join('\\n');\r\n};\r\nvar parse_service_info = function (request) {\r\n    var url_info = parse(request.url), host = url_info.host;\r\n    var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\r\n    var parsed = (matched || []).slice(1, 3);\r\n    if (parsed[1] === 'es') {\r\n        // Elastic Search\r\n        parsed = parsed.reverse();\r\n    }\r\n    return {\r\n        service: request.service || parsed[0],\r\n        region: request.region || parsed[1],\r\n    };\r\n};\r\nvar credential_scope = function (d_str, region, service) {\r\n    return [d_str, region, service, 'aws4_request'].join('/');\r\n};\r\n/**\r\n* @private\r\n* Create a string to sign\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\r\n*\r\n<pre>\r\nStringToSign =\r\n    Algorithm + \\n +\r\n    RequestDateTime + \\n +\r\n    CredentialScope + \\n +\r\n    HashedCanonicalRequest\r\n</pre>\r\n*/\r\nvar string_to_sign = function (algorithm, canonical_request, dt_str, scope) {\r\n    return [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\r\n};\r\n/**\r\n* @private\r\n* Create signing key\r\n* Refer to\r\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\r\n*\r\n<pre>\r\nkSecret = your secret access key\r\nkDate = HMAC(\"AWS4\" + kSecret, Date)\r\nkRegion = HMAC(kDate, Region)\r\nkService = HMAC(kRegion, Service)\r\nkSigning = HMAC(kService, \"aws4_request\")\r\n</pre>\r\n*/\r\nvar get_signing_key = function (secret_key, d_str, service_info) {\r\n    logger.debug(service_info);\r\n    var k = 'AWS4' + secret_key, k_date = encrypt(k, d_str), k_region = encrypt(k_date, service_info.region), k_service = encrypt(k_region, service_info.service), k_signing = encrypt(k_service, 'aws4_request');\r\n    return k_signing;\r\n};\r\nvar get_signature = function (signing_key, str_to_sign) {\r\n    return toHex(encrypt(signing_key, str_to_sign));\r\n};\r\n/**\r\n * @private\r\n * Create authorization header\r\n * Refer to\r\n * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\r\n */\r\nvar get_authorization_header = function (algorithm, access_key, scope, signed_headers, signature) {\r\n    return [\r\n        algorithm + ' ' + 'Credential=' + access_key + '/' + scope,\r\n        'SignedHeaders=' + signed_headers,\r\n        'Signature=' + signature,\r\n    ].join(', ');\r\n};\r\nvar Signer = /** @class */ (function () {\r\n    function Signer() {\r\n    }\r\n    /**\r\n    * Sign a HTTP request, add 'Authorization' header to request param\r\n    * @method sign\r\n    * @memberof Signer\r\n    * @static\r\n    *\r\n    * @param {object} request - HTTP request object\r\n    <pre>\r\n    request: {\r\n        method: GET | POST | PUT ...\r\n        url: ...,\r\n        headers: {\r\n            header1: ...\r\n        },\r\n        data: data\r\n    }\r\n    </pre>\r\n    * @param {object} access_info - AWS access credential info\r\n    <pre>\r\n    access_info: {\r\n        access_key: ...,\r\n        secret_key: ...,\r\n        session_token: ...\r\n    }\r\n    </pre>\r\n    * @param {object} [service_info] - AWS service type and region, optional,\r\n    *                                  if not provided then parse out from url\r\n    <pre>\r\n    service_info: {\r\n        service: ...,\r\n        region: ...\r\n    }\r\n    </pre>\r\n    *\r\n    * @returns {object} Signed HTTP request\r\n    */\r\n    Signer.sign = function (request, access_info, service_info) {\r\n        if (service_info === void 0) { service_info = null; }\r\n        request.headers = request.headers || {};\r\n        // datetime string and date string\r\n        var dt = DateUtils.getDateWithClockOffset(), dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''), d_str = dt_str.substr(0, 8);\r\n        var url_info = parse(request.url);\r\n        request.headers['host'] = url_info.host;\r\n        request.headers['x-amz-date'] = dt_str;\r\n        if (access_info.session_token) {\r\n            request.headers['X-Amz-Security-Token'] = access_info.session_token;\r\n        }\r\n        // Task 1: Create a Canonical Request\r\n        var request_str = canonical_request(request);\r\n        logger.debug(request_str);\r\n        // Task 2: Create a String to Sign\r\n        var serviceInfo = service_info || parse_service_info(request), scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service), str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope);\r\n        // Task 3: Calculate the Signature\r\n        var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo), signature = get_signature(signing_key, str_to_sign);\r\n        // Task 4: Adding the Signing information to the Request\r\n        var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\r\n        request.headers['Authorization'] = authorization_header;\r\n        return request;\r\n    };\r\n    Signer.signUrl = function (urlOrRequest, accessInfo, serviceInfo, expiration) {\r\n        var urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\r\n        var method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\r\n        var body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\r\n        var now = DateUtils.getDateWithClockOffset()\r\n            .toISOString()\r\n            .replace(/[:\\-]|\\.\\d{3}/g, '');\r\n        var today = now.substr(0, 8);\r\n        // Intentionally discarding search\r\n        var _a = parse(urlToSign, true, true), search = _a.search, parsedUrl = __rest(_a, [\"search\"]);\r\n        var host = parsedUrl.host;\r\n        var signedHeaders = { host: host };\r\n        var _b = serviceInfo || parse_service_info({ url: format(parsedUrl) }), region = _b.region, service = _b.service;\r\n        var credentialScope = credential_scope(today, region, service);\r\n        // IoT service does not allow the session token in the canonical request\r\n        // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\r\n        var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;\r\n        var queryParams = __assign(__assign(__assign({ 'X-Amz-Algorithm': DEFAULT_ALGORITHM, 'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'), 'X-Amz-Date': now.substr(0, 16) }, (sessionTokenRequired\r\n            ? { 'X-Amz-Security-Token': \"\" + accessInfo.session_token }\r\n            : {})), (expiration ? { 'X-Amz-Expires': \"\" + expiration } : {})), { 'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',') });\r\n        var canonicalRequest = canonical_request({\r\n            method: method,\r\n            url: format(__assign(__assign({}, parsedUrl), { query: __assign(__assign({}, parsedUrl.query), queryParams) })),\r\n            headers: signedHeaders,\r\n            data: body,\r\n        });\r\n        var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\r\n        var signing_key = get_signing_key(accessInfo.secret_key, today, {\r\n            region: region,\r\n            service: service,\r\n        });\r\n        var signature = get_signature(signing_key, stringToSign);\r\n        var additionalQueryParams = __assign({ 'X-Amz-Signature': signature }, (accessInfo.session_token && {\r\n            'X-Amz-Security-Token': accessInfo.session_token,\r\n        }));\r\n        var result = format({\r\n            protocol: parsedUrl.protocol,\r\n            slashes: true,\r\n            hostname: parsedUrl.hostname,\r\n            port: parsedUrl.port,\r\n            pathname: parsedUrl.pathname,\r\n            query: __assign(__assign(__assign({}, parsedUrl.query), queryParams), additionalQueryParams),\r\n        });\r\n        return result;\r\n    };\r\n    return Signer;\r\n}());\r\nexport { Signer };\r\n/**\r\n * @deprecated use per-function import\r\n */\r\nexport default Signer;\r\n//# sourceMappingURL=Signer.js.map"]},"metadata":{},"sourceType":"module"}