{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { StyleSheet, View, I18nManager } from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTablePagination extends React.Component {\n  render() {\n    const _this$props = this.props,\n          {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"label\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\"]);\n\n    const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n    return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n      style: [styles.container, style]\n    }), /*#__PURE__*/React.createElement(Text, {\n      style: [styles.label, {\n        color: labelColor\n      }],\n      numberOfLines: 1\n    }, label), /*#__PURE__*/React.createElement(IconButton, {\n      icon: ({\n        size,\n        color\n      }) => /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      }),\n      color: theme.colors.text,\n      disabled: page === 0,\n      onPress: () => onPageChange(page - 1)\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      icon: ({\n        size,\n        color\n      }) => /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      }),\n      color: theme.colors.text,\n      disabled: page === numberOfPages - 1,\n      onPress: () => onPageChange(page + 1)\n    }));\n  }\n\n}\n\n_defineProperty(DataTablePagination, \"displayName\", 'DataTable.Pagination');\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 44\n  }\n});\nexport default withTheme(DataTablePagination); // @component-docs ignore-next-line\n\nexport { DataTablePagination };","map":{"version":3,"sources":["DataTablePagination.tsx"],"names":["DataTablePagination","React","render","theme","rest","labelColor","color","styles","I18nManager","page","onPageChange","numberOfPages","container","justifyContent","flexDirection","alignItems","paddingLeft","label","fontSize","marginRight","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,EAAA,IAAA,EAAA,WAAA,QAAA,cAAA;AAOA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,eAAA;AACA,OAAA,IAAA,MAAA,oBAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AACA,OAAA,qBAAA,MAAA,0BAAA;AA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,MAAA,mBAAA,SAAkCC,KAAK,CAAvC,SAAA,CAAyD;AAGvDC,EAAAA,MAAM,GAAG;AACP,UAAA,WAAA,GAQI,KARJ,KAAA;AAAA,UAAM;AAAA,MAAA,KAAA;AAAA,MAAA,IAAA;AAAA,MAAA,aAAA;AAAA,MAAA,YAAA;AAAA,MAAA,KAAA;AAMJC,MAAAA;AANI,QAAN,WAAA;AAAA,UAOKC,IAPL,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,eAAA,EAAA,cAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AASA,UAAMC,UAAU,GAAGC,KAAK,CAACH,KAAK,CAALA,MAAAA,CAANG,IAAK,CAALA,CAAAA,KAAAA,CAAAA,GAAAA,EAAAA,GAAAA,GAAnB,MAAmBA,EAAnB;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAgB,MAAA,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAA,KAAA;AAAvB,KAAA,CAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,MAAA,KAAK,EAAE,CAACA,MAAM,CAAP,KAAA,EAAe;AAAED,QAAAA,KAAK,EAAED;AAAT,OAAf,CAAb;AAAoD,MAAA,aAAa,EAAE;AAAnE,KAAA,EADF,KACE,CADF,EAAA,aAIE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACE,MAAA,IAAI,EAAE,CAAC;AAAA,QAAA,IAAA;AAAQC,QAAAA;AAAR,OAAD,KAAA,aACJ,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AACE,QAAA,IAAI,EADN,cAAA;AAEE,QAAA,KAAK,EAFP,KAAA;AAGE,QAAA,IAAI,EAHN,IAAA;AAIE,QAAA,SAAS,EAAEE,WAAW,CAAXA,KAAAA,GAAAA,KAAAA,GAA4B;AAJzC,OAAA,CAFJ;AASE,MAAA,KAAK,EAAEL,KAAK,CAALA,MAAAA,CATT,IAAA;AAUE,MAAA,QAAQ,EAAEM,IAAI,KAVhB,CAAA;AAWE,MAAA,OAAO,EAAE,MAAMC,YAAY,CAACD,IAAI,GAAL,CAAA;AAX7B,KAAA,CAJF,EAAA,aAiBE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACE,MAAA,IAAI,EAAE,CAAC;AAAA,QAAA,IAAA;AAAQH,QAAAA;AAAR,OAAD,KAAA,aACJ,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AACE,QAAA,IAAI,EADN,eAAA;AAEE,QAAA,KAAK,EAFP,KAAA;AAGE,QAAA,IAAI,EAHN,IAAA;AAIE,QAAA,SAAS,EAAEE,WAAW,CAAXA,KAAAA,GAAAA,KAAAA,GAA4B;AAJzC,OAAA,CAFJ;AASE,MAAA,KAAK,EAAEL,KAAK,CAALA,MAAAA,CATT,IAAA;AAUE,MAAA,QAAQ,EAAEM,IAAI,KAAKE,aAAa,GAVlC,CAAA;AAWE,MAAA,OAAO,EAAE,MAAMD,YAAY,CAACD,IAAI,GAAL,CAAA;AAX7B,KAAA,CAjBF,CADF;AAiCD;;AAhDsD;;gBAAnDT,mB,iBACiB,sB;;AAkDvB,MAAMO,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EADL,UAAA;AAETC,IAAAA,aAAa,EAFJ,KAAA;AAGTC,IAAAA,UAAU,EAHD,QAAA;AAITC,IAAAA,WAAW,EAAE;AAJJ,GADoB;AAQ/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EADH,EAAA;AAELC,IAAAA,WAAW,EAAE;AAFR;AARwB,CAAlB,CAAf;AAcA,eAAeC,SAAS,CAAxB,mBAAwB,CAAxB,C,CAEA;;AACA,SAAA,mBAAA","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-right\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}