{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Title from '../Typography/Title';\nimport { withTheme } from '../../core/theming';\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nclass DialogTitle extends React.Component {\n  render() {\n    const _this$props = this.props,\n          {\n      children,\n      theme,\n      style\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"theme\", \"style\"]);\n\n    return /*#__PURE__*/React.createElement(Title, _extends({\n      accessibilityTraits: \"header\",\n      accessibilityRole: \"header\",\n      style: [styles.text, {\n        color: theme.colors.text\n      }, style]\n    }, rest), children);\n  }\n\n}\n\n_defineProperty(DialogTitle, \"displayName\", 'Dialog.Title');\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  }\n});\nexport default withTheme(DialogTitle); // @component-docs ignore-next-line\n\nexport { DialogTitle };","map":{"version":3,"sources":["DialogTitle.tsx"],"names":["DialogTitle","React","render","style","rest","styles","color","theme","text","marginTop","marginBottom","marginHorizontal","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,cAAA;AACA,OAAA,KAAA,MAAA,qBAAA;AACA,SAAA,SAAA,QAAA,oBAAA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,MAAA,WAAA,SAA0BC,KAAK,CAA/B,SAAA,CAAiD;AAG/CC,EAAAA,MAAM,GAAG;AACP,UAAA,WAAA,GAA4C,KAA5C,KAAA;AAAA,UAAM;AAAA,MAAA,QAAA;AAAA,MAAA,KAAA;AAAmBC,MAAAA;AAAnB,QAAN,WAAA;AAAA,UAAmCC,IAAnC,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,MAAA,mBAAmB,EADrB,QAAA;AAEE,MAAA,iBAAiB,EAFnB,QAAA;AAGE,MAAA,KAAK,EAAE,CAACC,MAAM,CAAP,IAAA,EAAc;AAAEC,QAAAA,KAAK,EAAEC,KAAK,CAALA,MAAAA,CAAaC;AAAtB,OAAd,EAAA,KAAA;AAHT,KAAA,EAAA,IAAA,CAAA,EADF,QACE,CADF;AAUD;;AAhB8C;;gBAA3CR,W,iBACiB,c;;AAkBvB,MAAMK,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BG,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EADL,EAAA;AAEJC,IAAAA,YAAY,EAFR,EAAA;AAGJC,IAAAA,gBAAgB,EAAE;AAHd;AADyB,CAAlB,CAAf;AAQA,eAAeC,SAAS,CAAxB,WAAwB,CAAxB,C,CAEA;;AACA,SAAA,WAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport Title from '../Typography/Title';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass DialogTitle extends React.Component<Props> {\n  static displayName = 'Dialog.Title';\n\n  render() {\n    const { children, theme, style, ...rest } = this.props;\n\n    return (\n      <Title\n        accessibilityTraits=\"header\"\n        accessibilityRole=\"header\"\n        style={[styles.text, { color: theme.colors.text }, style]}\n        {...rest}\n      >\n        {children}\n      </Title>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n});\n\nexport default withTheme(DialogTitle);\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"]},"metadata":{},"sourceType":"module"}