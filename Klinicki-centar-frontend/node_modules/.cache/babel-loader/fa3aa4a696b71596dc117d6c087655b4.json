{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nexport const RadioButtonContext = /*#__PURE__*/React.createContext(null);\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-android.gif\" />\n *  <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-ios.gif\" />\n *  <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <View>\n *         <Text>First</Text>\n *         <RadioButton value=\"first\" />\n *       </View>\n *       <View>\n *         <Text>Second</Text>\n *         <RadioButton value=\"second\" />\n *       </View>\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\n\nclass RadioButtonGroup extends React.Component {\n  render() {\n    const {\n      value,\n      onValueChange,\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(RadioButtonContext.Provider, {\n      value: {\n        value,\n        onValueChange\n      }\n    }, children);\n  }\n\n}\n\n_defineProperty(RadioButtonGroup, \"displayName\", 'RadioButton.Group');\n\nexport default RadioButtonGroup;","map":{"version":3,"sources":["RadioButtonGroup.tsx"],"names":["RadioButtonContext","React","RadioButtonGroup","render","children","onValueChange"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAsBA,OAAO,MAAMA,kBAAkB,GAAA,aAAGC,KAAK,CAALA,aAAAA,CAA3B,IAA2BA,CAA3B;AAIP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,MAAA,gBAAA,SAA+BA,KAAK,CAApC,SAAA,CAAsD;AAGpDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAA,MAAA,KAAA;AAAA,MAAA,aAAA;AAAwBC,MAAAA;AAAxB,QAAqC,KAA3C,KAAA;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA;AAA6B,MAAA,KAAK,EAAE;AAAA,QAAA,KAAA;AAASC,QAAAA;AAAT;AAApC,KAAA,EADF,QACE,CADF;AAKD;;AAXmD;;gBAAhDH,gB,iBACiB,mB;;AAavB,eAAA,gBAAA","sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected radio button.\n   */\n  value: string;\n  /**\n   * React elements containing radio buttons.\n   */\n  children: React.ReactNode;\n};\n\nexport type RadioButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const RadioButtonContext = React.createContext<RadioButtonContextType>(\n  null as any\n);\n\n/**\n * Radio button group allows to control a group of radio buttons.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-android.gif\" />\n *  <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-button-group-ios.gif\" />\n *  <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <View>\n *         <Text>First</Text>\n *         <RadioButton value=\"first\" />\n *       </View>\n *       <View>\n *         <Text>Second</Text>\n *         <RadioButton value=\"second\" />\n *       </View>\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nclass RadioButtonGroup extends React.Component<Props> {\n  static displayName = 'RadioButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <RadioButtonContext.Provider value={{ value, onValueChange }}>\n        {children}\n      </RadioButtonContext.Provider>\n    );\n  }\n}\n\nexport default RadioButtonGroup;\n"]},"metadata":{},"sourceType":"module"}