{"ast":null,"code":"/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\nimport { browserOrNode } from '../JS';\nimport { StorageHelper } from '../StorageHelper';\nexport var Linking = {};\nexport var AppState = {\n  addEventListener: function (action, handler) {\n    return undefined;\n  }\n}; // if not in react native, just use local storage\n\nexport var AsyncStorage = browserOrNode().isBrowser ? new StorageHelper().getStorage() : undefined;","map":{"version":3,"sources":["../../src/RNComponents/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAaA,SAAS,aAAT,QAA8B,OAA9B;AACA,SAAS,aAAT,QAA8B,kBAA9B;AAEA,OAAO,IAAM,OAAO,GAAG,EAAhB;AACP,OAAO,IAAM,QAAQ,GAAG;AACvB,EAAA,gBAAgB,EAAE,UAAC,MAAD,EAAS,OAAT,EAAgB;AAAK,WAAA,SAAA;AAAS;AADzB,CAAjB,C,CAIP;;AACA,OAAO,IAAM,YAAY,GAAG,aAAa,GAAG,SAAhB,GACzB,IAAI,aAAJ,GAAoB,UAApB,EADyB,GAEzB,SAFI","sourceRoot":"","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\nimport { browserOrNode } from '../JS';\r\nimport { StorageHelper } from '../StorageHelper';\r\nexport var Linking = {};\r\nexport var AppState = {\r\n    addEventListener: function (action, handler) { return undefined; },\r\n};\r\n// if not in react native, just use local storage\r\nexport var AsyncStorage = browserOrNode().isBrowser\r\n    ? new StorageHelper().getStorage()\r\n    : undefined;\r\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}