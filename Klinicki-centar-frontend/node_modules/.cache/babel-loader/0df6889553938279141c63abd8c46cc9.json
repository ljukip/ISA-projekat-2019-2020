{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nimport { withTheme } from '../../core/theming';\nconst defaultSize = 64;\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * ```\n */\n\nclass AvatarImage extends React.Component {\n  render() {\n    const _this$props = this.props,\n          {\n      size = defaultSize,\n      source,\n      style,\n      theme\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"size\", \"source\", \"style\", \"theme\"]);\n\n    const {\n      colors\n    } = theme;\n    const {\n      backgroundColor = colors.primary\n    } = StyleSheet.flatten(style) || {};\n    return /*#__PURE__*/React.createElement(View, _extends({\n      style: [{\n        width: size,\n        height: size,\n        borderRadius: size / 2,\n        backgroundColor\n      }, style]\n    }, rest), /*#__PURE__*/React.createElement(Image, {\n      source: source,\n      style: {\n        width: size,\n        height: size,\n        borderRadius: size / 2\n      }\n    }));\n  }\n\n}\n\n_defineProperty(AvatarImage, \"displayName\", 'Avatar.Image');\n\n_defineProperty(AvatarImage, \"defaultProps\", {\n  size: defaultSize\n});\n\nexport default withTheme(AvatarImage);","map":{"version":3,"sources":["AvatarImage.tsx"],"names":["defaultSize","AvatarImage","React","size","render","theme","rest","colors","backgroundColor","primary","StyleSheet","width","height","borderRadius","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,KAAA,EAAA,UAAA,EAAA,IAAA,QAAA,cAAA;AAQA,SAAA,SAAA,QAAA,oBAAA;AAEA,MAAMA,WAAW,GAAjB,EAAA;AAkBA;;;;;;;;;;;;;;;;;;;;AAmBA,MAAA,WAAA,SAA0BE,KAAK,CAA/B,SAAA,CAAiD;AAO/CE,EAAAA,MAAM,GAAG;AACP,UAAA,WAAA,GAA8D,KAA9D,KAAA;AAAA,UAAM;AAAED,MAAAA,IAAI,GAAN,WAAA;AAAA,MAAA,MAAA;AAAA,MAAA,KAAA;AAAqCE,MAAAA;AAArC,QAAN,WAAA;AAAA,UAAqDC,IAArD,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAN,KAAA;AAEA,UAAM;AAAEC,MAAAA,eAAe,GAAGD,MAAM,CAACE;AAA3B,QACJC,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,KADF,EAAA;AAGA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,KAAK,EADP,IAAA;AAEEC,QAAAA,MAAM,EAFR,IAAA;AAGEC,QAAAA,YAAY,EAAEV,IAAI,GAHpB,CAAA;AAIEK,QAAAA;AAJF,OADK,EAAA,KAAA;AADT,KAAA,EAAA,IAAA,CAAA,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,MAAM,EADR,MAAA;AAEE,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAP,IAAA;AAAeC,QAAAA,MAAM,EAArB,IAAA;AAA6BC,QAAAA,YAAY,EAAEV,IAAI,GAAG;AAAlD;AAFT,KAAA,CAZF,CADF;AAmBD;;AAjC8C;;gBAA3CF,W,iBACiB,c;;gBADjBA,W,kBAGkB;AACpBE,EAAAA,IAAI,EAAEH;AADc,C;;AAiCxB,eAAec,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  ImageSourcePropType,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Image to display for the `Avatar`.\n   */\n  source: ImageSourcePropType;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * ```\n */\nclass AvatarImage extends React.Component<Props> {\n  static displayName = 'Avatar.Image';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const { size = defaultSize, source, style, theme, ...rest } = this.props;\n    const { colors } = theme;\n\n    const { backgroundColor = colors.primary } =\n      StyleSheet.flatten(style) || {};\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          style,\n        ]}\n        {...rest}\n      >\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default withTheme(AvatarImage);\n"]},"metadata":{},"sourceType":"module"}