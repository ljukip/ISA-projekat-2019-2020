{"ast":null,"code":"'use strict';\n\nconst util = require('./util');\n\nconst buildOptions = require('./util').buildOptions;\n\nconst x2j = require('./xmlstr2xmlnode'); //TODO: do it later\n\n\nconst convertToJsonString = function (node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function (node, options, level) {\n  let jObj = '{'; //traver through all the children\n\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n\n  util.merge(jObj, node.attrsMap); //add attrsMap as new children\n\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  } //add value\n\n\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;","map":{"version":3,"sources":["C:/Users/Ljubica/Desktop/ISA-projekat-2019-2020/klinicki-centar-frontend/node_modules/fast-xml-parser/src/node2json_str.js"],"names":["util","require","buildOptions","x2j","convertToJsonString","node","options","defaultOptions","props","indentBy","_cToJsonStr","level","jObj","keys","Object","child","index","length","tagname","tag","substr","merge","attrsMap","isEmptyObject","isExist","val","cdataPositionChar","textNodeName","stringval","v","isNaN","indentate","repeat","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst util = require('./util');\r\nconst buildOptions = require('./util').buildOptions;\r\nconst x2j = require('./xmlstr2xmlnode');\r\n\r\n//TODO: do it later\r\nconst convertToJsonString = function(node, options) {\r\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\r\n\r\n  options.indentBy = options.indentBy || '';\r\n  return _cToJsonStr(node, options, 0);\r\n};\r\n\r\nconst _cToJsonStr = function(node, options, level) {\r\n  let jObj = '{';\r\n\r\n  //traver through all the children\r\n  const keys = Object.keys(node.child);\r\n\r\n  for (let index = 0; index < keys.length; index++) {\r\n    var tagname = keys[index];\r\n    if (node.child[tagname] && node.child[tagname].length > 1) {\r\n      jObj += '\"' + tagname + '\" : [ ';\r\n      for (var tag in node.child[tagname]) {\r\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\r\n      }\r\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\r\n    } else {\r\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\r\n    }\r\n  }\r\n  util.merge(jObj, node.attrsMap);\r\n  //add attrsMap as new children\r\n  if (util.isEmptyObject(jObj)) {\r\n    return util.isExist(node.val) ? node.val : '';\r\n  } else {\r\n    if (util.isExist(node.val)) {\r\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\r\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\r\n      }\r\n    }\r\n  }\r\n  //add value\r\n  if (jObj[jObj.length - 1] === ',') {\r\n    jObj = jObj.substr(0, jObj.length - 2);\r\n  }\r\n  return jObj + '}';\r\n};\r\n\r\nfunction stringval(v) {\r\n  if (v === true || v === false || !isNaN(v)) {\r\n    return v;\r\n  } else {\r\n    return '\"' + v + '\"';\r\n  }\r\n}\r\n\r\nfunction indentate(options, level) {\r\n  return options.indentBy.repeat(level);\r\n}\r\n\r\nexports.convertToJsonString = convertToJsonString;\r\n"]},"metadata":{},"sourceType":"script"}