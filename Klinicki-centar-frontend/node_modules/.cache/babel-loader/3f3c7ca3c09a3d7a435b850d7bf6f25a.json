{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport API, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\nimport Observable from 'zen-observable-ts';\nimport { buildSubscriptionGraphQLOperation, getAuthorizationRules, TransformerMutationType } from '../utils';\nvar logger = new Logger('DataStore');\nexport var CONTROL_MSG;\n\n(function (CONTROL_MSG) {\n  CONTROL_MSG[\"CONNECTED\"] = \"CONNECTED\";\n})(CONTROL_MSG || (CONTROL_MSG = {}));\n\nexport var USER_CREDENTIALS;\n\n(function (USER_CREDENTIALS) {\n  USER_CREDENTIALS[USER_CREDENTIALS[\"none\"] = 0] = \"none\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"unauth\"] = 1] = \"unauth\";\n  USER_CREDENTIALS[USER_CREDENTIALS[\"auth\"] = 2] = \"auth\";\n})(USER_CREDENTIALS || (USER_CREDENTIALS = {}));\n\nvar SubscriptionProcessor =\n/** @class */\nfunction () {\n  function SubscriptionProcessor(schema) {\n    this.schema = schema;\n    this.typeQuery = new WeakMap();\n    this.buffer = [];\n  }\n\n  SubscriptionProcessor.prototype.buildSubscription = function (namespace, model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\n    var _a = this.getAuthorizationInfo(model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) || {},\n        authMode = _a.authMode,\n        isOwner = _a.isOwner,\n        ownerField = _a.ownerField,\n        ownerValue = _a.ownerValue;\n\n    var _b = __read(buildSubscriptionGraphQLOperation(namespace, model, transformerMutationType, isOwner, ownerField), 3),\n        opType = _b[0],\n        opName = _b[1],\n        query = _b[2];\n\n    return {\n      authMode: authMode,\n      opType: opType,\n      opName: opName,\n      query: query,\n      isOwner: isOwner,\n      ownerField: ownerField,\n      ownerValue: ownerValue\n    };\n  };\n\n  SubscriptionProcessor.prototype.getAuthorizationInfo = function (model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\n    if (cognitoTokenPayload === void 0) {\n      cognitoTokenPayload = {};\n    }\n\n    if (oidcTokenPayload === void 0) {\n      oidcTokenPayload = {};\n    }\n\n    var result;\n    var rules = getAuthorizationRules(model, transformerMutationType); // check if has apiKey and public authorization\n\n    var apiKeyAuth = rules.find(function (rule) {\n      return rule.authStrategy === 'public' && rule.provider === 'apiKey';\n    });\n\n    if (apiKeyAuth) {\n      return {\n        authMode: GRAPHQL_AUTH_MODE.API_KEY,\n        isOwner: false\n      };\n    } // check if has iam authorization\n\n\n    if (userCredentials === USER_CREDENTIALS.unauth || userCredentials === USER_CREDENTIALS.auth) {\n      var iamPublicAuth = rules.find(function (rule) {\n        return rule.authStrategy === 'public' && rule.provider === 'iam';\n      });\n\n      if (iamPublicAuth) {\n        return {\n          authMode: GRAPHQL_AUTH_MODE.AWS_IAM,\n          isOwner: false\n        };\n      }\n\n      var iamPrivateAuth = userCredentials === USER_CREDENTIALS.auth && rules.find(function (rule) {\n        return rule.authStrategy === 'private' && rule.provider === 'iam';\n      });\n\n      if (iamPrivateAuth) {\n        return {\n          authMode: GRAPHQL_AUTH_MODE.AWS_IAM,\n          isOwner: false\n        };\n      }\n    } // if not check if has groups authorization and token has groupClaim allowed for cognito token\n\n\n    var groupAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'group' && rule.provider === 'userPools';\n    });\n    var validCognitoGroup = groupAuthRules.find(function (groupAuthRule) {\n      // validate token agains groupClaim\n      var userGroups = cognitoTokenPayload[groupAuthRule.groupClaim] || [];\n      return userGroups.find(function (userGroup) {\n        return groupAuthRule.groups.find(function (group) {\n          return group === userGroup;\n        });\n      });\n    });\n\n    if (validCognitoGroup) {\n      return {\n        authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n        isOwner: false\n      };\n    } // if not check if has groups authorization and token has groupClaim allowed for oidc token\n\n\n    groupAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'group' && rule.provider === 'oidc';\n    });\n    var validOidcGroup = groupAuthRules.find(function (groupAuthRule) {\n      // validate token agains groupClaim\n      var userGroups = oidcTokenPayload[groupAuthRule.groupClaim] || [];\n      userGroups.find(function (userGroup) {\n        return groupAuthRule.groups.find(function (group) {\n          return group === userGroup;\n        });\n      });\n    });\n\n    if (validOidcGroup) {\n      return {\n        authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n        isOwner: false\n      };\n    } // check if has owner auth authorization and token ownerField for cognito token\n\n\n    var ownerAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'userPools';\n    });\n    ownerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = cognitoTokenPayload[ownerAuthRule.identityClaim];\n\n      if (ownerValue) {\n        result = {\n          authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\n          isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n\n    if (result) {\n      return result;\n    } // check if has owner auth authorization and token ownerField for oidc token\n\n\n    ownerAuthRules = rules.filter(function (rule) {\n      return rule.authStrategy === 'owner' && rule.provider === 'oidc';\n    });\n    ownerAuthRules.forEach(function (ownerAuthRule) {\n      var ownerValue = oidcTokenPayload[ownerAuthRule.identityClaim];\n\n      if (ownerValue) {\n        result = {\n          authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\n          isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\n          ownerField: ownerAuthRule.ownerField,\n          ownerValue: ownerValue\n        };\n      }\n    });\n\n    if (result) {\n      return result;\n    }\n\n    return null;\n  };\n\n  SubscriptionProcessor.prototype.hubQueryCompletionListener = function (completed, capsule) {\n    var event = capsule.payload.event;\n\n    if (event === PUBSUB_CONTROL_MSG.SUBSCRIPTION_ACK) {\n      completed();\n    }\n  };\n\n  SubscriptionProcessor.prototype.start = function () {\n    var _this = this;\n\n    var ctlObservable = new Observable(function (observer) {\n      var promises = [];\n      var subscriptions = [];\n      var cognitoTokenPayload, oidcTokenPayload;\n      var userCredentials = USER_CREDENTIALS.none;\n\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var credentials, err_1, session, err_2, federatedInfo, token, payload, err_3;\n\n          var _this = this;\n\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                _a.trys.push([0, 2,, 3]);\n\n                return [4\n                /*yield*/\n                , Auth.currentCredentials()];\n\n              case 1:\n                credentials = _a.sent();\n                userCredentials = credentials.authenticated ? USER_CREDENTIALS.auth : USER_CREDENTIALS.unauth;\n                return [3\n                /*break*/\n                , 3];\n\n              case 2:\n                err_1 = _a.sent();\n                return [3\n                /*break*/\n                , 3];\n\n              case 3:\n                _a.trys.push([3, 5,, 6]);\n\n                return [4\n                /*yield*/\n                , Auth.currentSession()];\n\n              case 4:\n                session = _a.sent();\n                cognitoTokenPayload = session.getIdToken().decodePayload();\n                return [3\n                /*break*/\n                , 6];\n\n              case 5:\n                err_2 = _a.sent();\n                return [3\n                /*break*/\n                , 6];\n\n              case 6:\n                _a.trys.push([6, 8,, 9]);\n\n                return [4\n                /*yield*/\n                , Cache.getItem('federatedInfo')];\n\n              case 7:\n                federatedInfo = _a.sent();\n                token = federatedInfo.token;\n                payload = token.split('.')[1];\n                oidcTokenPayload = JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n                return [3\n                /*break*/\n                , 9];\n\n              case 8:\n                err_3 = _a.sent();\n                return [3\n                /*break*/\n                , 9];\n\n              case 9:\n                Object.values(this.schema.namespaces).forEach(function (namespace) {\n                  Object.values(namespace.models).filter(function (_a) {\n                    var syncable = _a.syncable;\n                    return syncable;\n                  }).forEach(function (modelDefinition) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var queriesMetadata;\n\n                      var _this = this;\n\n                      return __generator(this, function (_a) {\n                        queriesMetadata = [TransformerMutationType.CREATE, TransformerMutationType.UPDATE, TransformerMutationType.DELETE].map(function (op) {\n                          return _this.buildSubscription(namespace, modelDefinition, op, userCredentials, cognitoTokenPayload, oidcTokenPayload);\n                        });\n                        queriesMetadata.forEach(function (_a) {\n                          var transformerMutationType = _a.opType,\n                              opName = _a.opName,\n                              query = _a.query,\n                              isOwner = _a.isOwner,\n                              ownerField = _a.ownerField,\n                              ownerValue = _a.ownerValue,\n                              authMode = _a.authMode;\n                          return __awaiter(_this, void 0, void 0, function () {\n                            var variables, queryObservable, subscriptionReadyCallback;\n\n                            var _this = this;\n\n                            return __generator(this, function (_b) {\n                              variables = {};\n\n                              if (isOwner) {\n                                if (!ownerValue) {\n                                  // Check if there is an owner field, check where this error should be located\n                                  observer.error('Owner field required, sign in is needed in order to perform this operation');\n                                  return [2\n                                  /*return*/\n                                  ];\n                                }\n\n                                variables[ownerField] = ownerValue;\n                              }\n\n                              queryObservable = API.graphql(__assign({\n                                query: query,\n                                variables: variables\n                              }, {\n                                authMode: authMode\n                              }));\n                              subscriptions.push(queryObservable.map(function (_a) {\n                                var value = _a.value;\n                                return value;\n                              }).subscribe({\n                                next: function (_a) {\n                                  var data = _a.data,\n                                      errors = _a.errors;\n\n                                  if (Array.isArray(errors) && errors.length > 0) {\n                                    var messages = errors.map(function (_a) {\n                                      var message = _a.message;\n                                      return message;\n                                    });\n                                    logger.warn(\"Skipping incoming subscription. Messages: \" + messages.join('\\n'));\n\n                                    _this.drainBuffer();\n\n                                    return;\n                                  }\n\n                                  var _b = opName,\n                                      record = data[_b];\n\n                                  _this.pushToBuffer(transformerMutationType, modelDefinition, record);\n\n                                  _this.drainBuffer();\n                                },\n                                error: function (subscriptionError) {\n                                  var _a = subscriptionError.error,\n                                      _b = __read((_a === void 0 ? {\n                                    errors: []\n                                  } : _a).errors, 1),\n                                      _c = _b[0],\n                                      _d = (_c === void 0 ? {} : _c).message,\n                                      message = _d === void 0 ? '' : _d;\n\n                                  logger.warn('subscriptionError', message);\n\n                                  if (typeof subscriptionReadyCallback === 'function') {\n                                    subscriptionReadyCallback();\n                                  }\n\n                                  observer.error(message);\n                                }\n                              }));\n                              promises.push(function () {\n                                return __awaiter(_this, void 0, void 0, function () {\n                                  var boundFunction;\n\n                                  var _this = this;\n\n                                  return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                      case 0:\n                                        return [4\n                                        /*yield*/\n                                        , new Promise(function (res) {\n                                          subscriptionReadyCallback = res;\n                                          boundFunction = _this.hubQueryCompletionListener.bind(_this, res);\n                                          Hub.listen('api', boundFunction);\n                                        })];\n\n                                      case 1:\n                                        _a.sent();\n\n                                        Hub.remove('api', boundFunction);\n                                        return [2\n                                        /*return*/\n                                        ];\n                                    }\n                                  });\n                                });\n                              }());\n                              return [2\n                              /*return*/\n                              ];\n                            });\n                          });\n                        });\n                        return [2\n                        /*return*/\n                        ];\n                      });\n                    });\n                  });\n                });\n                Promise.all(promises).then(function () {\n                  return observer.next(CONTROL_MSG.CONNECTED);\n                });\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        subscriptions.forEach(function (subscription) {\n          return subscription.unsubscribe();\n        });\n      };\n    });\n    var dataObservable = new Observable(function (observer) {\n      _this.dataObserver = observer;\n\n      _this.drainBuffer();\n\n      return function () {\n        _this.dataObserver = null;\n      };\n    });\n    return [ctlObservable, dataObservable];\n  };\n\n  SubscriptionProcessor.prototype.pushToBuffer = function (transformerMutationType, modelDefinition, data) {\n    this.buffer.push([transformerMutationType, modelDefinition, data]);\n  };\n\n  SubscriptionProcessor.prototype.drainBuffer = function () {\n    var _this = this;\n\n    if (this.dataObserver) {\n      this.buffer.forEach(function (data) {\n        return _this.dataObserver.next(data);\n      });\n      this.buffer = [];\n    }\n  };\n\n  return SubscriptionProcessor;\n}();\n\nexport { SubscriptionProcessor };","map":{"version":3,"sources":["../../../src/sync/processors/subscription.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nimport API, { GRAPHQL_AUTH_MODE } from '@aws-amplify/api';\r\nimport Auth from '@aws-amplify/auth';\r\nimport Cache from '@aws-amplify/cache';\r\nimport { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\r\nimport { CONTROL_MSG as PUBSUB_CONTROL_MSG } from '@aws-amplify/pubsub';\r\nimport Observable from 'zen-observable-ts';\r\nimport { buildSubscriptionGraphQLOperation, getAuthorizationRules, TransformerMutationType, } from '../utils';\r\nvar logger = new Logger('DataStore');\r\nexport var CONTROL_MSG;\r\n(function (CONTROL_MSG) {\r\n    CONTROL_MSG[\"CONNECTED\"] = \"CONNECTED\";\r\n})(CONTROL_MSG || (CONTROL_MSG = {}));\r\nexport var USER_CREDENTIALS;\r\n(function (USER_CREDENTIALS) {\r\n    USER_CREDENTIALS[USER_CREDENTIALS[\"none\"] = 0] = \"none\";\r\n    USER_CREDENTIALS[USER_CREDENTIALS[\"unauth\"] = 1] = \"unauth\";\r\n    USER_CREDENTIALS[USER_CREDENTIALS[\"auth\"] = 2] = \"auth\";\r\n})(USER_CREDENTIALS || (USER_CREDENTIALS = {}));\r\nvar SubscriptionProcessor = /** @class */ (function () {\r\n    function SubscriptionProcessor(schema) {\r\n        this.schema = schema;\r\n        this.typeQuery = new WeakMap();\r\n        this.buffer = [];\r\n    }\r\n    SubscriptionProcessor.prototype.buildSubscription = function (namespace, model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\r\n        var _a = this.getAuthorizationInfo(model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) || {}, authMode = _a.authMode, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue;\r\n        var _b = __read(buildSubscriptionGraphQLOperation(namespace, model, transformerMutationType, isOwner, ownerField), 3), opType = _b[0], opName = _b[1], query = _b[2];\r\n        return { authMode: authMode, opType: opType, opName: opName, query: query, isOwner: isOwner, ownerField: ownerField, ownerValue: ownerValue };\r\n    };\r\n    SubscriptionProcessor.prototype.getAuthorizationInfo = function (model, transformerMutationType, userCredentials, cognitoTokenPayload, oidcTokenPayload) {\r\n        if (cognitoTokenPayload === void 0) { cognitoTokenPayload = {}; }\r\n        if (oidcTokenPayload === void 0) { oidcTokenPayload = {}; }\r\n        var result;\r\n        var rules = getAuthorizationRules(model, transformerMutationType);\r\n        // check if has apiKey and public authorization\r\n        var apiKeyAuth = rules.find(function (rule) { return rule.authStrategy === 'public' && rule.provider === 'apiKey'; });\r\n        if (apiKeyAuth) {\r\n            return { authMode: GRAPHQL_AUTH_MODE.API_KEY, isOwner: false };\r\n        }\r\n        // check if has iam authorization\r\n        if (userCredentials === USER_CREDENTIALS.unauth ||\r\n            userCredentials === USER_CREDENTIALS.auth) {\r\n            var iamPublicAuth = rules.find(function (rule) { return rule.authStrategy === 'public' && rule.provider === 'iam'; });\r\n            if (iamPublicAuth) {\r\n                return { authMode: GRAPHQL_AUTH_MODE.AWS_IAM, isOwner: false };\r\n            }\r\n            var iamPrivateAuth = userCredentials === USER_CREDENTIALS.auth &&\r\n                rules.find(function (rule) { return rule.authStrategy === 'private' && rule.provider === 'iam'; });\r\n            if (iamPrivateAuth) {\r\n                return { authMode: GRAPHQL_AUTH_MODE.AWS_IAM, isOwner: false };\r\n            }\r\n        }\r\n        // if not check if has groups authorization and token has groupClaim allowed for cognito token\r\n        var groupAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'group' && rule.provider === 'userPools'; });\r\n        var validCognitoGroup = groupAuthRules.find(function (groupAuthRule) {\r\n            // validate token agains groupClaim\r\n            var userGroups = cognitoTokenPayload[groupAuthRule.groupClaim] || [];\r\n            return userGroups.find(function (userGroup) {\r\n                return groupAuthRule.groups.find(function (group) { return group === userGroup; });\r\n            });\r\n        });\r\n        if (validCognitoGroup) {\r\n            return {\r\n                authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\r\n                isOwner: false,\r\n            };\r\n        }\r\n        // if not check if has groups authorization and token has groupClaim allowed for oidc token\r\n        groupAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'group' && rule.provider === 'oidc'; });\r\n        var validOidcGroup = groupAuthRules.find(function (groupAuthRule) {\r\n            // validate token agains groupClaim\r\n            var userGroups = oidcTokenPayload[groupAuthRule.groupClaim] || [];\r\n            userGroups.find(function (userGroup) {\r\n                return groupAuthRule.groups.find(function (group) { return group === userGroup; });\r\n            });\r\n        });\r\n        if (validOidcGroup) {\r\n            return {\r\n                authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\r\n                isOwner: false,\r\n            };\r\n        }\r\n        // check if has owner auth authorization and token ownerField for cognito token\r\n        var ownerAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'owner' && rule.provider === 'userPools'; });\r\n        ownerAuthRules.forEach(function (ownerAuthRule) {\r\n            var ownerValue = cognitoTokenPayload[ownerAuthRule.identityClaim];\r\n            if (ownerValue) {\r\n                result = {\r\n                    authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,\r\n                    isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\r\n                    ownerField: ownerAuthRule.ownerField,\r\n                    ownerValue: ownerValue,\r\n                };\r\n            }\r\n        });\r\n        if (result) {\r\n            return result;\r\n        }\r\n        // check if has owner auth authorization and token ownerField for oidc token\r\n        ownerAuthRules = rules.filter(function (rule) { return rule.authStrategy === 'owner' && rule.provider === 'oidc'; });\r\n        ownerAuthRules.forEach(function (ownerAuthRule) {\r\n            var ownerValue = oidcTokenPayload[ownerAuthRule.identityClaim];\r\n            if (ownerValue) {\r\n                result = {\r\n                    authMode: GRAPHQL_AUTH_MODE.OPENID_CONNECT,\r\n                    isOwner: ownerAuthRule.areSubscriptionsPublic ? false : true,\r\n                    ownerField: ownerAuthRule.ownerField,\r\n                    ownerValue: ownerValue,\r\n                };\r\n            }\r\n        });\r\n        if (result) {\r\n            return result;\r\n        }\r\n        return null;\r\n    };\r\n    SubscriptionProcessor.prototype.hubQueryCompletionListener = function (completed, capsule) {\r\n        var event = capsule.payload.event;\r\n        if (event === PUBSUB_CONTROL_MSG.SUBSCRIPTION_ACK) {\r\n            completed();\r\n        }\r\n    };\r\n    SubscriptionProcessor.prototype.start = function () {\r\n        var _this = this;\r\n        var ctlObservable = new Observable(function (observer) {\r\n            var promises = [];\r\n            var subscriptions = [];\r\n            var cognitoTokenPayload, oidcTokenPayload;\r\n            var userCredentials = USER_CREDENTIALS.none;\r\n            (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                var credentials, err_1, session, err_2, federatedInfo, token, payload, err_3;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    switch (_a.label) {\r\n                        case 0:\r\n                            _a.trys.push([0, 2, , 3]);\r\n                            return [4 /*yield*/, Auth.currentCredentials()];\r\n                        case 1:\r\n                            credentials = _a.sent();\r\n                            userCredentials = credentials.authenticated\r\n                                ? USER_CREDENTIALS.auth\r\n                                : USER_CREDENTIALS.unauth;\r\n                            return [3 /*break*/, 3];\r\n                        case 2:\r\n                            err_1 = _a.sent();\r\n                            return [3 /*break*/, 3];\r\n                        case 3:\r\n                            _a.trys.push([3, 5, , 6]);\r\n                            return [4 /*yield*/, Auth.currentSession()];\r\n                        case 4:\r\n                            session = _a.sent();\r\n                            cognitoTokenPayload = session.getIdToken().decodePayload();\r\n                            return [3 /*break*/, 6];\r\n                        case 5:\r\n                            err_2 = _a.sent();\r\n                            return [3 /*break*/, 6];\r\n                        case 6:\r\n                            _a.trys.push([6, 8, , 9]);\r\n                            return [4 /*yield*/, Cache.getItem('federatedInfo')];\r\n                        case 7:\r\n                            federatedInfo = _a.sent();\r\n                            token = federatedInfo.token;\r\n                            payload = token.split('.')[1];\r\n                            oidcTokenPayload = JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\r\n                            return [3 /*break*/, 9];\r\n                        case 8:\r\n                            err_3 = _a.sent();\r\n                            return [3 /*break*/, 9];\r\n                        case 9:\r\n                            Object.values(this.schema.namespaces).forEach(function (namespace) {\r\n                                Object.values(namespace.models)\r\n                                    .filter(function (_a) {\r\n                                    var syncable = _a.syncable;\r\n                                    return syncable;\r\n                                })\r\n                                    .forEach(function (modelDefinition) { return __awaiter(_this, void 0, void 0, function () {\r\n                                    var queriesMetadata;\r\n                                    var _this = this;\r\n                                    return __generator(this, function (_a) {\r\n                                        queriesMetadata = [\r\n                                            TransformerMutationType.CREATE,\r\n                                            TransformerMutationType.UPDATE,\r\n                                            TransformerMutationType.DELETE,\r\n                                        ].map(function (op) {\r\n                                            return _this.buildSubscription(namespace, modelDefinition, op, userCredentials, cognitoTokenPayload, oidcTokenPayload);\r\n                                        });\r\n                                        queriesMetadata.forEach(function (_a) {\r\n                                            var transformerMutationType = _a.opType, opName = _a.opName, query = _a.query, isOwner = _a.isOwner, ownerField = _a.ownerField, ownerValue = _a.ownerValue, authMode = _a.authMode;\r\n                                            return __awaiter(_this, void 0, void 0, function () {\r\n                                                var variables, queryObservable, subscriptionReadyCallback;\r\n                                                var _this = this;\r\n                                                return __generator(this, function (_b) {\r\n                                                    variables = {};\r\n                                                    if (isOwner) {\r\n                                                        if (!ownerValue) {\r\n                                                            // Check if there is an owner field, check where this error should be located\r\n                                                            observer.error('Owner field required, sign in is needed in order to perform this operation');\r\n                                                            return [2 /*return*/];\r\n                                                        }\r\n                                                        variables[ownerField] = ownerValue;\r\n                                                    }\r\n                                                    queryObservable = API.graphql(__assign({ query: query, variables: variables }, { authMode: authMode }));\r\n                                                    subscriptions.push(queryObservable\r\n                                                        .map(function (_a) {\r\n                                                        var value = _a.value;\r\n                                                        return value;\r\n                                                    })\r\n                                                        .subscribe({\r\n                                                        next: function (_a) {\r\n                                                            var data = _a.data, errors = _a.errors;\r\n                                                            if (Array.isArray(errors) && errors.length > 0) {\r\n                                                                var messages = errors.map(function (_a) {\r\n                                                                    var message = _a.message;\r\n                                                                    return message;\r\n                                                                });\r\n                                                                logger.warn(\"Skipping incoming subscription. Messages: \" + messages.join('\\n'));\r\n                                                                _this.drainBuffer();\r\n                                                                return;\r\n                                                            }\r\n                                                            var _b = opName, record = data[_b];\r\n                                                            _this.pushToBuffer(transformerMutationType, modelDefinition, record);\r\n                                                            _this.drainBuffer();\r\n                                                        },\r\n                                                        error: function (subscriptionError) {\r\n                                                            var _a = subscriptionError.error, _b = __read((_a === void 0 ? {\r\n                                                                errors: [],\r\n                                                            } : _a).errors, 1), _c = _b[0], _d = (_c === void 0 ? {} : _c).message, message = _d === void 0 ? '' : _d;\r\n                                                            logger.warn('subscriptionError', message);\r\n                                                            if (typeof subscriptionReadyCallback === 'function') {\r\n                                                                subscriptionReadyCallback();\r\n                                                            }\r\n                                                            observer.error(message);\r\n                                                        },\r\n                                                    }));\r\n                                                    promises.push((function () { return __awaiter(_this, void 0, void 0, function () {\r\n                                                        var boundFunction;\r\n                                                        var _this = this;\r\n                                                        return __generator(this, function (_a) {\r\n                                                            switch (_a.label) {\r\n                                                                case 0: return [4 /*yield*/, new Promise(function (res) {\r\n                                                                        subscriptionReadyCallback = res;\r\n                                                                        boundFunction = _this.hubQueryCompletionListener.bind(_this, res);\r\n                                                                        Hub.listen('api', boundFunction);\r\n                                                                    })];\r\n                                                                case 1:\r\n                                                                    _a.sent();\r\n                                                                    Hub.remove('api', boundFunction);\r\n                                                                    return [2 /*return*/];\r\n                                                            }\r\n                                                        });\r\n                                                    }); })());\r\n                                                    return [2 /*return*/];\r\n                                                });\r\n                                            });\r\n                                        });\r\n                                        return [2 /*return*/];\r\n                                    });\r\n                                }); });\r\n                            });\r\n                            Promise.all(promises).then(function () { return observer.next(CONTROL_MSG.CONNECTED); });\r\n                            return [2 /*return*/];\r\n                    }\r\n                });\r\n            }); })();\r\n            return function () {\r\n                subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); });\r\n            };\r\n        });\r\n        var dataObservable = new Observable(function (observer) {\r\n            _this.dataObserver = observer;\r\n            _this.drainBuffer();\r\n            return function () {\r\n                _this.dataObserver = null;\r\n            };\r\n        });\r\n        return [ctlObservable, dataObservable];\r\n    };\r\n    SubscriptionProcessor.prototype.pushToBuffer = function (transformerMutationType, modelDefinition, data) {\r\n        this.buffer.push([transformerMutationType, modelDefinition, data]);\r\n    };\r\n    SubscriptionProcessor.prototype.drainBuffer = function () {\r\n        var _this = this;\r\n        if (this.dataObserver) {\r\n            this.buffer.forEach(function (data) { return _this.dataObserver.next(data); });\r\n            this.buffer = [];\r\n        }\r\n    };\r\n    return SubscriptionProcessor;\r\n}());\r\nexport { SubscriptionProcessor };\r\n//# sourceMappingURL=subscription.js.map"]},"metadata":{},"sourceType":"module"}